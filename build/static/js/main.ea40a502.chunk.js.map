{"version":3,"sources":["utils/CommonUtils.js","utils/LanguageUtils.js","containers/System/Admin/UserRedux.js","containers/System/Admin/TableManagerUser.js","store/actions/actionTypes.js","containers/HomePage/Section/OutstandingDoctor.js","containers/HomePage/User_view/User/DetailUser.js","store/actions/appActions.js","store/actions/userActions.js","store/actions/adminActions.js","utils/constant.js","assets/images/Logo.png","containers/HomePage/SliderNav.js","containers/HomePage/HomeHeader.js","containers/HomePage/Section/Footer.js","store/reducers/appReducer.js","store/reducers/userReducer.js","store/reducers/adminReducer.js","store/reducers/rootReducer.js","redux.js","hoc/authentication.js","routes/Home.js","containers/Authentication/Login.js","utils/emitter.js","containers/System/ModalUser.js","containers/System/ModalEditUser.js","containers/System/UserManage.js","components/Navigator.js","containers/Header/menuApp.js","containers/Header/Header.js","containers/System/Admin/ManageDoctor.js","containers/System/Specialty/ManageSpecialty.js","containers/System/Admin/ChangePassword.js","containers/System/Clinic/ManageClinic.js","containers/System/ManageHandBook/ManageHandBook.js","routes/System.js","containers/HomePage/Section/Specialty.js","containers/HomePage/Section/MedicalFacility.js","containers/HomePage/Section/HandBook.js","containers/HomePage/Section/About.js","containers/HomePage/Section/Banner.js","containers/HomePage/HomePage.js","components/CustomScrollbars.js","containers/HomePage/User_view/Doctor/DoctorInfo.js","components/Input/DatePicker.js","containers/HomePage/User_view/Doctor/BookingModal.js","containers/HomePage/User_view/Doctor/DoctorSchedule.js","containers/HomePage/User_view/Doctor/DoctorMore.js","containers/HomePage/User_view/Doctor/DetailDoctor.js","containers/System/Doctor/ManageSchedule.js","containers/System/Doctor/ModalSendEmail.js","containers/System/Doctor/ManageAppointment.js","containers/System/Doctor/ManageHistory.js","routes/Doctor.js","containers/HomePage/User_view/VerifyEmail.js","containers/System/Admin/ForgotPW.js","containers/HomePage/User_view/Specialty/DetailSpecialty.js","containers/HomePage/User_view/Clinic/DetailClinic.js","containers/HomePage/User_view/Doctor/ViewMoreDoctor.js","containers/HomePage/User_view/Clinic/ViewMoreClinic.js","containers/HomePage/User_view/Specialty/ViewMoreSpecialty.js","containers/HomePage/User_view/HandBook/DetailHandBook.js","containers/HomePage/User_view/HandBook/ViewMoreHandBook.js","containers/System/Admin/SignUp.js","containers/App.js","serviceWorker.js","hoc/IntlProviderWrapper.js","index.js","axios.js","services/userService.js"],"names":["CommonUtils","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","flattenMessages","nestedMessages","prefix","Object","keys","reduce","messages","key","value","prefixedKey","assign","vi","messages_vi","en","messages_en","LanguageUtils","lang","UserRedux","props","showModalBooking","item","setState","isShowModalBooking","itemSelected","closeModalBooking","handleAddImg","e","a","data","target","files","getBase64","base64","objectUrl","URL","createObjectURL","previewImg","avatar","showLightbox","state","isOpen","handleChangeInput","id","copyState","validateEmail","email","String","toLowerCase","match","validatePassword","password","validatePhone","number","test","validInput","isValid","alert","phonenumber","arr","i","length","handleSubmit","preventDefault","accessToken","action","MANAGER_ACTIONS","EDIT","editUser","firstName","lastName","address","gender","roleId","role","positionId","position","image","CREATE","createUser","editToParent","user","imgBase64","Buffer","from","toString","handleChangeSearch","inputSearch","handleSearch","input","handleGetUserByEmail","res","errCode","userSearch","toast","handleDeleteUser","token","deleteUserService","success","handleEditUser","handleCloseTableSearch","handleCancel","arrGender","arrPosition","arrRole","keyMap","genderArr","positionArr","roleArr","this","getGenderStart","getPositionStart","getRoleStart","userInfo","prevProps","prevState","snapshot","listUsers","language","className","type","onChange","disabled","map","index","LENGUAGES","VI","valueVi","valueEn","hidden","htmlFor","style","backgroundImage","title","onClick","mainSrc","onCloseRequest","placeholder","_","isEmpty","size","fontSize","Component","connect","app","admin","genders","positions","roles","users","dispatch","actions","fetchUserRedux","TableManageUser","deleteUserRedux","userId","actionTypes","freeze","APP_START_UP_COMPLETE","SET_CONTENT_OF_CONFIRM_MODAL","CHANGE_LANGUAGE","ADD_USER_SUCCESS","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","PROCESS_LOGOUT","FETCH_GENDER_START","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAILED","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAILED","FETCH_ROLE_SUCCESS","FETCH_ROLE_FAILED","CREATE_USE_SUCCESS","CREATE_USE_FAILED","FETCH_ALL_USER_SUCCESS","FETCH_ALL_USER_FAILED","DELETE_USER_SUCCESS","DELETE_USER_FAILED","EDIT_USER_SUCCESS","EDIT_USER_FAILED","FETCH_TOP_DOCTOR_SUCCESS","FETCH_TOP_DOCTOR_FAILED","FETCH_ALL_DOCTORS_SUCCESS","FETCH_ALL_DOCTORS_FAILED","SAVE_INFO_DOCTORS_SUCCESS","SAVE_INFO_DOCTORS_FAILED","FETCH_INFO_DOCTORS_SUCCESS","FETCH_INFO_DOCTORS_FAILED","SAVE_ID_DOCTOR","FETCH_ALL_TIME_SUCCESS","FETCH_ALL_TIME_FAILED","FETCH_REQUIRED_DOCTOR_START","FETCH_REQUIRED_DOCTOR_SUCCESS","FETCH_REQUIRED_DOCTOR_FAILED","OutstandingDoctor","handleViewDetail","doctor","history","push","handleViewMore","arrDoctors","idInfo","infoDoctor","topDoctors","getTopDoctors","settings","positionData","withRouter","isLoggedIn","doctors","getInfoDoctor","DetailUser","isChanged","setValueInput","handleShowLoading","boolean","isLoading","userEditInfo","getInfoUser","handleShowContent","isShowInfo","isShowAppointment","showTime","dataTime","capitalizeFirstLetter","moment","unix","format","locale","handleSelectedAppointment","isShowModalDetail","selectedAppointment","closeModal","isShowModalRating","handleRating","doctorId","bookingId","patientId","sendRating","comment","rating","postRating","showBtn","getPatientAppointmentService","appoinment","listAppointment","handleCancelAppointment","patientCancelAppointment","date","timeType","isShowHistory","string","charAt","toUpperCase","slice","newRating","name","active","spinner","text","height","timeBookingData","bookingDoctorData","statusData","statusId","Doctor_Info","doctorClinicData","rows","marginRight","starRatedColor","changeRating","numberOfStars","starDimension","changeLanguageApp","languageInput","userLoginSuccess","userLoginFail","processLogout","fetchGenderStart","getState","getAllCodeService","fetchGenderSuccess","fetchGenderFailed","console","log","genderData","fetchPositionStart","fetchPositionSuccess","fetchPositionFailed","fetchRoleStart","fetchRoleSuccess","fetchRoleFailed","roleData","addUserService","warn","errMessage","createUserSuccess","fetchAllUserStart","createUserFailed","getAllUsers","fetchAllUserSuccess","reverse","fetchAllUserFailed","deleteUser","deleteUserSuccess","deleteUserFailed","editUserService","editUserSuccess","editUserFailed","fetchTopDoctor","getTopDoctorForHomeService","fetchAllDoctors","getAllDoctorService","allDoctors","saveInfoDoctor","saveInfoDoctorService","getInfoDoctorService","fetchAllTime","fetchRequiredDoctorStart","priceRes","proviceRes","paymentRes","getAllSpecialties","specialtyRes","getAllClinic","clinicRes","priceId","paymentId","proviceId","specialtyId","clinicId","fetchRequiredDoctorSuccess","fetchRequiredDoctorFailed","path","HOME","HOMEPAGE","LOGIN","SIGN_UP","LOG_OUT","SYSTEM","DETAIL_DOCTOR","DETAIL_USER","DETAIL_SPECIALTY","DETAIL_CLINIC","DETAIL_HANDBOOK","VERIFY_BOOKING_EMAIL","FORGOT_PW","VIEW_MORE_DOCTOR","VIEW_MORE_CLINIC","VIEW_MORE_SPECIALTY","VIEW_MORE_HANDBOOK","EN","READ","DELETE","USER_ROLE","ADMIN","DOCTOR","PATIENT","SliderNav","hideNavBar","handleShowNav","changeLanguage","changeLanguageAppRedux","isShow","isShowNavBar","languages","HomeHeader","goToHome","redirectToSystemPage","navigate","goToManage","changeStateShowNav","handleLogout","login","src","mainLogo","alt","Footer","href","rel","initialState","started","systemMenuPath","contentOfConfirmModal","messageId","handleFunc","dataFunc","appReducer","userReducer","isLoadingGender","idDoctorDetail","timeArr","requiredInfoDoctor","adminReducer","persistCommonConfig","storage","stateReconciler","autoMergeLevel2","userPersistConfig","whitelist","appPersistConfig","root","combineReducers","router","connectRouter","persistReducer","createBrowserHistory","basename","process","reduxStateSyncConfig","rootReducer","createRootReducer","middleware","routerMiddleware","thunkMiddleware","createStateSyncMiddleware","composeEnhancers","compose","reduxStore","createStore","applyMiddleware","persistor","persistStore","locationHelper","locationHelperBuilder","userIsAuthenticated","connectedRouterRedirect","authenticatedSelector","wrapperDisplayName","redirectPath","userIsNotAuthenticated","ownProps","getRedirectQueryParam","allowRedirectBack","Home","to","Login","handleInputUsername","username","handleInputPassword","handleShowHidePassword","isShowPassword","goToSignUp","handleLogin","handleLoginApi","message","response","handleEnterPress","handleForgotPW","forgotPWService","onKeyDown","color","_emitter","EventEmitter","setMaxListeners","emitter","ModalUser","toggle","toggleModal","handleInput","createNewUser","listenToEmitter","on","Modal","backdrop","ModalHeader","ModalBody","ModalFooter","Button","ModalEditUser","toggleEditModal","handleSaveEditUser","saveEditUser","currentUser","UserManage","getAllUsersFromReact","arrUsers","handleAddNewUser","isShowModalUser","toggleModalUser","toggleModalEditUser","isShowModalEditUser","emit","MenuGroup","children","Menu","link","hasSubMenu","onLinkClick","data-toggle","aria-expanded","SubMenu","getItemClass","location","pathname","MenuGroupWithRouter","MenuWithRouter","SubMenuWithRouter","Navigator","expandedMenu","groupIndex","menuIndex","isMenuHasSubMenuActive","subMenus","currentPath","checkActiveMenu","menus","outerLoop","group","j","menu","isSubMenuOpen","subMenu","subMenuIndex","closeOtherExpand","withRouterInnerRef","WrappedComponent","InnerComponentWithRef","forwardRef","rest","ref","React","ComponentWithRef","withRef","adminMenu","doctorMenu","Header","menuApp","mdParser","MarkdownIt","ManageDoctor","buildDataForSelectDoctor","inputData","listOptions","obj","label","buildDataForSelectSpecialty","nameVi","nameEn","buildDataForSelectClinic","buildDataForSelectInfoDoctor","handleEditorChange","html","contentHTML","contentMarkdown","handleChangeSelect","selectedOption","selectedDoctor","editInfo","handleChangeSelectInfoDoctor","statename","handleSaveDoctor","description","doctorDesc","selectedPrice","selectedPayment","selectedProvice","note","selectedClinic","selectedSpecialty","listDoctors","listPrice","listPayment","listProvice","listSpecialty","listClinic","allDoctor","options","optionsPrice","optionsPayment","optionsProvice","optionsSpecialty","optionsClinic","Doctor_Intro","findPayment","find","findPrice","findProvince","findSpecialty","findClinic","lineHight","renderHTML","render","ManageSpecialty","statusSubmit","saveSpecialtyService","editSpecialtyService","idSpecialty","handleEditSpecialty","handleDeleteSpecialty","deleteSpecialtyService","ChangePassword","newPW","handleChangePassword","oldPW","reNewPW","changePWService","newPassword","oldPassword","prevStates","ManageClinic","saveClinicService","editClinicService","idClinic","handleEditClinic","handleDeleteClinic","deleteClinicService","ManageHandBook","saveHandBookService","author","editHandBookService","idHandBook","getAllHandBook","listHandBook","deleteHandBookService","System","component","Specialty","specialty","getAllSpecialtiesForHome","MedicalFacility","clinic","getAllClinicForHome","HandBook","handbook","viewWidth","window","innerWidth","dots","infinite","speed","slidesToShow","slidesToScroll","About","Banner","HomePage","settingsSmall","CustomScrollbars","createRef","getScrollLeft","current","getScrollTop","scrollToBottom","targetScrollTop","getScrollHeight","scrollTo","targetTop","quickScroll","scrollbars","originalTop","iteration","scroll","scrollTop","setTimeout","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderNone","disableVerticalScroll","disableHorizontalScroll","otherProps","autoHide","autoHideTimeout","hideTracksWhenNotNeeded","DoctorInfo","time","timeTypeData","idDoctor","timeData","isShowPrice","isShowMore","isShowDesc","priceTypeData","DatePicker","flatpickrNode","nodeRef","element","flatpickr","node","addEventListener","handleBlur","handlerKeyDown","event","which","keyCode","KeyCodeUtils","ENTER","valueMoment","toDate","onOpen","blur","checkDateValue","str","max","num","parseInt","isNaN","autoFormatOnChange","seperator","RegExp","substr","values","split","v","replace","join","onInputChange","DISPLAY_FORMAT","DATE_FORMAT_AUTO_FILL","converted","SEPERATOR","onInputBlur","removeEventListener","close","minDate","onClose","dateFormat","allowInput","disableMobile","BookingModal","buildDataForSelect","handleOnchangeInput","handleOnchangeDatePicker","dateOfBirth","selectedGender","handleLoadingToChild","timeString","buildTimeBooking","doctorName","buildDoctorName","savePatientBooking","scheduleId","fullName","Date","getTime","reason","doctorData","goToLogin","listGender","getGender","lisGender","currentDate","textDecoration","cursor","DoctorSchedule","getArrDays","listDays","formatDay","add","startOf","valueOf","handleSelectDay","getScheduleDoctorService","availabelTime","handleShowHideBooking","dataScheduleModal","handleLoading","handleShowLoadingFromParent","dateTimestamp","countBooking","pointerEvents","backgroundColor","DoctorMore","handleDisplayDetail","stateView","isShowDetailPrice","doctorExtraInfo","getExtraDoctorInfoService","paymentTypeData","DetailDoctor","dataRating","params","getRating","dataContent","ratingDoctor","total","count","dangerouslySetInnerHTML","__html","isSelectable","ratingPatient","ManageSchedule","handleSelectSchedule","rangeTime","isSelected","formatDate","selectedTime","filter","saveScheduleService","arrSchedule","handleDeleteSchedule","deleteScheduleDoctorService","setHours","ModalSendEmail","bill","changeShowModal","changeShowLoading","sendEmailToCustomer","fullNamePatient","timeAppointment","dateAppointment","dataFromParent","bookingData","isShowModal","ManageAppointment","getAppointmenDoctorService","handleSucceed","confirmAppointmentSucceed","handleSendBill","dataForModal","cancelAppointment","ManageHistory","getHistoryDoctorService","Doctor","VerifyEmail","statusVerify","search","urlParams","URLSearchParams","get","postVerifyPatientBooking","ForgotPW","ConfirmForgotPWService","DetailSpecialty","handleOnchangeProv","getSpecialyById","listDoctorId","arrDoctor","doctorInfoData","dataDetailSpecialty","listProvince","resProvince","unshift","overflow","DetailClinic","getClinicById","dataDetailClinic","width","ViewMoreDoctor","getAllDoctorForHome","userArr","forEach","ViewMoreClinic","goToViewDetail","listClinicOptions","ViewMoreSpecialty","buildDataForSelectSpecailty","selectedSpecailty","idSpecailty","specailty","listSpecailty","listSpecailtyOptions","DetailHandBook","dataDetailHandbook","getHandBookById","ViewMoreHandBook","buildDataForSelectHandBook","selectedHandBook","listHandBookOptions","SignUp","password2","userSignUp","signUpSucceed","marginTop","App","handlePersistorState","bootstrapped","onBeforeLift","then","catch","exact","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","Boolean","hostname","getFlattenedMessages","IntlProviderWrapper","defaultLocale","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","instance","axios","create","baseURL","interceptors","use","userEmail","userPassword","post","headers","Authorization","delete","put","inputType","limit","handBookId"],"mappings":"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","file":"static/js/main.ea40a502.chunk.js","sourcesContent":["class CommonUtils {\r\n  static getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n}\r\n\r\nexport default CommonUtils;\r\n","import messages_vi from \"../translations/vi.json\";\r\nimport messages_en from \"../translations/en.json\";\r\n\r\nconst flattenMessages = (nestedMessages, prefix = \"\") => {\r\n  if (nestedMessages == null) {\r\n    return {};\r\n  }\r\n  return Object.keys(nestedMessages).reduce((messages, key) => {\r\n    const value = nestedMessages[key];\r\n    const prefixedKey = prefix ? `${prefix}.${key}` : key;\r\n\r\n    if (typeof value === \"string\") {\r\n      Object.assign(messages, { [prefixedKey]: value });\r\n    } else {\r\n      Object.assign(messages, flattenMessages(value, prefixedKey));\r\n    }\r\n\r\n    return messages;\r\n  }, {});\r\n};\r\n\r\nconst messages = {\r\n  vi: flattenMessages(messages_vi),\r\n  en: flattenMessages(messages_en),\r\n};\r\n\r\nexport default class LanguageUtils {\r\n  static getMessageByKey(key, lang) {\r\n    return messages[lang][key];\r\n  }\r\n\r\n  static getFlattenedMessages() {\r\n    return messages;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal } from \"reactstrap\";\r\nimport { LENGUAGES, MANAGER_ACTIONS, CommonUtils } from \"../../../utils\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport {\r\n  handleGetUserByEmail,\r\n  deleteUserService,\r\n} from \"../../../services/userService\";\r\nimport \"./UserRedux.scss\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport TableManagerUser from \"./TableManagerUser\";\r\nimport _ from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass UserRedux extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      genderArr: [],\r\n      positionArr: [],\r\n      roleArr: [],\r\n      previewImg: \"\",\r\n      isOpen: false,\r\n      id: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      phonenumber: \"\",\r\n      gender: \"\",\r\n      position: \"\",\r\n      role: \"\",\r\n      avatar: \"\",\r\n      action: \"\",\r\n      accessToken: [],\r\n      userSearch: {},\r\n      inputSearch: \"\",\r\n      isShowModalBooking: false,\r\n      itemSelected: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getGenderStart();\r\n    this.props.getPositionStart();\r\n    this.props.getRoleStart();\r\n    if (this.props.userInfo && this.props.userInfo.accessToken) {\r\n      let accessToken = this.props.userInfo.accessToken;\r\n      this.setState({ accessToken });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.gender !== this.props.gender) {\r\n      let arrGender = this.props.gender;\r\n      this.setState({\r\n        genderArr: this.props.gender,\r\n        gender: arrGender && arrGender.length > 0 ? arrGender[0].keyMap : \"\",\r\n      });\r\n    }\r\n\r\n    if (prevProps.position !== this.props.position) {\r\n      let arrPosition = this.props.position;\r\n      this.setState({\r\n        positionArr: this.props.position,\r\n        position:\r\n          arrPosition && arrPosition.length > 0 ? arrPosition[0].keyMap : \"\",\r\n      });\r\n    }\r\n\r\n    if (prevProps.role !== this.props.role) {\r\n      let arrRole = this.props.role;\r\n      this.setState({\r\n        roleArr: this.props.role,\r\n        role: arrRole && arrRole.length > 0 ? arrRole[0].keyMap : \"\",\r\n      });\r\n    }\r\n\r\n    if (prevProps.listUsers !== this.props.listUsers) {\r\n      let arrGender = this.props.gender;\r\n      let arrPosition = this.props.position;\r\n      let arrRole = this.props.role;\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        address: \"\",\r\n        phonenumber: \"\",\r\n        gender: arrGender && arrGender.length > 0 ? arrGender[0].keyMap : \"\",\r\n        position:\r\n          arrPosition && arrPosition.length > 0 ? arrPosition[0].keyMap : \"\",\r\n        role: arrRole && arrRole.length > 0 ? arrRole[0].keyMap : \"\",\r\n        avatar: \"\",\r\n        previewImg: \"\",\r\n        action: MANAGER_ACTIONS.CREATE,\r\n      });\r\n    }\r\n  }\r\n\r\n  showModalBooking = (item) => {\r\n    this.setState({\r\n      isShowModalBooking: true,\r\n      itemSelected: item,\r\n    });\r\n  };\r\n\r\n  closeModalBooking = () => {\r\n    this.setState({\r\n      isShowModalBooking: false,\r\n    });\r\n  };\r\n\r\n  handleAddImg = async (e) => {\r\n    let data = e.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      let objectUrl = URL.createObjectURL(file);\r\n      this.setState({\r\n        previewImg: objectUrl,\r\n        avatar: base64,\r\n      });\r\n    }\r\n  };\r\n\r\n  showLightbox = () => {\r\n    if (!this.state.previewImg) return;\r\n    this.setState({\r\n      isOpen: true,\r\n    });\r\n  };\r\n\r\n  handleChangeInput = (e, id) => {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = e.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n    });\r\n  };\r\n\r\n  validateEmail = (email) => {\r\n    return String(email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  };\r\n\r\n  validatePassword = (password) => {\r\n    return String(password).match(\r\n      /^(?=.*\\p{Ll})(?=.*\\p{Lu})(?=.*[\\d|@#$!%*?&])[\\p{L}\\d@#$!%*?&]{6,36}$/gu\r\n    );\r\n  };\r\n\r\n  validatePhone = (number) => {\r\n    return /(03|05|07|08|09|01[2|6|8|9])+([0-9]{8})\\b/.test(number);\r\n  };\r\n\r\n  validInput = () => {\r\n    let isValid = true;\r\n    if (!this.validateEmail(this.state.email)) {\r\n      isValid = false;\r\n      alert(\"Vui lòng điền địa chỉ Email hợp lệ!!\");\r\n      return;\r\n    } else if (!this.validatePassword(this.state.password)) {\r\n      isValid = false;\r\n      alert(\r\n        \"Mật khẩu phải dài ít nhất 6 ký tự, bao gồm ít nhất 1 chữ hoa, 1 chữ thường và 1 số !!\"\r\n      );\r\n      return;\r\n    } else if (!this.validatePhone(this.state.phonenumber)) {\r\n      isValid = false;\r\n      alert(\"Vui lòng điền số điện thoại hợp lệ !!\");\r\n      return;\r\n    } else {\r\n      let arr = [\"firstName\", \"lastName\", \"address\"];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (!this.state[arr[i]]) {\r\n          isValid = false;\r\n          alert(`Missing ${arr[i]}`);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let isValid = this.validInput();\r\n    if (isValid) {\r\n      let accessToken = this.state.accessToken;\r\n      if (this.state.action === MANAGER_ACTIONS.EDIT) {\r\n        this.props.editUser(\r\n          {\r\n            id: this.state.id,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            address: this.state.address,\r\n            phonenumber: this.state.phonenumber,\r\n            gender: this.state.gender,\r\n            roleId: this.state.role,\r\n            positionId: this.state.position,\r\n            image: this.state.previewImg,\r\n          },\r\n          accessToken\r\n        );\r\n        this.setState({\r\n          action: MANAGER_ACTIONS.CREATE,\r\n        });\r\n      } else {\r\n        this.props.createUser(\r\n          {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            address: this.state.address,\r\n            phonenumber: this.state.phonenumber,\r\n            gender: this.state.gender,\r\n            roleId: this.state.role,\r\n            positionId: this.state.position,\r\n            image: this.state.avatar,\r\n          },\r\n          accessToken\r\n        );\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  editToParent = (user) => {\r\n    let imgBase64 = \"\";\r\n    if (user.image) {\r\n      imgBase64 = Buffer.from(user.image, \"base64\").toString(\"binary\");\r\n    }\r\n\r\n    this.setState({\r\n      id: user.id,\r\n      email: user.email,\r\n      password: \"Pass1234\",\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      address: user.address,\r\n      phonenumber: user.phonenumber,\r\n      gender: user.gender,\r\n      position: user.positionId,\r\n      role: user.roleId,\r\n      avatar: \" \",\r\n      previewImg: imgBase64,\r\n      action: MANAGER_ACTIONS.EDIT,\r\n    });\r\n  };\r\n\r\n  handleChangeSearch = (e) => {\r\n    this.setState({ inputSearch: e.target.value });\r\n  };\r\n\r\n  handleSearch = async () => {\r\n    let { accessToken } = this.state;\r\n    let input = this.state.inputSearch;\r\n    if (!this.validateEmail(input)) {\r\n      alert(\"Vui lòng điền địa chỉ Email hợp lệ!!\");\r\n      return;\r\n    } else if (this.validateEmail(input)) {\r\n      let res = await handleGetUserByEmail(input, accessToken);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({ userSearch: res.data, inputSearch: \"\" });\r\n      } else {\r\n        toast.error(\"Người dùng không tồn tại !!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeleteUser = async () => {\r\n    let user = this.state.itemSelected;\r\n    let token = this.state.accessToken;\r\n    let res = await deleteUserService(user.id, token);\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Xoá người dùng thành công !!\");\r\n      this.setState({ userSearch: {}, isShowModalBooking: false });\r\n    } else {\r\n      toast.error(\"Có lỗi xảy ra, vui lòng thử lại !!\");\r\n    }\r\n  };\r\n\r\n  handleEditUser = async (user) => {\r\n    let imgBase64 = \"\";\r\n    if (user.image) {\r\n      imgBase64 = Buffer.from(user.image, \"base64\").toString(\"binary\");\r\n    }\r\n\r\n    this.setState({\r\n      id: user.id,\r\n      email: user.email,\r\n      password: \"Pass1234\",\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      address: user.address,\r\n      phonenumber: user.phonenumber,\r\n      gender: user.gender,\r\n      position: user.positionId,\r\n      role: user.roleId,\r\n      avatar: \" \",\r\n      previewImg: imgBase64,\r\n      action: MANAGER_ACTIONS.EDIT,\r\n      userSearch: {},\r\n    });\r\n  };\r\n\r\n  handleCloseTableSearch = () => {\r\n    this.setState({ userSearch: {} });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    let arrGender = [];\r\n    let arrPosition = [];\r\n    let arrRole = [];\r\n    if (this.props) {\r\n      arrGender = this.props.gender;\r\n      arrPosition = this.props.position;\r\n      arrRole = this.props.role;\r\n    }\r\n    this.setState({\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      phonenumber: \"\",\r\n      gender: arrGender && arrGender.length > 0 ? arrGender[0].keyMap : \"\",\r\n      position:\r\n        arrPosition && arrPosition.length > 0 ? arrPosition[0].keyMap : \"\",\r\n      role: arrRole && arrRole.length > 0 ? arrRole[0].keyMap : \"\",\r\n      avatar: \"\",\r\n      previewImg: \"\",\r\n      action: MANAGER_ACTIONS.CREATE,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { genderArr, positionArr, roleArr } = this.state;\r\n    let language = this.props.language;\r\n    let file = this.state.previewImg;\r\n    let {\r\n      email,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n      address,\r\n      phonenumber,\r\n      gender,\r\n      position,\r\n      role,\r\n      action,\r\n      userSearch,\r\n      isShowModalBooking,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"manage-container\">\r\n        <div className=\"title\">\r\n          <FormattedMessage id=\"manage-user.add\" />\r\n        </div>\r\n        <div className=\"manage-body container\">\r\n          <form className=\"row g-3 mt-5\">\r\n            <div className=\"col-md-6\">\r\n              <label className=\"form-label\">\r\n                <FormattedMessage id=\"manage-user.email\" />\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                onChange={(e) => this.handleChangeInput(e, \"email\")}\r\n                value={email}\r\n                disabled={action === MANAGER_ACTIONS.EDIT ? true : false}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"form-label\">\r\n                <FormattedMessage id=\"manage-user.password\" />\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                onChange={(e) => this.handleChangeInput(e, \"password\")}\r\n                value={password}\r\n                disabled={action === MANAGER_ACTIONS.EDIT ? true : false}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"form-label\">\r\n                <FormattedMessage id=\"manage-user.first-name\" />\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => this.handleChangeInput(e, \"firstName\")}\r\n                value={firstName}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"form-label\">\r\n                <FormattedMessage id=\"manage-user.last-name\" />\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => this.handleChangeInput(e, \"lastName\")}\r\n                value={lastName}\r\n              />\r\n            </div>\r\n            <div className=\"col-8\">\r\n              <label className=\"form-label\">\r\n                <FormattedMessage id=\"manage-user.address\" />\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => this.handleChangeInput(e, \"address\")}\r\n                value={address}\r\n              />\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <label className=\"form-label\">\r\n                <FormattedMessage id=\"manage-user.phonenumber\" />\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => this.handleChangeInput(e, \"phonenumber\")}\r\n                value={phonenumber}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <label className=\"form-label\">\r\n                <FormattedMessage id=\"manage-user.gender\" />\r\n              </label>\r\n              <select\r\n                className=\"form-select\"\r\n                onChange={(e) => this.handleChangeInput(e, \"gender\")}\r\n                value={gender}\r\n              >\r\n                {genderArr &&\r\n                  genderArr.length > 0 &&\r\n                  genderArr.map((item, index) => {\r\n                    return (\r\n                      <option key={index} value={item.keyMap}>\r\n                        {language === LENGUAGES.VI\r\n                          ? item.valueVi\r\n                          : item.valueEn}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <label className=\"form-label\">\r\n                <FormattedMessage id=\"manage-user.position\" />\r\n              </label>\r\n              <select\r\n                className=\"form-select\"\r\n                onChange={(e) => this.handleChangeInput(e, \"position\")}\r\n                value={position}\r\n              >\r\n                {positionArr &&\r\n                  positionArr.length > 0 &&\r\n                  positionArr.map((item, index) => {\r\n                    return (\r\n                      <option key={index} value={item.keyMap}>\r\n                        {language === LENGUAGES.VI\r\n                          ? item.valueVi\r\n                          : item.valueEn}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <label className=\"form-label\">\r\n                <FormattedMessage id=\"manage-user.role\" />\r\n              </label>\r\n              <select\r\n                className=\"form-select\"\r\n                onChange={(e) => this.handleChangeInput(e, \"role\")}\r\n                value={role}\r\n              >\r\n                {roleArr &&\r\n                  roleArr.length > 0 &&\r\n                  roleArr.map((item, index) => {\r\n                    return (\r\n                      <option key={index} value={item.keyMap}>\r\n                        {language === LENGUAGES.VI\r\n                          ? item.valueVi\r\n                          : item.valueEn}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <label className=\"form-label\">\r\n                <FormattedMessage id=\"manage-user.image\" />\r\n              </label>\r\n              <div className=\"input-img-container\">\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"input-img\"\r\n                  hidden\r\n                  onChange={(e) => this.handleAddImg(e)}\r\n                />\r\n                <label htmlFor=\"input-img\" className=\"img-label\">\r\n                  <FormattedMessage id=\"manage-user.upload\" />{\" \"}\r\n                  <i className=\"fas fa-upload\"></i>\r\n                </label>\r\n                {this.state.previewImg && (\r\n                  <div\r\n                    className=\"img-preview\"\r\n                    style={{ backgroundImage: `url(${file})` }}\r\n                    title=\"View Full\"\r\n                    onClick={() => this.showLightbox()}\r\n                  ></div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary px-3 btn-submit\"\r\n                onClick={(e) => this.handleSubmit(e)}\r\n              >\r\n                {action === MANAGER_ACTIONS.EDIT ? (\r\n                  <FormattedMessage id=\"manage-user.edit\" />\r\n                ) : (\r\n                  <FormattedMessage id=\"manage-user.save\" />\r\n                )}\r\n              </button>\r\n              {(email ||\r\n                password ||\r\n                firstName ||\r\n                lastName ||\r\n                address ||\r\n                this.state.previewImg ||\r\n                phonenumber) && (\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-cancel\"\r\n                  onClick={(e) => this.handleCancel(e)}\r\n                >\r\n                  Huỷ\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {this.state.isOpen === true && (\r\n          <Lightbox\r\n            mainSrc={file}\r\n            onCloseRequest={() => this.setState({ isOpen: false })}\r\n          />\r\n        )}\r\n        <div className=\"container mt-5\">\r\n          <div className=\"col-12\">\r\n            <label>Tìm người dùng:</label>\r\n            <input\r\n              className=\"form-search\"\r\n              placeholder=\"Nhập vào email\"\r\n              value={this.state.inputSearch}\r\n              onChange={(e) => this.handleChangeSearch(e)}\r\n            />\r\n            <button className=\"btn-search\" onClick={() => this.handleSearch()}>\r\n              <i className=\"fas fa-search\"></i>\r\n            </button>\r\n            {userSearch && !_.isEmpty(userSearch) && (\r\n              <table id=\"customers\" className=\"table-search\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Email</th>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Address</th>\r\n                    <th>Phonenumber</th>\r\n                    <th>Options</th>\r\n                  </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                  {\r\n                    <tr>\r\n                      <td>{userSearch.email}</td>\r\n                      <td>{userSearch.firstName}</td>\r\n                      <td>{userSearch.lastName}</td>\r\n                      <td>{userSearch.address}</td>\r\n                      <td>{userSearch.phonenumber}</td>\r\n                      <td>\r\n                        <div>\r\n                          <button\r\n                            className=\"btn btn-edit\"\r\n                            onClick={() => this.handleEditUser(userSearch)}\r\n                          >\r\n                            <i className=\"fas fa-pencil-alt\"></i>\r\n                          </button>\r\n                          <button\r\n                            className=\"btn btn-delete\"\r\n                            onClick={() => this.showModalBooking(userSearch)}\r\n                          >\r\n                            <i className=\"fas fa-trash\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  }\r\n                </tbody>\r\n                <div\r\n                  className=\"close-table\"\r\n                  onClick={() => this.handleCloseTableSearch()}\r\n                >\r\n                  <i className=\"fas fa-times\"></i>\r\n                </div>\r\n              </table>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <TableManagerUser editToParent={this.editToParent} />\r\n        <Modal\r\n          isOpen={isShowModalBooking}\r\n          className={\"schedule-modal\"}\r\n          size=\"md\"\r\n        >\r\n          <div className=\"modal-schedule-container\">\r\n            <div className=\"modal-header\">\r\n              <span>\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  onClick={() => this.closeModalBooking()}\r\n                ></i>\r\n              </span>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p className=\"text-center mt-4\" style={{ fontSize: \"20px\" }}>\r\n                Bạn muốn xoá người dùng ?\r\n              </p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"btn-confirm\"\r\n                onClick={() => this.handleDeleteUser()}\r\n              >\r\n                <FormattedMessage id=\"user-view.booking-modal.confirm\" />\r\n              </button>\r\n              <button\r\n                className=\"btn-cancel\"\r\n                onClick={() => this.closeModalBooking()}\r\n              >\r\n                <FormattedMessage id=\"user-view.booking-modal.cancel\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    gender: state.admin.genders,\r\n    position: state.admin.positions,\r\n    role: state.admin.roles,\r\n    listUsers: state.admin.users,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n    getPositionStart: () => dispatch(actions.fetchPositionStart()),\r\n    getRoleStart: () => dispatch(actions.fetchRoleStart()),\r\n    createUser: (data, token) => dispatch(actions.createUser(data, token)),\r\n    fetchUserRedux: () => dispatch(actions.fetchAllUserStart()),\r\n    editUser: (data, token) => dispatch(actions.editUser(data, token)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal } from \"reactstrap\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\n\r\nclass TableManageUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listUsers: [],\r\n      isShowModalBooking: false,\r\n      itemSelected: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.userInfo && this.props.userInfo.accessToken) {\r\n      let accessToken = this.props.userInfo.accessToken;\r\n      if (this.props.userInfo) {\r\n        this.props.fetchUserRedux(accessToken);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.listUsers !== this.props.listUsers) {\r\n      this.setState({\r\n        listUsers: this.props.listUsers,\r\n      });\r\n    }\r\n  }\r\n\r\n  showModalBooking = (item) => {\r\n    this.setState({\r\n      isShowModalBooking: true,\r\n      itemSelected: item,\r\n    });\r\n  };\r\n\r\n  closeModalBooking = () => {\r\n    this.setState({\r\n      isShowModalBooking: false,\r\n    });\r\n  };\r\n\r\n  handleDeleteUser() {\r\n    let user = this.state.itemSelected;\r\n    if (this.props.userInfo && this.props.userInfo.accessToken) {\r\n      let accessToken = this.props.userInfo.accessToken;\r\n      if (this.props.userInfo) {\r\n        this.props.deleteUserRedux(user.id, accessToken);\r\n        this.setState({ isShowModalBooking: false });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEditUser(user) {\r\n    this.props.editToParent(user);\r\n  }\r\n\r\n  render() {\r\n    let users = this.state.listUsers;\r\n    let isShowModalBooking = this.state.isShowModalBooking;\r\n    return (\r\n      <>\r\n        <div className=\"users-container container my-5\">\r\n          <table id=\"customers\">\r\n            <thead>\r\n              <tr>\r\n                <th>Email</th>\r\n                <th>User Name</th>\r\n                {/* <th>Last Name</th> */}\r\n                {/* <th>Address</th> */}\r\n                <th>Phonenumber</th>\r\n                <th>Options</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {users.map((item, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{item.email}</td>\r\n                    <td>{`${item.lastName} ${item.firstName}`}</td>\r\n                    {/* <td>{item.lastName}</td> */}\r\n                    {/* <td>{item.address}</td> */}\r\n                    <td>{item.phonenumber}</td>\r\n                    <td>\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-edit\"\r\n                          onClick={() => this.handleEditUser(item)}\r\n                        >\r\n                          <i className=\"fas fa-pencil-alt\"></i>\r\n                        </button>\r\n                        <button\r\n                          className=\"btn btn-delete\"\r\n                          onClick={() => this.showModalBooking(item)}\r\n                        >\r\n                          <i className=\"fas fa-trash\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <Modal\r\n          isOpen={isShowModalBooking}\r\n          className={\"schedule-modal\"}\r\n          size=\"md\"\r\n        >\r\n          <div className=\"modal-schedule-container\">\r\n            <div className=\"modal-header\">\r\n              <span>\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  onClick={() => this.closeModalBooking()}\r\n                ></i>\r\n              </span>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p className=\"text-center mt-4\" style={{ fontSize: \"20px\" }}>\r\n                Bạn muốn xoá người dùng ?\r\n              </p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"btn-confirm\"\r\n                onClick={() => this.handleDeleteUser()}\r\n              >\r\n                <FormattedMessage id=\"user-view.booking-modal.confirm\" />\r\n              </button>\r\n              <button\r\n                className=\"btn-cancel\"\r\n                onClick={() => this.closeModalBooking()}\r\n              >\r\n                <FormattedMessage id=\"user-view.booking-modal.cancel\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listUsers: state.admin.users,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchUserRedux: (token) => dispatch(actions.fetchAllUserStart(token)),\r\n    deleteUserRedux: (userId, token) =>\r\n      dispatch(actions.deleteUser(userId, token)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageUser);\r\n","const actionTypes = Object.freeze({\r\n  //app\r\n  APP_START_UP_COMPLETE: \"APP_START_UP_COMPLETE\",\r\n  SET_CONTENT_OF_CONFIRM_MODAL: \"SET_CONTENT_OF_CONFIRM_MODAL\",\r\n  CHANGE_LANGUAGE: \"CHANGE_LANGUAGE\",\r\n\r\n  //user\r\n  ADD_USER_SUCCESS: \"ADD_USER_SUCCESS\",\r\n  USER_LOGIN_SUCCESS: \"USER_LOGIN_SUCCESS\",\r\n  USER_LOGIN_FAIL: \"USER_LOGIN_FAIL\",\r\n  PROCESS_LOGOUT: \"PROCESS_LOGOUT\",\r\n\r\n  //admin\r\n  FETCH_GENDER_START: \"FETCH_GENDER_START\",\r\n  FETCH_GENDER_SUCCESS: \"FETCH_GENDER_SUCCESS\",\r\n  FETCH_GENDER_FAILED: \"FETCH_GENDER_FAILED\",\r\n  FETCH_POSITION_SUCCESS: \"FETCH_POSITION_SUCCESS\",\r\n  FETCH_POSITION_FAILED: \"FETCH_POSITION_FAILED\",\r\n  FETCH_ROLE_SUCCESS: \"FETCH_ROLE_SUCCESS\",\r\n  FETCH_ROLE_FAILED: \"FETCH_ROLE_FAILED\",\r\n\r\n  CREATE_USE_SUCCESS: \"CREATE_USE_SUCCESS\",\r\n  CREATE_USE_FAILED: \"CREATE_USE_FAILED\",\r\n\r\n  FETCH_ALL_USER_SUCCESS: \"FETCH_ALL_USER_SUCCESS\",\r\n  FETCH_ALL_USER_FAILED: \"FETCH_ALL_USER_FAILED\",\r\n\r\n  DELETE_USER_SUCCESS: \"DELETE_USER_SUCCESS\",\r\n  DELETE_USER_FAILED: \"DELETE_USER_FAILED\",\r\n\r\n  EDIT_USER_SUCCESS: \"EDIT_USER_SUCCESS\",\r\n  EDIT_USER_FAILED: \"EDIT_USER_FAILED\",\r\n\r\n  FETCH_TOP_DOCTOR_SUCCESS: \"FETCH_TOP_DOCTOR_SUCCESS\",\r\n  FETCH_TOP_DOCTOR_FAILED: \"FETCH_TOP_DOCTOR_FAILED\",\r\n\r\n  FETCH_ALL_DOCTORS_SUCCESS: \"FETCH_ALL_DOCTORS_SUCCESS\",\r\n  FETCH_ALL_DOCTORS_FAILED: \"FETCH_ALL_DOCTORS_FAILED\",\r\n\r\n  SAVE_INFO_DOCTORS_SUCCESS: \"SAVE_INFODOCTORS_SUCCESS\",\r\n  SAVE_INFO_DOCTORS_FAILED: \"SAVE_INFODOCTORS_FAILED\",\r\n\r\n  FETCH_INFO_DOCTORS_SUCCESS: \"FETCH_INFO_DOCTORS_SUCCESS\",\r\n  FETCH_INFO_DOCTORS_FAILED: \"FETCH_INFO_DOCTORS_FAILED\",\r\n\r\n  SAVE_ID_DOCTOR: \"SAVE_ID_DOCTOR\",\r\n\r\n  FETCH_ALL_TIME_SUCCESS: \"FETCH_ALL_TIME_SUCCESS\",\r\n  FETCH_ALL_TIME_FAILED: \"FETCH_ALL_TIME_FAILED\",\r\n\r\n  FETCH_REQUIRED_DOCTOR_START: \"FETCH_REQUIRED_DOCTOR_START\",\r\n  FETCH_REQUIRED_DOCTOR_SUCCESS: \"FETCH_REQUIRED_DOCTOR_SUCCESS\",\r\n  FETCH_REQUIRED_DOCTOR_FAILED: \"FETCH_REQUIRED_DOCTOR_FAILED\",\r\n});\r\n\r\nexport default actionTypes;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport { LENGUAGES } from \"../../../utils/constant\";\r\nimport Slider from \"react-slick\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass OutstandingDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrDoctors: [],\r\n      idInfo: \"\",\r\n      infoDoctor: [],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.topDoctors !== this.props.topDoctors) {\r\n      this.setState({\r\n        arrDoctors: this.props.topDoctors,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getTopDoctors();\r\n  }\r\n\r\n  handleViewDetail = (doctor) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-doctor/${doctor.id}`);\r\n    }\r\n  };\r\n\r\n  handleViewMore = () => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/view-more-doctor`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { arrDoctors } = this.state;\r\n    let { language } = this.props;\r\n    return (\r\n      <div className=\"section-common section-outstanding-doctor\">\r\n        <div className=\"section-container container\">\r\n          <div className=\"section-header\">\r\n            <h3 className=\"section-title\">\r\n              <FormattedMessage id=\"home-page.outstanding-doctor\" />\r\n            </h3>\r\n            <button\r\n              className=\"section-btn\"\r\n              onClick={() => this.handleViewMore()}\r\n            >\r\n              <FormattedMessage id=\"home-page.view-all\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"section-body\">\r\n            <Slider {...this.props.settings}>\r\n              {arrDoctors &&\r\n                arrDoctors.length > 0 &&\r\n                arrDoctors.map((item, index) => {\r\n                  let imgBase64 = \"\";\r\n                  if (item.image) {\r\n                    imgBase64 = Buffer.from(item.image, \"base64\").toString(\r\n                      \"binary\"\r\n                    );\r\n                  }\r\n                  let valueVi = `${item.positionData.valueVi}, ${item.lastName} ${item.firstName}`;\r\n                  let valueEn = `${item.positionData.valueEn}, ${item.firstName} ${item.lastName}`;\r\n                  return (\r\n                    <div\r\n                      className=\"section-custom text-center\"\r\n                      key={index}\r\n                      onClick={() => this.handleViewDetail(item)}\r\n                    >\r\n                      <div className=\"custom-img\">\r\n                        <div\r\n                          className=\"section-img doctor-img\"\r\n                          style={{ backgroundImage: `url(${imgBase64})` }}\r\n                        ></div>\r\n                        <p>{language === LENGUAGES.VI ? valueVi : valueEn}</p>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n    topDoctors: state.admin.doctors,\r\n    infoDoctor: state.admin.infoDoctor,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getTopDoctors: () => dispatch(actions.fetchTopDoctor()),\r\n    getInfoDoctor: (id) => dispatch(actions.getInfoDoctor(id)),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(OutstandingDoctor)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./DetailUser.scss\";\r\nimport { withRouter } from \"react-router\";\r\nimport HomeHeader from \"../../HomeHeader\";\r\nimport Footer from \"../../Section/Footer\";\r\nimport {\r\n  userEditInfo,\r\n  getInfoUser,\r\n  getPatientAppointmentService,\r\n  postRating,\r\n  patientCancelAppointment,\r\n} from \"../../../../services/userService\";\r\nimport { LENGUAGES, CommonUtils } from \"../../../../utils\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport * as actions from \"../../../../store/actions\";\r\nimport { toast } from \"react-toastify\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport moment from \"moment\";\r\nimport localization from \"moment/locale/vi\";\r\nimport _ from \"lodash\";\r\nimport { Modal } from \"reactstrap\";\r\nimport StarRatings from \"react-star-ratings\";\r\n\r\nclass DetailUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShowInfo: true,\r\n      isShowAppointment: false,\r\n      isShowHistory: false,\r\n      isLoading: false,\r\n      email: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      phonenumber: \"\",\r\n      gender: \"\",\r\n      genderArr: [],\r\n      previewImg: \"\",\r\n      id: \"\",\r\n      avatar: \"\",\r\n      userInfo: [],\r\n      isOpen: false,\r\n      isChanged: false,\r\n      listAppointment: [],\r\n      isShowModalDetail: false,\r\n      selectedAppointment: \"\",\r\n      isShowModalRating: false,\r\n      rating: 0,\r\n      comment: \"\",\r\n      doctorId: \"\",\r\n      patientId: \"\",\r\n      bookingId: \"\",\r\n      showBtn: true,\r\n      isShowModalBooking: false,\r\n      itemSelected: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.gender !== this.props.gender) {\r\n      let arrGender = this.props.gender;\r\n      this.setState({\r\n        genderArr: this.props.gender,\r\n        gender: arrGender && arrGender.length > 0 ? arrGender[0].keyMap : \"\",\r\n      });\r\n    }\r\n    if (prevProps.userInfo !== this.props.userInfo) {\r\n      if (this.props.userInfo && this.props.userInfo.id) {\r\n        let id = this.props.userInfo.id;\r\n        let res = await getInfoUser(id);\r\n        if (res && res.errCode === 0) {\r\n          let data = res.users;\r\n          this.setValueInput(data);\r\n        }\r\n        let appoinment = await getPatientAppointmentService(id);\r\n        if (appoinment && appoinment.errCode === 0) {\r\n          this.setState({\r\n            listAppointment: appoinment.data,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  showModalBooking = (item) => {\r\n    this.setState({\r\n      isShowModalBooking: true,\r\n      itemSelected: item,\r\n    });\r\n  };\r\n\r\n  closeModalBooking = () => {\r\n    this.setState({\r\n      isShowModalBooking: false,\r\n    });\r\n  };\r\n\r\n  handleAddImg = async (e) => {\r\n    let data = e.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      let objectUrl = URL.createObjectURL(file);\r\n      this.setState({\r\n        previewImg: objectUrl,\r\n        avatar: base64,\r\n        isChanged: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChangeInput = (e, id) => {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = e.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n      isChanged: true,\r\n    });\r\n  };\r\n\r\n  setValueInput = (input) => {\r\n    let data = input;\r\n    let imgBase64 = \"\";\r\n    if (data.image && data.image.data) {\r\n      imgBase64 = Buffer.from(data.image.data, \"base64\").toString(\"binary\");\r\n    }\r\n    this.setState({\r\n      userInfo: data,\r\n      email: data.email,\r\n      firstName: data.firstName,\r\n      lastName: data.lastName,\r\n      address: data.address,\r\n      phonenumber: data.phonenumber,\r\n      previewImg: imgBase64,\r\n      avatar: data.image && data.image.data ? data.image.data : \"\",\r\n      gender: data.gender,\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.props.getGenderStart();\r\n    if (this.props.userInfo && this.props.userInfo.id) {\r\n      let id = this.props.userInfo.id;\r\n      let res = await getInfoUser(id);\r\n      if (res && res.errCode === 0) {\r\n        let data = res.users;\r\n        this.setValueInput(data);\r\n      }\r\n      let appoinment = await getPatientAppointmentService(id);\r\n      if (appoinment && appoinment.errCode === 0) {\r\n        this.setState({\r\n          listAppointment: appoinment.data,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleShowLoading = (boolean) => {\r\n    this.setState({\r\n      isLoading: boolean,\r\n    });\r\n  };\r\n\r\n  validatePhone = (number) => {\r\n    return /(03|05|07|08|09|01[2|6|8|9])+([0-9]{8})\\b/.test(number);\r\n  };\r\n\r\n  validInput = () => {\r\n    let isValid = true;\r\n    if (!this.validatePhone(this.state.phonenumber)) {\r\n      isValid = false;\r\n      alert(\"Vui lòng điền chính xác số điện thoại !!\");\r\n      return;\r\n    } else {\r\n      let arr = [\"firstName\", \"lastName\", \"address\"];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (!this.state[arr[i]]) {\r\n          isValid = false;\r\n          alert(`Vui lòng điền đủ thông tin !!`);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let isValid = this.validInput();\r\n    if (isValid) {\r\n      this.setState({ isLoading: true });\r\n      let res = await userEditInfo({\r\n        id:\r\n          this.props.userInfo && this.props.userInfo.id\r\n            ? this.props.userInfo.id\r\n            : -1,\r\n        password: this.state.password,\r\n        firstName: this.state.firstName,\r\n        lastName: this.state.lastName,\r\n        address: this.state.address,\r\n        phonenumber: this.state.phonenumber,\r\n        gender: this.state.gender,\r\n        image: this.state.avatar,\r\n      });\r\n      this.setState({ isLoading: false, isChanged: false });\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"Lưu thay đổi thành công !!\");\r\n        if (this.props.userInfo && this.props.userInfo.id) {\r\n          let id = this.props.userInfo.id;\r\n          let res = await getInfoUser(id);\r\n          if (res && res.errCode === 0) {\r\n            let data = res.users;\r\n            this.setValueInput(data);\r\n          }\r\n        }\r\n      } else {\r\n        toast.error(\"Có lỗi xảy ra, vui lòng thử lại !!\");\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  handleCancel = async () => {\r\n    if (this.props.userInfo && this.props.userInfo.id) {\r\n      let id = this.props.userInfo.id;\r\n      let res = await getInfoUser(id);\r\n      if (res && res.errCode === 0) {\r\n        let data = res.users;\r\n        this.setValueInput(data);\r\n      }\r\n    }\r\n  };\r\n\r\n  showLightbox = () => {\r\n    if (!this.state.previewImg) return;\r\n    this.setState({\r\n      isOpen: true,\r\n    });\r\n  };\r\n\r\n  handleShowContent = (id) => {\r\n    if (id === \"info\") {\r\n      this.setState({\r\n        isShowInfo: true,\r\n        isShowAppointment: false,\r\n      });\r\n    } else if (id === \"appointment\") {\r\n      this.setState({\r\n        isShowInfo: false,\r\n        isShowAppointment: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  showTime = (dataTime) => {\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let date =\r\n        this.props.language === LENGUAGES.VI\r\n          ? this.capitalizeFirstLetter(\r\n              moment.unix(+dataTime / 1000).format(\"dddd - DD/MM/YYYY\")\r\n            )\r\n          : moment\r\n              .unix(+dataTime / 1000)\r\n              .locale(\"en\")\r\n              .format(\"ddd - MM/DD/YYYY\");\r\n      return date;\r\n    }\r\n  };\r\n\r\n  handleSelectedAppointment = (item) => {\r\n    this.setState({\r\n      isShowModalDetail: true,\r\n      selectedAppointment: item,\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      isShowModalDetail: false,\r\n      isShowModalRating: false,\r\n    });\r\n  };\r\n\r\n  handleRating = (item) => {\r\n    this.setState({\r\n      isShowModalRating: true,\r\n      selectedAppointment: item,\r\n      doctorId: item.doctorId,\r\n      bookingId: item.id,\r\n      patientId: item.patientId,\r\n    });\r\n  };\r\n\r\n  changeRating(newRating, name) {\r\n    this.setState({\r\n      rating: newRating,\r\n    });\r\n  }\r\n\r\n  sendRating = async () => {\r\n    let { doctorId, comment, rating, patientId, bookingId } = this.state;\r\n    this.setState({ isLoading: true });\r\n    let res = await postRating({\r\n      doctorId: doctorId,\r\n      patientId: patientId,\r\n      bookingId: bookingId,\r\n      comment: comment,\r\n      rating: rating,\r\n    });\r\n    this.setState({ isLoading: false });\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Gửi đánh giá thành công !!\");\r\n      this.setState({\r\n        showBtn: false,\r\n        isShowModalRating: false,\r\n      });\r\n      if (this.props.userInfo && this.props.userInfo.id) {\r\n        let id = this.props.userInfo.id;\r\n        let appoinment = await getPatientAppointmentService(id);\r\n        if (appoinment && appoinment.errCode === 0) {\r\n          this.setState({\r\n            listAppointment: appoinment.data,\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      toast.error(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n    }\r\n  };\r\n\r\n  handleCancelAppointment = async () => {\r\n    let item = this.state.itemSelected;\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let res = await patientCancelAppointment({\r\n      bookingId: item.id,\r\n      doctorId: item.doctorId,\r\n      patientId: item.patientId,\r\n      date: item.date,\r\n      timeType: item.timeType,\r\n    });\r\n    this.setState({\r\n      isLoading: false,\r\n    });\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Huỷ lịch hẹn thành công !!\");\r\n      this.setState({ isShowModalBooking: false });\r\n      if (this.props.userInfo && this.props.userInfo.id) {\r\n        let id = this.props.userInfo.id;\r\n        let appoinment = await getPatientAppointmentService(id);\r\n        if (appoinment && appoinment.errCode === 0) {\r\n          this.setState({\r\n            listAppointment: appoinment.data,\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      this.setState({ isShowModalBooking: false });\r\n      toast.error(\"Huỷ lịch hẹn thất bại, vui lòng thử lại !!\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { genderArr, isShowModalBooking } = this.state;\r\n    let language = this.props.language;\r\n    let file = this.state.previewImg;\r\n    let {\r\n      email,\r\n      firstName,\r\n      lastName,\r\n      address,\r\n      phonenumber,\r\n      gender,\r\n      isChanged,\r\n      isShowInfo,\r\n      isShowAppointment,\r\n      listAppointment,\r\n      isShowModalDetail,\r\n      selectedAppointment,\r\n      isShowModalRating,\r\n      showBtn,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <LoadingOverlay active={this.state.isLoading} spinner text=\"Loading...\">\r\n          <div className=\"detail-specialty-container\">\r\n            <HomeHeader />\r\n            <div className=\"detail-specialty-content container user-detail\">\r\n              <div className=\"user-option\">\r\n                <div className=\"about-user\">\r\n                  <div\r\n                    className=\"user-img\"\r\n                    style={{ backgroundImage: `url(${file})` }}\r\n                  ></div>\r\n                  <div className=\"user-name\">\r\n                    {language === LENGUAGES.VI\r\n                      ? `${lastName} ${firstName}`\r\n                      : `${firstName} ${lastName}`}\r\n                  </div>\r\n                </div>\r\n                <div className=\"user-list-options\">\r\n                  <div\r\n                    className=\"user-list-item\"\r\n                    onClick={() => this.handleShowContent(\"info\")}\r\n                  >\r\n                    <FormattedMessage id=\"homeheader.user-info\" />\r\n                  </div>\r\n                  <div\r\n                    className=\"user-list-item\"\r\n                    onClick={() => this.handleShowContent(\"appointment\")}\r\n                  >\r\n                    <FormattedMessage id=\"homeheader.appointments-status\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"user-content\">\r\n                {isShowInfo === true ? (\r\n                  <>\r\n                    <div className=\"content-title\">\r\n                      <FormattedMessage id=\"homeheader.user-info\" />\r\n                    </div>\r\n                    <form className=\"row g-3 mt-5\">\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">\r\n                          <FormattedMessage id=\"manage-user.email\" />\r\n                        </label>\r\n                        <input\r\n                          type=\"email\"\r\n                          className=\"form-control\"\r\n                          onChange={(e) => this.handleChangeInput(e, \"email\")}\r\n                          value={email}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">\r\n                          <FormattedMessage id=\"manage-user.first-name\" />\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          onChange={(e) =>\r\n                            this.handleChangeInput(e, \"firstName\")\r\n                          }\r\n                          value={firstName}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">\r\n                          <FormattedMessage id=\"manage-user.last-name\" />\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          onChange={(e) =>\r\n                            this.handleChangeInput(e, \"lastName\")\r\n                          }\r\n                          value={lastName}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <label className=\"form-label\">\r\n                          <FormattedMessage id=\"manage-user.phonenumber\" />\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          onChange={(e) =>\r\n                            this.handleChangeInput(e, \"phonenumber\")\r\n                          }\r\n                          value={phonenumber}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-8\">\r\n                        <label className=\"form-label\">\r\n                          <FormattedMessage id=\"manage-user.address\" />\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          onChange={(e) => this.handleChangeInput(e, \"address\")}\r\n                          value={address}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">\r\n                          <FormattedMessage id=\"manage-user.gender\" />\r\n                        </label>\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={(e) => this.handleChangeInput(e, \"gender\")}\r\n                          value={gender}\r\n                        >\r\n                          {genderArr &&\r\n                            genderArr.length > 0 &&\r\n                            genderArr.map((item, index) => {\r\n                              return (\r\n                                <option key={index} value={item.keyMap}>\r\n                                  {language === LENGUAGES.VI\r\n                                    ? item.valueVi\r\n                                    : item.valueEn}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                        </select>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-4\">\r\n                        <label className=\"form-label\">\r\n                          <FormattedMessage id=\"manage-user.image\" />\r\n                        </label>\r\n                        <div className=\"input-img-container\">\r\n                          <input\r\n                            type=\"file\"\r\n                            id=\"input-img\"\r\n                            hidden\r\n                            onChange={(e) => this.handleAddImg(e)}\r\n                          />\r\n                          <label htmlFor=\"input-img\" className=\"img-label\">\r\n                            <FormattedMessage id=\"manage-user.upload\" />{\" \"}\r\n                            <i className=\"fas fa-upload\"></i>\r\n                          </label>\r\n                          {this.state.previewImg && (\r\n                            <div\r\n                              className=\"img-preview\"\r\n                              style={{ backgroundImage: `url(${file})` }}\r\n                              title=\"View Full\"\r\n                              onClick={() => this.showLightbox()}\r\n                            ></div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      {isChanged === true ? (\r\n                        <div className=\"col-12\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary px-3 btn-submit\"\r\n                            onClick={(e) => this.handleSubmit(e)}\r\n                          >\r\n                            <FormattedMessage id=\"menu.doctor.save-schedule\" />\r\n                          </button>\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary btn-cancel\"\r\n                            onClick={() => this.handleCancel()}\r\n                            style={{ height: \"40px\" }}\r\n                          >\r\n                            <FormattedMessage id=\"user-view.booking-modal.cancel\" />\r\n                          </button>\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </form>\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n\r\n                {isShowAppointment === true ? (\r\n                  <>\r\n                    <div className=\"content-title\">\r\n                      <FormattedMessage id=\"homeheader.appointments-status\" />\r\n                    </div>\r\n                    <div className=\"users-container container my-5\">\r\n                      <table id=\"customers\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>\r\n                              <FormattedMessage id=\"homeheader.date\" />\r\n                            </th>\r\n                            <th>\r\n                              <FormattedMessage id=\"homeheader.time\" />\r\n                            </th>\r\n                            <th>\r\n                              <FormattedMessage id=\"homeheader.doctor\" />\r\n                            </th>\r\n                            <th>\r\n                              <FormattedMessage id=\"homeheader.status\" />\r\n                            </th>\r\n                            <th>\r\n                              <FormattedMessage id=\"homeheader.options\" />\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {listAppointment &&\r\n                            listAppointment.length > 0 &&\r\n                            listAppointment.map((item, index) => {\r\n                              return (\r\n                                <tr key={index}>\r\n                                  <td>{this.showTime(item.date)}</td>\r\n                                  <td>\r\n                                    {language === LENGUAGES.VI\r\n                                      ? item.timeBookingData.valueVi\r\n                                      : item.timeBookingData.valueEn}\r\n                                  </td>\r\n                                  <td>\r\n                                    {language === LENGUAGES.VI\r\n                                      ? `${item.bookingDoctorData.lastName} ${item.bookingDoctorData.firstName}`\r\n                                      : `${item.bookingDoctorData.firstName} ${item.bookingDoctorData.lastName}`}\r\n                                  </td>\r\n                                  <td>\r\n                                    {language === LENGUAGES.VI\r\n                                      ? item.statusData.valueVi\r\n                                      : item.statusData.valueEn}\r\n                                  </td>\r\n                                  <td>\r\n                                    <div>\r\n                                      <button\r\n                                        className=\"btn btn-edit\"\r\n                                        onClick={() =>\r\n                                          this.handleSelectedAppointment(item)\r\n                                        }\r\n                                      >\r\n                                        <FormattedMessage id=\"homeheader.view-detail\" />\r\n                                      </button>\r\n                                      {item.statusId === \"S3\" &&\r\n                                        showBtn === true && (\r\n                                          <button\r\n                                            className=\"btn btn-send\"\r\n                                            onClick={() =>\r\n                                              this.handleRating(item)\r\n                                            }\r\n                                          >\r\n                                            <FormattedMessage id=\"homeheader.rating\" />\r\n                                          </button>\r\n                                        )}\r\n                                      {item.statusId === \"S1\" &&\r\n                                        showBtn === true && (\r\n                                          <button\r\n                                            className=\"btn btn-danger px-2\"\r\n                                            onClick={() =>\r\n                                              this.showModalBooking(item)\r\n                                            }\r\n                                          >\r\n                                            <FormattedMessage id=\"homeheader.cancel\" />\r\n                                          </button>\r\n                                        )}\r\n                                    </div>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n          {this.state.isOpen === true && (\r\n            <Lightbox\r\n              mainSrc={file}\r\n              onCloseRequest={() => this.setState({ isOpen: false })}\r\n            />\r\n          )}\r\n          {selectedAppointment && !_.isEmpty(selectedAppointment) && (\r\n            <Modal\r\n              isOpen={isShowModalDetail}\r\n              className={\"schedule-modal\"}\r\n              size=\"md\"\r\n            >\r\n              <div className=\"modal-schedule-container\">\r\n                <div className=\"modal-header\">\r\n                  <span>\r\n                    <FormattedMessage id=\"user-view.booking-modal.info-booking\" />\r\n                  </span>\r\n                  <span>\r\n                    <i\r\n                      className=\"fas fa-times\"\r\n                      onClick={() => this.closeModal()}\r\n                    ></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"info-schedule\"></div>\r\n                  <div className=\"row container\">\r\n                    <div className=\"col-12 my-2\">\r\n                      {language === LENGUAGES.VI\r\n                        ? `Bác sĩ: ${selectedAppointment.bookingDoctorData.lastName} ${selectedAppointment.bookingDoctorData.firstName}`\r\n                        : `Doctor: ${selectedAppointment.bookingDoctorData.firstName} ${selectedAppointment.bookingDoctorData.lastName}`}\r\n                    </div>\r\n                    <div className=\"col-12 my-2\">\r\n                      {language === LENGUAGES.VI\r\n                        ? `Tên cơ sở: ${selectedAppointment.bookingDoctorData.Doctor_Info.doctorClinicData.name}`\r\n                        : `Clinic's name: ${selectedAppointment.bookingDoctorData.Doctor_Info.doctorClinicData.name}`}\r\n                    </div>\r\n                    <div className=\"col-12 my-2\">\r\n                      {language === LENGUAGES.VI\r\n                        ? `Địa chỉ: ${selectedAppointment.bookingDoctorData.Doctor_Info.doctorClinicData.address}`\r\n                        : `Address: ${selectedAppointment.bookingDoctorData.Doctor_Info.doctorClinicData.address}`}\r\n                    </div>\r\n                    <div className=\"col-12 my-2\">\r\n                      {language === LENGUAGES.VI\r\n                        ? `Ngày: ${this.showTime(selectedAppointment.date)}`\r\n                        : `Date: ${this.showTime(selectedAppointment.date)}`}\r\n                    </div>\r\n                    <div className=\"col-12 my-2\">\r\n                      {language === LENGUAGES.VI\r\n                        ? `Thời gian: ${selectedAppointment.timeBookingData.valueVi}`\r\n                        : `Time: ${selectedAppointment.timeBookingData.valueEn}`}\r\n                    </div>\r\n                    <div className=\"col-12 my-2\">\r\n                      {language === LENGUAGES.VI\r\n                        ? `Trạng thái: ${selectedAppointment.statusData.valueVi}`\r\n                        : `Status: ${selectedAppointment.statusData.valueEn}`}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Modal>\r\n          )}\r\n          {selectedAppointment && !_.isEmpty(selectedAppointment) && (\r\n            <Modal\r\n              isOpen={isShowModalRating}\r\n              className={\"schedule-modal\"}\r\n              size=\"lg\"\r\n            >\r\n              <div className=\"modal-schedule-container\">\r\n                <div className=\"modal-header\">\r\n                  <span>\r\n                    <FormattedMessage id=\"homeheader.rating\" />\r\n                  </span>\r\n                  <span>\r\n                    <i\r\n                      className=\"fas fa-times\"\r\n                      onClick={() => this.closeModal()}\r\n                    ></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"info-schedule\"></div>\r\n                  <div className=\"row container\">\r\n                    <div className=\"col-12 my-2\">\r\n                      {language === LENGUAGES.VI\r\n                        ? `Bác sĩ: ${selectedAppointment.bookingDoctorData.lastName} ${selectedAppointment.bookingDoctorData.firstName}`\r\n                        : `Doctor: ${selectedAppointment.bookingDoctorData.firstName} ${selectedAppointment.bookingDoctorData.lastName}`}\r\n                    </div>\r\n                    <div className=\"col-12 my-2\">\r\n                      {language === LENGUAGES.VI\r\n                        ? `Tên cơ sở: ${selectedAppointment.bookingDoctorData.Doctor_Info.doctorClinicData.name}`\r\n                        : `Clinic's name: ${selectedAppointment.bookingDoctorData.Doctor_Info.doctorClinicData.name}`}\r\n                    </div>\r\n                    <div className=\"col-12 my-2\">\r\n                      {language === LENGUAGES.VI\r\n                        ? `Địa chỉ: ${selectedAppointment.bookingDoctorData.Doctor_Info.doctorClinicData.address}`\r\n                        : `Address: ${selectedAppointment.bookingDoctorData.Doctor_Info.doctorClinicData.address}`}\r\n                    </div>\r\n                    <div className=\"col-12 my-2\">\r\n                      <label>\r\n                        <FormattedMessage id=\"homeheader.comment\" />\r\n                      </label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        rows={4}\r\n                        onChange={(e) => this.handleChangeInput(e, \"comment\")}\r\n                      ></textarea>\r\n                    </div>\r\n                    <div className=\"col-12 my-2\">\r\n                      <label className=\"mr-4\" style={{ marginRight: \"15px\" }}>\r\n                        <FormattedMessage id=\"homeheader.rating\" />\r\n                      </label>\r\n                      <StarRatings\r\n                        rating={this.state.rating}\r\n                        starRatedColor=\"rgb(230, 67, 47)\"\r\n                        changeRating={(e) => this.changeRating(e)}\r\n                        numberOfStars={5}\r\n                        name=\"rating\"\r\n                        starDimension=\"30px\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-12 my-2\">\r\n                      <button\r\n                        className=\"btn btn-primary px-2\"\r\n                        onClick={() => this.sendRating()}\r\n                      >\r\n                        <FormattedMessage id=\"homeheader.send-rating\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Modal>\r\n          )}\r\n          <Modal\r\n            isOpen={isShowModalBooking}\r\n            className={\"schedule-modal\"}\r\n            size=\"md\"\r\n          >\r\n            <div className=\"modal-schedule-container\">\r\n              <div className=\"modal-header\">\r\n                <span>\r\n                  <i\r\n                    className=\"fas fa-times\"\r\n                    onClick={() => this.closeModalBooking()}\r\n                  ></i>\r\n                </span>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <p className=\"text-center mt-4\" style={{ fontSize: \"20px\" }}>\r\n                  Bạn muốn huỷ lịch hẹn ?\r\n                </p>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  className=\"btn-confirm\"\r\n                  onClick={() => this.handleCancelAppointment()}\r\n                >\r\n                  <FormattedMessage id=\"user-view.booking-modal.confirm\" />\r\n                </button>\r\n                <button\r\n                  className=\"btn-cancel\"\r\n                  onClick={() => this.closeModalBooking()}\r\n                >\r\n                  <FormattedMessage id=\"user-view.booking-modal.cancel\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    gender: state.admin.genders,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(DetailUser)\r\n);\r\n","import actionTypes from \"./actionTypes\";\r\n\r\nexport const appStartUpComplete = () => ({\r\n  type: actionTypes.APP_START_UP_COMPLETE,\r\n});\r\n\r\nexport const setContentOfConfirmModal = (contentOfConfirmModal) => ({\r\n  type: actionTypes.SET_CONTENT_OF_CONFIRM_MODAL,\r\n  contentOfConfirmModal: contentOfConfirmModal,\r\n});\r\n\r\nexport const changeLanguageApp = (languageInput) => ({\r\n  type: actionTypes.CHANGE_LANGUAGE,\r\n  language: languageInput,\r\n});\r\n","import actionTypes from \"./actionTypes\";\r\n\r\nexport const addUserSuccess = () => ({\r\n  type: actionTypes.ADD_USER_SUCCESS,\r\n});\r\n\r\nexport const userLoginSuccess = (userInfo) => ({\r\n  type: actionTypes.USER_LOGIN_SUCCESS,\r\n  userInfo: userInfo,\r\n});\r\n\r\nexport const userLoginFail = () => ({\r\n  type: actionTypes.USER_LOGIN_FAIL,\r\n});\r\n\r\nexport const processLogout = () => ({\r\n  type: actionTypes.PROCESS_LOGOUT,\r\n});\r\n","import actionTypes from \"./actionTypes\";\r\nimport {\r\n  getAllCodeService,\r\n  addUserService,\r\n  getAllUsers,\r\n  deleteUserService,\r\n  editUserService,\r\n  getTopDoctorForHomeService,\r\n  getAllDoctorService,\r\n  saveInfoDoctorService,\r\n  getInfoDoctorService,\r\n  getAllSpecialties,\r\n  getAllClinic,\r\n} from \"../../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const fetchGenderStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: actionTypes.FETCH_GENDER_START });\r\n      let res = await getAllCodeService(\"GENDER\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchGenderSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchGenderFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchGenderFailed());\r\n      console.log(\"fetchGenderStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchGenderSuccess = (genderData) => ({\r\n  type: actionTypes.FETCH_GENDER_SUCCESS,\r\n  data: genderData,\r\n});\r\n\r\nexport const fetchGenderFailed = () => ({\r\n  type: actionTypes.FETCH_GENDER_FAILED,\r\n});\r\n\r\nexport const fetchPositionStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAllCodeService(\"POSITION\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchPositionSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchPositionFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchPositionFailed());\r\n      console.log(\"fetchPositionStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPositionSuccess = (positionData) => ({\r\n  type: actionTypes.FETCH_POSITION_SUCCESS,\r\n  data: positionData,\r\n});\r\n\r\nexport const fetchPositionFailed = () => ({\r\n  type: actionTypes.FETCH_POSITION_FAILED,\r\n});\r\n\r\nexport const fetchRoleStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAllCodeService(\"ROLE\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchRoleSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchRoleFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchRoleFailed());\r\n      console.log(\"fetchRoleStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchRoleSuccess = (roleData) => ({\r\n  type: actionTypes.FETCH_ROLE_SUCCESS,\r\n  data: roleData,\r\n});\r\n\r\nexport const fetchRoleFailed = () => ({\r\n  type: actionTypes.FETCH_ROLE_FAILED,\r\n});\r\n\r\nexport const createUser = (data, token) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await addUserService(data, token);\r\n      if (res && res.errCode !== 0) toast.warn(res.errMessage);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"Tạo người dùng thành công !!\");\r\n        dispatch(createUserSuccess());\r\n        dispatch(fetchAllUserStart(token));\r\n      } else {\r\n        toast.success(\"Có lỗi xảy ra, vui lòng thử lại !!\");\r\n        dispatch(createUserFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(createUserFailed());\r\n      console.log(\"createUser error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const createUserSuccess = () => ({\r\n  type: actionTypes.CREATE_USE_SUCCESS,\r\n});\r\n\r\nexport const createUserFailed = () => ({\r\n  type: actionTypes.CREATE_USE_FAILED,\r\n});\r\n\r\nexport const fetchAllUserStart = (token) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAllUsers(\"ALL\", token);\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchAllUserSuccess(res.users.reverse()));\r\n      } else {\r\n        toast.error(\"Lấy danh sách người dùng thất bại !!\");\r\n        dispatch(fetchAllUserFailed());\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"Lấy danh sách người dùng thất bại !!\");\r\n      dispatch(fetchAllUserFailed());\r\n      console.log(\"fetchGenderStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchAllUserSuccess = (data) => ({\r\n  type: actionTypes.FETCH_ALL_USER_SUCCESS,\r\n  users: data,\r\n});\r\n\r\nexport const fetchAllUserFailed = () => ({\r\n  type: actionTypes.FETCH_ALL_USER_FAILED,\r\n});\r\n\r\nexport const deleteUser = (userId, token) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await deleteUserService(userId, token);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"Xoá người dùng thành công!!\");\r\n        dispatch(deleteUserSuccess());\r\n        dispatch(fetchAllUserStart(token));\r\n      } else {\r\n        toast.error(\"Xoá người dùng thât bại\");\r\n        dispatch(deleteUserFailed());\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"Có lỗi xảy ra, vui lòng thử lại\");\r\n      dispatch(deleteUserFailed());\r\n      console.log(\"fetchGenderStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteUserSuccess = () => ({\r\n  type: actionTypes.DELETE_USER_SUCCESS,\r\n});\r\n\r\nexport const deleteUserFailed = () => ({\r\n  type: actionTypes.DELETE_USER_FAILED,\r\n});\r\n\r\nexport const editUser = (data, token) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await editUserService(data, token);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"Lưu thay đổi thành công!!\");\r\n        dispatch(editUserSuccess());\r\n        dispatch(fetchAllUserStart(token));\r\n      } else {\r\n        toast.error(\"Lưu thay đổi thất bại, vui lòng thử lại !!\");\r\n        dispatch(editUserFailed());\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"Có lỗi xảy ra, vui lòng thử lại !!\");\r\n      dispatch(editUserFailed());\r\n      console.log(\"fetchGenderStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const editUserSuccess = () => ({\r\n  type: actionTypes.EDIT_USER_SUCCESS,\r\n});\r\n\r\nexport const editUserFailed = () => ({\r\n  type: actionTypes.EDIT_USER_FAILED,\r\n});\r\n\r\nexport const fetchTopDoctor = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getTopDoctorForHomeService(\"8\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_TOP_DOCTOR_SUCCESS,\r\n          doctors: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_TOP_DOCTOR_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      dispatch({ type: actionTypes.FETCH_TOP_DOCTOR_FAILED });\r\n      console.log(\"fetchTopDoctor error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchAllDoctors = (token) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAllDoctorService(token);\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ALL_DOCTORS_SUCCESS,\r\n          allDoctors: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ALL_DOCTORS_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      dispatch({ type: actionTypes.FETCH_ALL_DOCTORS_FAILED });\r\n      console.log(\"fetchAllDoctor error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const saveInfoDoctor = (data) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await saveInfoDoctorService(data);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"Lưu thông tin thành công !!\");\r\n        dispatch({\r\n          type: actionTypes.SAVE_INFO_DOCTORS_SUCCESS,\r\n        });\r\n      } else {\r\n        toast.error(\"Lưu thông tin thất bại, vui lòng thử lại !!\");\r\n        dispatch({\r\n          type: actionTypes.SAVE_INFO_DOCTORS_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"Có lỗi xảy ra, vui lòng thử lại !!\");\r\n      dispatch({ type: actionTypes.SAVE_INFO_DOCTORS_FAILED });\r\n      console.log(\"saveInfoDoctor error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getInfoDoctor = (id) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getInfoDoctorService(+id);\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_INFO_DOCTORS_SUCCESS,\r\n          data: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_INFO_DOCTORS_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      dispatch({ type: actionTypes.FETCH_INFO_DOCTORS_FAILED });\r\n      console.log(\"fecthInfoDoctor error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchAllTime = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAllCodeService(\"TIME\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ALL_TIME_SUCCESS,\r\n          data: res.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: actionTypes.FETCH_ALL_TIME_FAILED,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      dispatch({ type: actionTypes.FETCH_ALL_TIME_FAILED });\r\n      console.log(\"fecth All time error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchRequiredDoctorStart = (token) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: actionTypes.FETCH_REQUIRED_DOCTOR_START });\r\n      let priceRes = await getAllCodeService(\"PRICE\");\r\n      let proviceRes = await getAllCodeService(\"PROVINCE\");\r\n      let paymentRes = await getAllCodeService(\"PAYMENT\");\r\n      let specialtyRes = await getAllSpecialties(token);\r\n      let clinicRes = await getAllClinic(token);\r\n      if (\r\n        priceRes &&\r\n        priceRes.errCode === 0 &&\r\n        proviceRes &&\r\n        proviceRes.errCode === 0 &&\r\n        paymentRes &&\r\n        paymentRes.errCode === 0 &&\r\n        specialtyRes &&\r\n        specialtyRes.errCode === 0 &&\r\n        clinicRes &&\r\n        clinicRes.errCode === 0\r\n      ) {\r\n        let data = {\r\n          priceId: priceRes.data,\r\n          paymentId: paymentRes.data,\r\n          proviceId: proviceRes.data,\r\n          specialtyId: specialtyRes.data,\r\n          clinicId: clinicRes.data,\r\n        };\r\n        dispatch(fetchRequiredDoctorSuccess(data));\r\n      } else {\r\n        dispatch(fetchRequiredDoctorFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchRequiredDoctorFailed());\r\n      console.log(\"fetchRequiredDoctor error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchRequiredDoctorSuccess = (data) => ({\r\n  type: actionTypes.FETCH_REQUIRED_DOCTOR_SUCCESS,\r\n  data: data,\r\n});\r\n\r\nexport const fetchRequiredDoctorFailed = () => ({\r\n  type: actionTypes.FETCH_REQUIRED_DOCTOR_FAILED,\r\n});\r\n","export const path = {\r\n  HOME: \"/\",\r\n  HOMEPAGE: \"/home\",\r\n  LOGIN: \"/login\",\r\n  SIGN_UP: \"/sign-up\",\r\n  LOG_OUT: \"/logout\",\r\n  SYSTEM: \"/system\",\r\n  DETAIL_DOCTOR: \"/detail-doctor/:id\",\r\n  DETAIL_USER: \"/detail-user/:id\",\r\n  DETAIL_SPECIALTY: \"/detail-specialty/:id\",\r\n  DETAIL_CLINIC: \"/detail-clinic/:id\",\r\n  DETAIL_HANDBOOK: \"/detail-handbook/:id\",\r\n  VERIFY_BOOKING_EMAIL: \"/verify-booking\",\r\n  FORGOT_PW: \"/forgot-password\",\r\n  VIEW_MORE_DOCTOR: \"/view-more-doctor\",\r\n  VIEW_MORE_CLINIC: \"/view-more-clinic\",\r\n  VIEW_MORE_SPECIALTY: \"/view-more-specialty\",\r\n  VIEW_MORE_HANDBOOK: \"/view-more-handbook\",\r\n};\r\n\r\nexport const LENGUAGES = {\r\n  VI: \"vi\",\r\n  EN: \"en\",\r\n};\r\n\r\nexport const MANAGER_ACTIONS = {\r\n  CREATE: \"CREATE\",\r\n  READ: \"READ\",\r\n  EDIT: \"EDIT\",\r\n  DELETE: \"DELETE\",\r\n};\r\n\r\nexport const dateFormat = {\r\n  SEND_TO_SERVER: \"DD/MM/YYYY\",\r\n};\r\n\r\nexport const YesNoObj = {\r\n  YES: \"Y\",\r\n  NO: \"N\",\r\n};\r\n\r\nexport const USER_ROLE = {\r\n  ADMIN: \"R1\",\r\n  DOCTOR: \"R2\",\r\n  PATIENT: \"R3\",\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Logo.4f13bdb9.png\";","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\nimport { LENGUAGES } from \"../../utils/constant\";\r\nimport { changeLanguageApp } from \"../../store/actions\";\r\n\r\nclass SliderNav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShow: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({\r\n      isShow: this.props.isShowNavBar,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.isShowNavBar !== this.props.isShowNavBar) {\r\n      this.setState({\r\n        isShow: this.props.isShowNavBar,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleViewMore = (id) => {\r\n    if (this.props.history) {\r\n      if (id === \"specialist\") this.props.history.push(`/view-more-specialty`);\r\n    }\r\n    if (this.props.history) {\r\n      if (id === \"doctor\") this.props.history.push(`/view-more-doctor`);\r\n    }\r\n    if (this.props.history) {\r\n      if (id === \"handbook\") this.props.history.push(`/view-more-handbook`);\r\n    }\r\n    if (this.props.history) {\r\n      if (id === \"facilities\") this.props.history.push(`/view-more-clinic`);\r\n    }\r\n  };\r\n\r\n  hideNavBar = () => {\r\n    this.props.handleShowNav(false);\r\n  };\r\n\r\n  changeLanguage = (language) => {\r\n    this.props.changeLanguageAppRedux(language);\r\n  };\r\n\r\n  render() {\r\n    let { isShow } = this.state;\r\n    let { language } = this.props;\r\n    return (\r\n      <>\r\n        {isShow === true ? (\r\n          <div className=\"slider-nav\">\r\n            <i\r\n              className=\"fas fa-times close\"\r\n              onClick={() => this.hideNavBar()}\r\n            ></i>\r\n            <ul className=\"content-center\">\r\n              <li\r\n                className=\"content-child\"\r\n                onClick={() => this.handleViewMore(\"specialist\")}\r\n              >\r\n                <div className=\"child-title\">\r\n                  <FormattedMessage id=\"homeheader.specialist\" />\r\n                </div>\r\n                <div className=\"child-subtitle\">\r\n                  <FormattedMessage id=\"homeheader.find-doctor\" />\r\n                </div>\r\n              </li>\r\n              <li\r\n                className=\"content-child\"\r\n                onClick={() => this.handleViewMore(\"facilities\")}\r\n              >\r\n                <div className=\"child-title\">\r\n                  <FormattedMessage id=\"homeheader.health-facilities\" />\r\n                </div>\r\n                <div className=\"child-subtitle\">\r\n                  <FormattedMessage id=\"homeheader.select-clinic\" />\r\n                </div>\r\n              </li>\r\n              <li\r\n                className=\"content-child\"\r\n                onClick={() => this.handleViewMore(\"doctor\")}\r\n              >\r\n                <div className=\"child-title\">\r\n                  {\" \"}\r\n                  <FormattedMessage id=\"homeheader.doctor\" />\r\n                </div>\r\n                <div className=\"child-subtitle\">\r\n                  {\" \"}\r\n                  <FormattedMessage id=\"homeheader.choose-doctor\" />\r\n                </div>\r\n              </li>\r\n              <li\r\n                className=\"content-child\"\r\n                onClick={() => this.handleViewMore(\"handbook\")}\r\n              >\r\n                <div className=\"child-title\">\r\n                  <FormattedMessage id=\"homeheader.fee\" />\r\n                </div>\r\n                <div className=\"child-subtitle\">\r\n                  <FormattedMessage id=\"homeheader.check-health\" />\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"content-lang-nav\">\r\n                  <span\r\n                    className={\r\n                      language === LENGUAGES.VI\r\n                        ? \"content-lang-vi isActive\"\r\n                        : \"content-lang-vi\"\r\n                    }\r\n                    onClick={() => this.changeLanguage(LENGUAGES.VI)}\r\n                  >\r\n                    VI\r\n                  </span>\r\n                  <span>/</span>\r\n                  <span\r\n                    className={\r\n                      language === LENGUAGES.EN\r\n                        ? \"content-lang-en isActive\"\r\n                        : \"content-lang-en\"\r\n                    }\r\n                    onClick={() => this.changeLanguage(LENGUAGES.EN)}\r\n                  >\r\n                    EN\r\n                  </span>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeLanguageAppRedux: (languages) =>\r\n      dispatch(changeLanguageApp(languages)),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(SliderNav)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./HomeHeader.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport * as actions from \"../../store/actions\";\r\nimport { LENGUAGES } from \"../../utils/constant\";\r\nimport { changeLanguageApp } from \"../../store/actions\";\r\nimport mainLogo from \"../../assets/images/Logo.png\";\r\nimport { withRouter } from \"react-router\";\r\nimport SliderNav from \"./SliderNav\";\r\nimport { push } from \"connected-react-router\";\r\nimport _ from \"lodash\";\r\n\r\nclass HomeHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShowNavBar: false,\r\n      userInfo: \"\",\r\n      login: false,\r\n      roleId: \"\",\r\n    };\r\n  }\r\n  changeLanguage = (language) => {\r\n    this.props.changeLanguageAppRedux(language);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      login: this.props.isLoggedIn,\r\n    });\r\n    if (this.props.userInfo) {\r\n      this.setState({\r\n        userInfo: this.props.userInfo,\r\n        roleId: this.props.userInfo.roleId,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.isLoggedIn !== this.props.isLoggedIn) {\r\n      this.setState({\r\n        login: this.props.isLoggedIn,\r\n      });\r\n    }\r\n    if (this.props.userInfo && !_.isEmpty(this.props.userInfo)) {\r\n      if (this.props.userInfo !== prevProps.userInfo) {\r\n        this.setState({\r\n          userInfo: this.props.userInfo,\r\n          roleId: this.props.userInfo.roleId,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  goToHome = () => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/`);\r\n    }\r\n  };\r\n\r\n  redirectToSystemPage = (path) => {\r\n    const { navigate } = this.props;\r\n    const redirectPath = path;\r\n    navigate(`${redirectPath}`);\r\n  };\r\n\r\n  goToManage = () => {\r\n    let role = this.state.roleId;\r\n    if (role) {\r\n      if (role === \"R1\") {\r\n        this.redirectToSystemPage(\"/system/user-redux\");\r\n      } else if (role === \"R2\") {\r\n        this.redirectToSystemPage(\"/doctor/manage-schedule\");\r\n      } else if (role === \"R3\") {\r\n        this.redirectToSystemPage(\"/\");\r\n      }\r\n    }\r\n  };\r\n\r\n  handleViewMore = (id) => {\r\n    let userId = this.state.userInfo.id;\r\n    if (this.props.history) {\r\n      if (id === \"specialist\") this.props.history.push(`/view-more-specialty`);\r\n    }\r\n    if (this.props.history) {\r\n      if (id === \"doctor\") this.props.history.push(`/view-more-doctor`);\r\n    }\r\n    if (this.props.history) {\r\n      if (id === \"handbook\") this.props.history.push(`/view-more-handbook`);\r\n    }\r\n    if (this.props.history) {\r\n      if (id === \"facilities\") this.props.history.push(`/view-more-clinic`);\r\n    }\r\n    if (this.props.history) {\r\n      if (id === \"login\") this.props.history.push(`/login`);\r\n    }\r\n    if (this.props.history) {\r\n      if (id === \"password\") this.props.history.push(`/system/manage-password`);\r\n    }\r\n    if (this.props.history) {\r\n      if (id === \"account\")\r\n        this.props.history.push(`/detail-user/id=${userId}`);\r\n    }\r\n  };\r\n\r\n  changeStateShowNav = () => {\r\n    this.setState({\r\n      isShowNavBar: !this.state.isShowNavBar,\r\n    });\r\n  };\r\n\r\n  handleShowNav = (boolean) => {\r\n    this.setState({\r\n      isShowNavBar: boolean,\r\n    });\r\n  };\r\n\r\n  redirectToSystemPage = (path) => {\r\n    const { navigate } = this.props;\r\n    const redirectPath = path;\r\n    navigate(`${redirectPath}`);\r\n  };\r\n\r\n  handleLogout = () => {\r\n    this.props.processLogout();\r\n    this.redirectToSystemPage(\"/home\");\r\n  };\r\n\r\n  render() {\r\n    let language = this.props.language;\r\n    let { login } = this.state;\r\n    let { roleId } = this.state;\r\n    return (\r\n      <>\r\n        <SliderNav\r\n          handleShowNav={this.handleShowNav}\r\n          isShowNavBar={this.state.isShowNavBar}\r\n        />\r\n        <div className=\"home-header-container\">\r\n          <div className=\"home-header-content container\">\r\n            <div className=\"content-left\">\r\n              <i\r\n                className=\"fas fa-bars icon\"\r\n                onClick={() => this.changeStateShowNav()}\r\n              ></i>\r\n              <div className=\"header-logo\">\r\n                <img\r\n                  src={mainLogo}\r\n                  alt=\"logo\"\r\n                  onClick={() => this.goToHome()}\r\n                ></img>\r\n              </div>\r\n            </div>\r\n            <ul className=\"content-center\">\r\n              <li\r\n                className=\"content-child\"\r\n                onClick={() => this.handleViewMore(\"specialist\")}\r\n              >\r\n                <div className=\"child-title\">\r\n                  <FormattedMessage id=\"homeheader.specialist\" />\r\n                </div>\r\n                <div className=\"child-subtitle\">\r\n                  <FormattedMessage id=\"homeheader.find-doctor\" />\r\n                </div>\r\n              </li>\r\n              <li\r\n                className=\"content-child\"\r\n                onClick={() => this.handleViewMore(\"facilities\")}\r\n              >\r\n                <div className=\"child-title\">\r\n                  <FormattedMessage id=\"homeheader.health-facilities\" />\r\n                </div>\r\n                <div className=\"child-subtitle\">\r\n                  <FormattedMessage id=\"homeheader.select-clinic\" />\r\n                </div>\r\n              </li>\r\n              <li\r\n                className=\"content-child\"\r\n                onClick={() => this.handleViewMore(\"doctor\")}\r\n              >\r\n                <div className=\"child-title\">\r\n                  {\" \"}\r\n                  <FormattedMessage id=\"homeheader.doctor\" />\r\n                </div>\r\n                <div className=\"child-subtitle\">\r\n                  {\" \"}\r\n                  <FormattedMessage id=\"homeheader.choose-doctor\" />\r\n                </div>\r\n              </li>\r\n              <li\r\n                className=\"content-child\"\r\n                onClick={() => this.handleViewMore(\"handbook\")}\r\n              >\r\n                <div className=\"child-title\">\r\n                  <FormattedMessage id=\"homeheader.fee\" />\r\n                </div>\r\n                <div className=\"child-subtitle\">\r\n                  <FormattedMessage id=\"homeheader.check-health\" />\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <div className=\"content-right\">\r\n              <div className=\"content-support\">\r\n                <span className=\"content-question\">\r\n                  {login === false ? (\r\n                    <i\r\n                      onClick={() => this.handleViewMore(\"login\")}\r\n                      className=\"fas fa-sign-in-alt sign-in\"\r\n                      title={\r\n                        language === LENGUAGES.VI ? \"Đăng nhập\" : \"Sign in\"\r\n                      }\r\n                    ></i>\r\n                  ) : (\r\n                    <span className=\"user\">\r\n                      <i className=\"fas fa-user sign-in\"></i>\r\n                      <ul className=\"list-options\">\r\n                        <li\r\n                          className=\"list-item\"\r\n                          onClick={() => this.handleViewMore(\"account\")}\r\n                        >\r\n                          <FormattedMessage id=\"homeheader.my-account\" />\r\n                        </li>\r\n                        {roleId === \"R1\" && (\r\n                          <li\r\n                            className=\"list-item\"\r\n                            onClick={() => this.goToManage()}\r\n                          >\r\n                            <FormattedMessage id=\"homeheader.go-manage\" />\r\n                          </li>\r\n                        )}\r\n                        {roleId === \"R2\" && (\r\n                          <li\r\n                            className=\"list-item\"\r\n                            onClick={() => this.goToManage()}\r\n                          >\r\n                            <FormattedMessage id=\"homeheader.go-manage\" />\r\n                          </li>\r\n                        )}\r\n                        <li\r\n                          className=\"list-item\"\r\n                          onClick={() => this.handleViewMore(\"password\")}\r\n                        >\r\n                          <FormattedMessage id=\"homeheader.change-password\" />\r\n                        </li>\r\n                        <li\r\n                          className=\"list-item\"\r\n                          onClick={() => this.handleLogout()}\r\n                        >\r\n                          <FormattedMessage id=\"homeheader.log-out\" />\r\n                        </li>\r\n                      </ul>\r\n                    </span>\r\n                  )}\r\n                </span>\r\n              </div>\r\n              <div className=\"content-lang\">\r\n                <span\r\n                  className={\r\n                    language === LENGUAGES.VI\r\n                      ? \"content-lang-vi isActive\"\r\n                      : \"content-lang-vi\"\r\n                  }\r\n                  onClick={() => this.changeLanguage(LENGUAGES.VI)}\r\n                >\r\n                  VI\r\n                </span>\r\n                <span>/</span>\r\n                <span\r\n                  className={\r\n                    language === LENGUAGES.EN\r\n                      ? \"content-lang-en isActive\"\r\n                      : \"content-lang-en\"\r\n                  }\r\n                  onClick={() => this.changeLanguage(LENGUAGES.EN)}\r\n                >\r\n                  EN\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    navigate: (path) => dispatch(push(path)),\r\n    changeLanguageAppRedux: (languages) =>\r\n      dispatch(changeLanguageApp(languages)),\r\n    processLogout: () => dispatch(actions.processLogout()),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(HomeHeader)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer-container\">\r\n        <div className=\"container text-center\">\r\n          <p>© 2022 Bui Trung Hieu_B18DCVT145.</p>\r\n          <span>\r\n            <a\r\n              href=\"https://github.com/HieuBuii?tab=repositories\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Click here\r\n            </a>{\" \"}\r\n            for view source code on Github.\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\r\n","import actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initContentOfConfirmModal = {\r\n  isOpen: false,\r\n  messageId: \"\",\r\n  handleFunc: null,\r\n  dataFunc: null,\r\n};\r\n\r\nconst initialState = {\r\n  started: true,\r\n  language: \"vi\",\r\n  systemMenuPath: \"/doctor/manage-schedule\",\r\n  contentOfConfirmModal: {\r\n    ...initContentOfConfirmModal,\r\n  },\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.APP_START_UP_COMPLETE:\r\n      return {\r\n        ...state,\r\n        started: true,\r\n      };\r\n    case actionTypes.SET_CONTENT_OF_CONFIRM_MODAL:\r\n      return {\r\n        ...state,\r\n        contentOfConfirmModal: {\r\n          ...state.contentOfConfirmModal,\r\n          ...action.contentOfConfirmModal,\r\n        },\r\n      };\r\n    case actionTypes.CHANGE_LANGUAGE:\r\n      return {\r\n        ...state,\r\n        language: action.language,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  userInfo: null,\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.USER_LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        userInfo: action.userInfo,\r\n      };\r\n    case actionTypes.USER_LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        userInfo: null,\r\n      };\r\n    case actionTypes.PROCESS_LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        userInfo: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isLoadingGender: false,\r\n  genders: [],\r\n  roles: [],\r\n  positions: [],\r\n  users: [],\r\n  doctors: [],\r\n  allDoctors: [],\r\n  infoDoctor: [],\r\n  idDoctorDetail: \"\",\r\n  timeArr: [],\r\n  requiredInfoDoctor: [],\r\n};\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // case actionTypes.USER_LOGIN_SUCCESS:\r\n    //   return {\r\n    //     ...state,\r\n    //     isLoggedIn: true,\r\n    //     userInfo: action.userInfo,\r\n    //   };\r\n    case actionTypes.FETCH_GENDER_START:\r\n      state.isLoadingGender = true;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_GENDER_SUCCESS:\r\n      state.genders = action.data;\r\n      state.isLoadingGender = false;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_GENDER_FAILED:\r\n      state.isLoadingGender = false;\r\n      state.genders = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_POSITION_SUCCESS:\r\n      state.positions = action.data;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_POSITION_FAILED:\r\n      state.positions = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_ROLE_SUCCESS:\r\n      state.roles = action.data;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_ROLE_FAILED:\r\n      state.roles = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_ALL_USER_SUCCESS:\r\n      state.users = action.users;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_ALL_USER_FAILED:\r\n      state.users = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_TOP_DOCTOR_SUCCESS:\r\n      state.doctors = action.doctors;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_TOP_DOCTOR_FAILED:\r\n      state.doctors = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_ALL_DOCTORS_SUCCESS:\r\n      state.allDoctors = action.allDoctors;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_ALL_DOCTORS_FAILED:\r\n      state.allDoctors = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_INFO_DOCTORS_SUCCESS:\r\n      state.infoDoctor = action.data;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_INFO_DOCTORS_FAILED:\r\n      state.infoDoctor = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_ALL_TIME_SUCCESS:\r\n      state.timeArr = action.data;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_ALL_TIME_FAILED:\r\n      state.timeArr = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_REQUIRED_DOCTOR_SUCCESS:\r\n      state.requiredInfoDoctor = action.data;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_REQUIRED_DOCTOR_FAILED:\r\n      state.requiredInfoDoctor = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default adminReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { connectRouter } from \"connected-react-router\";\r\nimport appReducer from \"./appReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { persistReducer } from \"redux-persist\";\r\n\r\nconst persistCommonConfig = {\r\n  storage: storage,\r\n  stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nconst userPersistConfig = {\r\n  ...persistCommonConfig,\r\n  key: \"user\",\r\n  whitelist: [\"isLoggedIn\", \"userInfo\"],\r\n};\r\nconst appPersistConfig = {\r\n  ...persistCommonConfig,\r\n  key: \"app\",\r\n  whitelist: [\"language\"],\r\n};\r\n\r\nconst root = (history) =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n    app: persistReducer(appPersistConfig, appReducer),\r\n    admin: adminReducer,\r\n  });\r\n\r\nexport default root;\r\n","import { logger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { createStateSyncMiddleware } from \"redux-state-sync\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport createRootReducer from \"./store/reducers/rootReducer\";\r\nimport actionTypes from \"./store/actions/actionTypes\";\r\n\r\nconst environment = process.env.NODE_ENV || \"development\";\r\nlet isDevelopment = environment === \"development\";\r\n\r\n//hide redux logs\r\nisDevelopment = false;\r\n\r\nexport const history = createBrowserHistory({\r\n  basename: process.env.REACT_APP_ROUTER_BASE_NAME,\r\n});\r\n\r\nconst reduxStateSyncConfig = {\r\n  whitelist: [actionTypes.APP_START_UP_COMPLETE, actionTypes.CHANGE_LANGUAGE],\r\n};\r\n\r\nconst rootReducer = createRootReducer(history);\r\nconst middleware = [\r\n  routerMiddleware(history),\r\n  thunkMiddleware,\r\n  createStateSyncMiddleware(reduxStateSyncConfig),\r\n];\r\nif (isDevelopment) middleware.push(logger);\r\n\r\nconst composeEnhancers =\r\n  isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : compose;\r\n\r\nconst reduxStore = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport const dispatch = reduxStore.dispatch;\r\n\r\nexport const persistor = persistStore(reduxStore);\r\n\r\nexport default reduxStore;\r\n","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const userIsAuthenticated = connectedRouterRedirect({\r\n  authenticatedSelector: (state) => state.user.isLoggedIn,\r\n  wrapperDisplayName: \"UserIsAuthenticated\",\r\n  redirectPath: \"/login\",\r\n});\r\n\r\nexport const userIsNotAuthenticated = connectedRouterRedirect({\r\n  // Want to redirect the user when they are authenticated\r\n  authenticatedSelector: (state) => !state.user.isLoggedIn,\r\n  wrapperDisplayName: \"UserIsNotAuthenticated\",\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || \"/\",\r\n  allowRedirectBack: false,\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const { isLoggedIn } = this.props;\r\n    let linkToRedirect = isLoggedIn ? \"/home\" : \"/home\";\r\n\r\n    return <Redirect to={linkToRedirect} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\nimport * as actions from \"../../store/actions\";\r\nimport \"./Login.scss\";\r\nimport { handleLoginApi, forgotPWService } from \"../../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      isShowPassword: false,\r\n      errMessage: \"\",\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  redirectToSystemPage = (path) => {\r\n    const { navigate } = this.props;\r\n    const redirectPath = path;\r\n    navigate(`${redirectPath}`);\r\n  };\r\n\r\n  handleInputUsername = (e) => {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleInputPassword = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleShowHidePassword = () => {\r\n    this.setState({\r\n      isShowPassword: !this.state.isShowPassword,\r\n    });\r\n  };\r\n\r\n  goToSignUp = () => {\r\n    this.redirectToSystemPage(\"/sign-up\");\r\n  };\r\n\r\n  handleLogin = async () => {\r\n    this.setState({\r\n      errMessage: \"\",\r\n    });\r\n    try {\r\n      if (!this.state.username || !this.state.password) {\r\n        this.setState({\r\n          errMessage: \"Vui lòng nhập đủ thông tin !!\",\r\n        });\r\n        return;\r\n      }\r\n      this.setState({ isLoading: true });\r\n      let data = await handleLoginApi(this.state.username, this.state.password);\r\n      this.setState({ isLoading: false });\r\n      if (data && data.errCode !== 0) {\r\n        this.setState({\r\n          errMessage: data.message,\r\n        });\r\n      }\r\n      this.setState({ isLoading: false });\r\n      if (data && data.errCode === 0) {\r\n        // let role = data.user.roleId;\r\n        this.redirectToSystemPage(\"/\");\r\n        // if (role === \"R1\") {\r\n        //   this.redirectToSystemPage(\"/system/user-redux\");\r\n        // } else if (role === \"R2\") {\r\n        //   this.redirectToSystemPage(\"/doctor/manage-schedule\");\r\n        // } else if (role === \"R3\") {\r\n        //   this.redirectToSystemPage(\"/\");\r\n        // }\r\n        this.props.userLoginSuccess(data.user);\r\n      }\r\n    } catch (e) {\r\n      this.setState({ isLoading: false });\r\n      if (e.response) {\r\n        if (e.response.data) {\r\n          this.setState({\r\n            errMessage: e.response.data.message,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleEnterPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.handleLogin();\r\n    }\r\n  };\r\n\r\n  handleForgotPW = async () => {\r\n    if (!this.state.username) {\r\n      this.setState({\r\n        errMessage: \"Vui lòng nhập địa chỉ Email để tiếp tục !!\",\r\n      });\r\n    } else {\r\n      this.setState({ isLoading: true });\r\n      let res = await forgotPWService({ email: this.state.username });\r\n      this.setState({ isLoading: false });\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\r\n          \"Gửi yêu cầu thành công, vui lòng kiểm tra hộp thư Email để tiếp tục !!\"\r\n        );\r\n      } else {\r\n        toast.error(\"Người dùng không tồn tại, vui lòng thử lại !!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <LoadingOverlay active={this.state.isLoading} spinner text=\"Loading...\">\r\n        <div className=\"login-background\">\r\n          <div className=\"login-container\">\r\n            <div className=\"login-content row\">\r\n              <div className=\"col-12 login-title\">Đăng nhập</div>\r\n              <div className=\"col-12 form-group login-input\">\r\n                <label className=\"login-label\">Email:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nhập địa chỉ email\"\r\n                  onChange={(e) => this.handleInputUsername(e)}\r\n                  onKeyDown={(e) => this.handleEnterPress(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-12 form-group login-input\">\r\n                <label className=\"login-label\">Mật khẩu:</label>\r\n                <div className=\"login-password\">\r\n                  <input\r\n                    type={this.state.isShowPassword ? \"text\" : \"password\"}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Nhập mật khẩu\"\r\n                    onChange={(e) => this.handleInputPassword(e)}\r\n                    onKeyDown={(e) => this.handleEnterPress(e)}\r\n                  />\r\n                  <div\r\n                    className=\"login-password-icon\"\r\n                    onClick={() => this.handleShowHidePassword()}\r\n                  >\r\n                    <i\r\n                      className={\r\n                        this.state.isShowPassword\r\n                          ? \"far fa-eye\"\r\n                          : \"far fa-eye-slash\"\r\n                      }\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12\" style={{ color: \"red\" }}>\r\n                {this.state.errMessage}\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <button\r\n                  className=\"btn-login\"\r\n                  onClick={() => this.handleLogin()}\r\n                >\r\n                  Đăng nhập\r\n                </button>\r\n              </div>\r\n              <div\r\n                className=\"col-12 login-sign-up mt-4\"\r\n                onClick={() => this.goToSignUp()}\r\n              >\r\n                Bạn chưa có tài khoản? <span>Đăng ký</span>\r\n              </div>\r\n              <div\r\n                className=\"col-12 login-forgot\"\r\n                onClick={() => this.handleForgotPW()}\r\n              >\r\n                Quên mật khẩu ?\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LoadingOverlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    navigate: (path) => dispatch(push(path)),\r\n    userLoginFail: () => dispatch(actions.userLoginFail()),\r\n    userLoginSuccess: (userInfo) =>\r\n      dispatch(actions.userLoginSuccess(userInfo)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import EventEmitter from \"events\";\r\n\r\nconst _emitter = new EventEmitter();\r\n_emitter.setMaxListeners(0); //unlimit\r\n\r\nexport const emitter = _emitter;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { emitter } from \"../../utils/emitter\";\r\n\r\nclass ModalUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      phonenumber: \"\",\r\n    };\r\n    this.listenToEmitter();\r\n  }\r\n\r\n  listenToEmitter() {\r\n    emitter.on(\"EVENT_CLEAR_MODAL_DATA\", () => {\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        address: \"\",\r\n        phonenumber: \"\",\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  toggle = () => {\r\n    this.props.toggleModal();\r\n  };\r\n\r\n  handleInput = (e, id) => {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = e.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n    });\r\n  };\r\n\r\n  validateEmail = (email) => {\r\n    return String(email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  };\r\n\r\n  validInput = () => {\r\n    let isValid = true;\r\n    if (!this.validateEmail(this.state.email)) {\r\n      alert(\"Vui lòng nhập địa chỉ Email hợp lệ!!\");\r\n      return;\r\n    } else {\r\n      let arr = [\r\n        \"email\",\r\n        \"password\",\r\n        \"firstName\",\r\n        \"lastName\",\r\n        \"address\",\r\n        \"phonenumber\",\r\n      ];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (!this.state[arr[i]]) {\r\n          isValid = false;\r\n          alert(`Missing ${arr[i]}`);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    let isValid = this.validInput();\r\n    if (isValid) {\r\n      this.props.createNewUser(this.state);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isShow}\r\n        toggle={() => {\r\n          this.toggle();\r\n        }}\r\n        className={\"userModal\"}\r\n        size=\"lg\"\r\n        backdrop={this.state.backdrop}\r\n      >\r\n        <ModalHeader\r\n          toggle={() => {\r\n            this.toggle();\r\n          }}\r\n        >\r\n          Add new user\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"modal-container\">\r\n            <div className=\"modal-content\">\r\n              <label>Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"modal-input\"\r\n                placeholder=\"Enter email\"\r\n                onChange={(e) => {\r\n                  this.handleInput(e, \"email\");\r\n                }}\r\n                value={this.state.email}\r\n              ></input>\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"modal-input\"\r\n                placeholder=\"Enter password\"\r\n                onChange={(e) => {\r\n                  this.handleInput(e, \"password\");\r\n                }}\r\n                value={this.state.password}\r\n              ></input>\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              <label>First Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"modal-input\"\r\n                placeholder=\"Enter first name\"\r\n                onChange={(e) => {\r\n                  this.handleInput(e, \"firstName\");\r\n                }}\r\n                value={this.state.firstName}\r\n              ></input>\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              <label>Last Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"modal-input\"\r\n                placeholder=\"Enter last name\"\r\n                onChange={(e) => {\r\n                  this.handleInput(e, \"lastName\");\r\n                }}\r\n                value={this.state.lastName}\r\n              ></input>\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              <label>Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"modal-input\"\r\n                placeholder=\"Enter address\"\r\n                onChange={(e) => {\r\n                  this.handleInput(e, \"address\");\r\n                }}\r\n                value={this.state.address}\r\n              ></input>\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              <label>Phonenumber</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"modal-input\"\r\n                placeholder=\"Enter phonenumber\"\r\n                onChange={(e) => {\r\n                  this.handleInput(e, \"phonenumber\");\r\n                }}\r\n                value={this.state.phonenumber}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            className=\"px-3\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              this.handleSubmit();\r\n            }}\r\n          >\r\n            Add user\r\n          </Button>{\" \"}\r\n          <Button\r\n            className=\"px-3\"\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              this.toggle();\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport _ from \"lodash\";\r\n\r\nclass ModalEditUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      phonenumber: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let user = this.props.currentUser;\r\n    if (user && !_.isEmpty(user)) {\r\n      this.setState({\r\n        id: user.id,\r\n        email: user.email,\r\n        password: \"hard password\",\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        address: user.address,\r\n        phonenumber: user.phonenumber,\r\n      });\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.toggleEditModal();\r\n  };\r\n\r\n  handleInput = (e, id) => {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = e.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n    });\r\n  };\r\n\r\n  validateEmail = (email) => {\r\n    return String(email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  };\r\n\r\n  validInput = () => {\r\n    let isValid = true;\r\n    if (!this.validateEmail(this.state.email)) {\r\n      alert(\"Vui lòng nhập địa chỉ Email hợp lệ!!\");\r\n      return;\r\n    } else {\r\n      let arr = [\r\n        \"email\",\r\n        \"password\",\r\n        \"firstName\",\r\n        \"lastName\",\r\n        \"address\",\r\n        \"phonenumber\",\r\n      ];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (!this.state[arr[i]]) {\r\n          isValid = false;\r\n          alert(`Missing ${arr[i]}`);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  handleSaveEditUser = () => {\r\n    let isValid = this.validInput();\r\n    if (isValid) {\r\n      this.props.saveEditUser(this.state);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isShow}\r\n        toggle={() => {\r\n          this.toggle();\r\n        }}\r\n        className={\"userModal\"}\r\n        size=\"lg\"\r\n        backdrop={this.state.backdrop}\r\n      >\r\n        <ModalHeader\r\n          toggle={() => {\r\n            this.toggle();\r\n          }}\r\n        >\r\n          Update User\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"modal-container\">\r\n            <div className=\"modal-content\">\r\n              <label>Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"modal-input\"\r\n                placeholder=\"Enter email\"\r\n                onChange={(e) => {\r\n                  this.handleInput(e, \"email\");\r\n                }}\r\n                value={this.state.email}\r\n                disabled\r\n              ></input>\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"modal-input\"\r\n                placeholder=\"Enter password\"\r\n                onChange={(e) => {\r\n                  this.handleInput(e, \"password\");\r\n                }}\r\n                value={this.state.password}\r\n                disabled\r\n              ></input>\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              <label>First Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"modal-input\"\r\n                placeholder=\"Enter first name\"\r\n                onChange={(e) => {\r\n                  this.handleInput(e, \"firstName\");\r\n                }}\r\n                value={this.state.firstName}\r\n              ></input>\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              <label>Last Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"modal-input\"\r\n                placeholder=\"Enter last name\"\r\n                onChange={(e) => {\r\n                  this.handleInput(e, \"lastName\");\r\n                }}\r\n                value={this.state.lastName}\r\n              ></input>\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              <label>Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"modal-input\"\r\n                placeholder=\"Enter address\"\r\n                onChange={(e) => {\r\n                  this.handleInput(e, \"address\");\r\n                }}\r\n                value={this.state.address}\r\n              ></input>\r\n            </div>\r\n            <div className=\"modal-content\">\r\n              <label>Phonenumber</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"modal-input\"\r\n                placeholder=\"Enter phonenumber\"\r\n                onChange={(e) => {\r\n                  this.handleInput(e, \"phonenumber\");\r\n                }}\r\n                value={this.state.phonenumber}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            className=\"px-3\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              this.handleSaveEditUser();\r\n            }}\r\n          >\r\n            Save\r\n          </Button>{\" \"}\r\n          <Button\r\n            className=\"px-3\"\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              this.toggle();\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditUser);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./UserManager.scss\";\r\nimport {\r\n  getAllUsers,\r\n  addUserService,\r\n  deleteUserService,\r\n  editUserService,\r\n} from \"../../services/userService\";\r\nimport ModalUser from \"./ModalUser\";\r\nimport { emitter } from \"../../utils/emitter\";\r\nimport ModalEditUser from \"./ModalEditUser\";\r\n\r\nclass UserManage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrUsers: [],\r\n      isShowModalUser: false,\r\n      isShowModalEditUser: false,\r\n      currentUser: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getAllUsersFromReact();\r\n  }\r\n\r\n  getAllUsersFromReact = async () => {\r\n    let response = await getAllUsers(\"ALL\");\r\n    if (response && response.errCode === 0) {\r\n      this.setState({\r\n        arrUsers: response.users,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleAddNewUser = () => {\r\n    this.setState({\r\n      isShowModalUser: true,\r\n    });\r\n  };\r\n\r\n  toggleModalUser = () => {\r\n    this.setState({\r\n      isShowModalUser: !this.state.isShowModalUser,\r\n    });\r\n  };\r\n\r\n  toggleModalEditUser = () => {\r\n    this.setState({\r\n      isShowModalEditUser: !this.state.isShowModalEditUser,\r\n    });\r\n  };\r\n\r\n  createNewUser = async (data) => {\r\n    try {\r\n      let response = await addUserService(data);\r\n      if (response && response.errCode !== 0) {\r\n        alert(response.errMessage);\r\n      } else {\r\n        await this.getAllUsersFromReact();\r\n        this.setState({\r\n          isShowModalUser: false,\r\n        });\r\n        emitter.emit(\"EVENT_CLEAR_MODAL_DATA\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  handleDeleteUser = async (user) => {\r\n    try {\r\n      const response = await deleteUserService(user.id);\r\n      if (response && response.errCode === 0) {\r\n        await this.getAllUsersFromReact();\r\n      } else {\r\n        alert(response.errMessage);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  handleEditUser = (user) => {\r\n    this.setState({\r\n      isShowModalEditUser: true,\r\n      currentUser: user,\r\n    });\r\n  };\r\n\r\n  saveEditUser = async (data) => {\r\n    try {\r\n      let res = await editUserService(data);\r\n      if (res && !res.errCode !== 0) {\r\n        this.setState({\r\n          isShowModalEditUser: false,\r\n        });\r\n        await this.getAllUsersFromReact();\r\n      } else {\r\n        alert(res.errMessage);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let users = this.state.arrUsers;\r\n    return (\r\n      <div className=\"users-container\">\r\n        <ModalUser\r\n          isShow={this.state.isShowModalUser}\r\n          toggleModal={this.toggleModalUser}\r\n          createNewUser={this.createNewUser}\r\n        />\r\n        {this.state.isShowModalEditUser && (\r\n          <ModalEditUser\r\n            isShow={this.state.isShowModalEditUser}\r\n            toggleEditModal={this.toggleModalEditUser}\r\n            currentUser={this.state.currentUser}\r\n            saveEditUser={this.saveEditUser}\r\n          />\r\n        )}\r\n        <div className=\"table-title title text-center\">Manager Users</div>\r\n        <div className=\"mx-1\">\r\n          <button\r\n            className=\"btn btn-primary px-2\"\r\n            onClick={() => this.handleAddNewUser()}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> Add new user\r\n          </button>\r\n        </div>\r\n        <div className=\"user-table mt-3 mx-1\">\r\n          <table id=\"customers\">\r\n            <thead>\r\n              <tr>\r\n                <th>Email</th>\r\n                <th>Name</th>\r\n                <th>Address</th>\r\n                <th>Phonenumber</th>\r\n                <th>Options</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {users &&\r\n                users.map((item, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{item.email}</td>\r\n                      <td>\r\n                        {item.firstName} {item.lastName}\r\n                      </td>\r\n                      <td>{item.address}</td>\r\n                      <td>{item.phonenumber}</td>\r\n                      <td>\r\n                        <div>\r\n                          <button\r\n                            className=\"btn btn-edit\"\r\n                            onClick={() => {\r\n                              this.handleEditUser(item);\r\n                            }}\r\n                          >\r\n                            <i className=\"fas fa-pencil-alt\"></i>\r\n                          </button>\r\n                          <button\r\n                            className=\"btn btn-delete\"\r\n                            onClick={() => {\r\n                              this.handleDeleteUser(item);\r\n                            }}\r\n                          >\r\n                            <i className=\"fas fa-trash\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Navigator.scss\";\r\n\r\nclass MenuGroup extends Component {\r\n  render() {\r\n    const { name, children } = this.props;\r\n    return (\r\n      <li className=\"menu-group\">\r\n        <div className=\"menu-group-name\">\r\n          <FormattedMessage id={name} />\r\n        </div>\r\n        <ul className=\"menu-list list-unstyled\">{children}</ul>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    const { name, active, link, children, onClick, hasSubMenu, onLinkClick } =\r\n      this.props;\r\n    return (\r\n      <li\r\n        className={\r\n          \"menu\" +\r\n          (hasSubMenu ? \" has-sub-menu\" : \"\") +\r\n          \"\" +\r\n          (active ? \" active\" : \"\")\r\n        }\r\n      >\r\n        {hasSubMenu ? (\r\n          <Fragment>\r\n            <span\r\n              data-toggle=\"collapse\"\r\n              className={\"menu-link collapsed\"}\r\n              onClick={onClick}\r\n              aria-expanded={\"false\"}\r\n            >\r\n              <FormattedMessage id={name} />\r\n              <div className=\"icon-right\">\r\n                <i className={\"far fa-angle-right\"} />\r\n              </div>\r\n            </span>\r\n            <div>\r\n              <ul className=\"sub-menu-list list-unstyled\">{children}</ul>\r\n            </div>\r\n          </Fragment>\r\n        ) : (\r\n          <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\r\n            <FormattedMessage id={name} />\r\n          </Link>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nclass SubMenu extends Component {\r\n  getItemClass = (path) => {\r\n    return this.props.location.pathname === path ? \"active\" : \"\";\r\n  };\r\n\r\n  render() {\r\n    const { name, link, onLinkClick } = this.props;\r\n    return (\r\n      <li className={\"sub-menu \" + this.getItemClass(link)}>\r\n        <Link to={link} className=\"sub-menu-link\" onClick={onLinkClick}>\r\n          <FormattedMessage id={name} />\r\n        </Link>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst MenuGroupWithRouter = withRouter(MenuGroup);\r\nconst MenuWithRouter = withRouter(Menu);\r\nconst SubMenuWithRouter = withRouter(SubMenu);\r\n\r\nconst withRouterInnerRef = (WrappedComponent) => {\r\n  class InnerComponentWithRef extends React.Component {\r\n    render() {\r\n      const { forwardRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardRef} />;\r\n    }\r\n  }\r\n\r\n  const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\r\n\r\n  return React.forwardRef((props, ref) => {\r\n    return <ComponentWithRef {...props} forwardRef={ref} />;\r\n  });\r\n};\r\n\r\nclass Navigator extends Component {\r\n  state = {\r\n    expandedMenu: {},\r\n  };\r\n\r\n  toggle = (groupIndex, menuIndex) => {\r\n    const expandedMenu = {};\r\n    const needExpand = !(\r\n      this.state.expandedMenu[groupIndex + \"_\" + menuIndex] === true\r\n    );\r\n    if (needExpand) {\r\n      expandedMenu[groupIndex + \"_\" + menuIndex] = true;\r\n    }\r\n\r\n    this.setState({\r\n      expandedMenu: expandedMenu,\r\n    });\r\n  };\r\n\r\n  isMenuHasSubMenuActive = (location, subMenus, link) => {\r\n    if (subMenus) {\r\n      if (subMenus.length === 0) {\r\n        return false;\r\n      }\r\n\r\n      const currentPath = location.pathname;\r\n      for (let i = 0; i < subMenus.length; i++) {\r\n        const subMenu = subMenus[i];\r\n        if (subMenu.link === currentPath) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (link) {\r\n      return this.props.location.pathname === link;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  checkActiveMenu = () => {\r\n    const { menus, location } = this.props;\r\n    outerLoop: for (let i = 0; i < menus.length; i++) {\r\n      const group = menus[i];\r\n      if (group.menus && group.menus.length > 0) {\r\n        for (let j = 0; j < group.menus.length; j++) {\r\n          const menu = group.menus[j];\r\n          if (menu.subMenus && menu.subMenus.length > 0) {\r\n            if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\r\n              const key = i + \"_\" + j;\r\n              this.setState({\r\n                expandedMenu: {\r\n                  [key]: true,\r\n                },\r\n              });\r\n              break outerLoop;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.checkActiveMenu();\r\n  }\r\n\r\n  // componentWillReceiveProps(nextProps, prevState) {\r\n  //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\r\n  //     const { location: nextLocation } = nextProps;\r\n  //     if (location !== nextLocation) {\r\n  //         let pathname = nextLocation && nextLocation.pathname;\r\n  //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\r\n  //             setAccountMenuPath(pathname);\r\n  //         }\r\n  //         if (pathname.startsWith('/settings/')) {\r\n  //             setSettingMenuPath(pathname);\r\n  //         };\r\n  //     };\r\n  // };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { location } = this.props;\r\n    const { location: prevLocation } = prevProps;\r\n    if (location !== prevLocation) {\r\n      this.checkActiveMenu();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { menus, location, onLinkClick } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <ul className=\"navigator-menu list-unstyled\">\r\n          {menus &&\r\n            menus.length > 0 &&\r\n            menus.map((group, groupIndex) => {\r\n              return (\r\n                <Fragment key={groupIndex}>\r\n                  <MenuGroupWithRouter name={group.name}>\r\n                    {group.menus\r\n                      ? group.menus.map((menu, menuIndex) => {\r\n                          const isMenuHasSubMenuActive =\r\n                            this.isMenuHasSubMenuActive(\r\n                              location,\r\n                              menu.subMenus,\r\n                              menu.link\r\n                            );\r\n                          const isSubMenuOpen =\r\n                            this.state.expandedMenu[\r\n                              groupIndex + \"_\" + menuIndex\r\n                            ] === true;\r\n                          return (\r\n                            <MenuWithRouter\r\n                              key={menuIndex}\r\n                              active={isMenuHasSubMenuActive}\r\n                              name={menu.name}\r\n                              link={menu.link}\r\n                              hasSubMenu={menu.subMenus}\r\n                              isOpen={isSubMenuOpen}\r\n                              onClick={() => this.toggle(groupIndex, menuIndex)}\r\n                              onLinkClick={onLinkClick}\r\n                            >\r\n                              {menu.subMenus &&\r\n                                menu.subMenus.map((subMenu, subMenuIndex) => (\r\n                                  <SubMenuWithRouter\r\n                                    key={subMenuIndex}\r\n                                    name={subMenu.name}\r\n                                    link={subMenu.link}\r\n                                    onClick={this.closeOtherExpand}\r\n                                    onLinkClick={onLinkClick}\r\n                                  />\r\n                                ))}\r\n                            </MenuWithRouter>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </MenuGroupWithRouter>\r\n                </Fragment>\r\n              );\r\n            })}\r\n        </ul>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouterInnerRef(\r\n  connect(mapStateToProps, mapDispatchToProps)(Navigator)\r\n);\r\n","export const adminMenu = [\r\n  {\r\n    //hệ thống\r\n    name: \"menu.admin.manage-user\",\r\n    menus: [\r\n      // {\r\n      //   name: \"menu.admin.crud\",\r\n      //   link: \"/system/user-manage\",\r\n      //   // subMenus: [\r\n      //   //   {\r\n      //   //     name: \"menu.system.system-administrator.user-manage\",\r\n      //   //     link: \"/system/user-manage\",\r\n      //   //   },\r\n      //   //   {\r\n      //   //     name: \"menu.system.system-administrator.redux-manage\",\r\n      //   //     link: \"/system/user-redux\",\r\n      //   //   },\r\n      //   // ],\r\n      // },\r\n      { name: \"menu.admin.crud-redux\", link: \"/system/user-redux\" },\r\n      { name: \"menu.admin.manage-doctor\", link: \"/system/manager-doctor\" },\r\n      { name: \"menu.doctor.manage-schedule\", link: \"/doctor/manage-schedule\" },\r\n      // { name: \"menu.admin.manage-password\", link: \"/system/manage-password\" },\r\n    ],\r\n  },\r\n  {\r\n    //manager clinics\r\n    name: \"menu.admin.clinic\",\r\n    menus: [\r\n      {\r\n        name: \"menu.admin.manage-clinic\",\r\n        link: \"/system/manage-clinic\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    //manager specialties\r\n    name: \"menu.admin.specialty\",\r\n    menus: [\r\n      {\r\n        name: \"menu.admin.manage-specialty\",\r\n        link: \"/system/manage-specialty\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    //manager handbook\r\n    name: \"menu.admin.handbook\",\r\n    menus: [\r\n      {\r\n        name: \"menu.admin.manage-handbook\",\r\n        link: \"/system/manage-handbook\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const doctorMenu = [\r\n  {\r\n    name: \"menu.admin.manage-user\",\r\n    menus: [\r\n      {\r\n        name: \"menu.doctor.manage-schedule\",\r\n        link: \"/doctor/manage-schedule\",\r\n      },\r\n      {\r\n        name: \"menu.doctor.manage-appointment\",\r\n        link: \"/doctor/manage-appointment\",\r\n      },\r\n      {\r\n        name: \"menu.doctor.history-appointment\",\r\n        link: \"/doctor/history-appointment\",\r\n      },\r\n      // { name: \"menu.admin.manage-password\", link: \"/system/manage-password\" },\r\n    ],\r\n  },\r\n  {\r\n    //manager handbook\r\n    name: \"menu.admin.handbook\",\r\n    menus: [\r\n      {\r\n        name: \"menu.admin.manage-handbook\",\r\n        link: \"/system/manage-handbook\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from \"../../components/Navigator\";\r\nimport { adminMenu, doctorMenu } from \"./menuApp\";\r\nimport \"./Header.scss\";\r\nimport { changeLanguageApp } from \"../../store/actions\";\r\nimport { LENGUAGES, USER_ROLE } from \"../../utils/constant\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport _ from \"lodash\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menuApp: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let menu = [];\r\n    let { userInfo } = this.props;\r\n    if (userInfo && !_.isEmpty(userInfo)) {\r\n      let role = userInfo.roleId;\r\n      if (role === USER_ROLE.ADMIN) {\r\n        menu = adminMenu;\r\n      } else if (role === USER_ROLE.DOCTOR) {\r\n        menu = doctorMenu;\r\n      } else {\r\n        menu = [];\r\n      }\r\n    }\r\n    this.setState({\r\n      menuApp: menu,\r\n    });\r\n  }\r\n\r\n  changeLanguage = (language) => {\r\n    this.props.changeLanguageAppRedux(language);\r\n  };\r\n  render() {\r\n    let language = this.props.language;\r\n    const { processLogout, userInfo } = this.props;\r\n    return (\r\n      <div className=\"header-container\">\r\n        <div className=\"header-tabs-container\">\r\n          <Navigator menus={this.state.menuApp} />\r\n        </div>\r\n        <div>\r\n          <span className=\"welcome\">\r\n            <FormattedMessage id=\"homeheader.welcome\" />\r\n            {userInfo && userInfo.firstName ? userInfo.firstName : \"\"}\r\n          </span>\r\n          <span\r\n            className={\r\n              language === LENGUAGES.VI ? \"language-vi active\" : \"language-vi\"\r\n            }\r\n            onClick={() => this.changeLanguage(LENGUAGES.VI)}\r\n          >\r\n            VI\r\n          </span>\r\n          <span className=\"between\">/</span>\r\n          <span\r\n            className={\r\n              language === LENGUAGES.EN ? \"language-en active\" : \"language-en\"\r\n            }\r\n            onClick={() => this.changeLanguage(LENGUAGES.EN)}\r\n          >\r\n            EN\r\n          </span>\r\n          <div\r\n            className=\"btn btn-logout\"\r\n            onClick={processLogout}\r\n            title=\"log out\"\r\n          >\r\n            <i className=\"fas fa-sign-out-alt\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    processLogout: () => dispatch(actions.processLogout()),\r\n    changeLanguageAppRedux: (languages) =>\r\n      dispatch(changeLanguageApp(languages)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport { LENGUAGES } from \"../../../utils\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport Select from \"react-select\";\r\nimport \"./ManageDoctor.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { saveInfoDoctorService } from \"../../../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nconst mdParser = new MarkdownIt();\r\n\r\nclass ManageDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      //markdown\r\n      contentHTML: \"\",\r\n      contentMarkdown: \"\",\r\n      doctorDesc: \"\",\r\n      selectedDoctor: \"\",\r\n      listDoctors: [],\r\n      infoDoctor: {},\r\n      editInfo: false,\r\n\r\n      //info_doctor\r\n      listPrice: [],\r\n      listPayment: [],\r\n      listProvice: [],\r\n      listSpecialty: [],\r\n      listClinic: [],\r\n\r\n      selectedPrice: \"\",\r\n      selectedPayment: \"\",\r\n      selectedProvice: \"\",\r\n      selectedSpecialty: \"\",\r\n      selectedClinic: \"\",\r\n      note: \"\",\r\n      accessToken: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.userInfo && this.props.userInfo.accessToken) {\r\n      let accessToken = this.props.userInfo.accessToken;\r\n      this.setState({ accessToken });\r\n      await this.props.fetchAllDoctors(accessToken);\r\n      await this.props.fetchRequiredDoctorStart(accessToken);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //markdown\r\n    if (\r\n      prevProps.allDoctor !== this.props.allDoctor ||\r\n      prevProps.language !== this.props.language\r\n    ) {\r\n      let options = this.buildDataForSelectDoctor(this.props.allDoctor);\r\n      this.setState({\r\n        listDoctors: options,\r\n      });\r\n    }\r\n    //price\r\n    if (\r\n      prevProps.requiredInfoDoctor !== this.props.requiredInfoDoctor ||\r\n      prevProps.language !== this.props.language\r\n    ) {\r\n      let optionsPrice = this.buildDataForSelectInfoDoctor(\r\n        this.props.requiredInfoDoctor.priceId\r\n      );\r\n      this.setState({\r\n        listPrice: optionsPrice,\r\n      });\r\n      let optionsPayment = this.buildDataForSelectInfoDoctor(\r\n        this.props.requiredInfoDoctor.paymentId\r\n      );\r\n      this.setState({\r\n        listPayment: optionsPayment,\r\n      });\r\n      let optionsProvice = this.buildDataForSelectInfoDoctor(\r\n        this.props.requiredInfoDoctor.proviceId\r\n      );\r\n      this.setState({\r\n        listProvice: optionsProvice,\r\n      });\r\n      let optionsSpecialty = this.buildDataForSelectSpecialty(\r\n        this.props.requiredInfoDoctor.specialtyId\r\n      );\r\n      this.setState({\r\n        listSpecialty: optionsSpecialty,\r\n      });\r\n      let optionsClinic = this.buildDataForSelectClinic(\r\n        this.props.requiredInfoDoctor.clinicId\r\n      );\r\n      this.setState({\r\n        listClinic: optionsClinic,\r\n      });\r\n    }\r\n\r\n    if (\r\n      prevProps.infoDoctor !== this.props.infoDoctor ||\r\n      prevProps.language !== this.props.language\r\n    ) {\r\n      this.setState({\r\n        infoDoctor: this.props.infoDoctor,\r\n        contentHTML:\r\n          this.props.infoDoctor &&\r\n          this.props.infoDoctor.Doctor_Intro &&\r\n          this.props.infoDoctor.Doctor_Intro.contentHTML\r\n            ? this.props.infoDoctor.Doctor_Intro.contentHTML\r\n            : \"\",\r\n        contentMarkdown:\r\n          this.props.infoDoctor &&\r\n          this.props.infoDoctor.Doctor_Intro &&\r\n          this.props.infoDoctor.Doctor_Intro.contentMarkdown\r\n            ? this.props.infoDoctor.Doctor_Intro.contentMarkdown\r\n            : \"\",\r\n        doctorDesc:\r\n          this.props.infoDoctor &&\r\n          this.props.infoDoctor.Doctor_Intro &&\r\n          this.props.infoDoctor.Doctor_Intro.description\r\n            ? this.props.infoDoctor.Doctor_Intro.description\r\n            : \"\",\r\n        note:\r\n          this.props.infoDoctor &&\r\n          this.props.infoDoctor.Doctor_Info &&\r\n          this.props.infoDoctor.Doctor_Info.note\r\n            ? this.props.infoDoctor.Doctor_Info.note\r\n            : \"\",\r\n      });\r\n      if (\r\n        this.props.infoDoctor &&\r\n        this.props.infoDoctor.Doctor_Info &&\r\n        this.props.infoDoctor.Doctor_Info.paymentId &&\r\n        this.props.infoDoctor.Doctor_Info.priceId &&\r\n        this.props.infoDoctor.Doctor_Info.proviceId &&\r\n        this.props.infoDoctor.Doctor_Info.specialtyId &&\r\n        this.props.infoDoctor.Doctor_Info.clinicId\r\n      ) {\r\n        let { listPayment, listPrice, listProvice, listSpecialty, listClinic } =\r\n          this.state;\r\n        let findPayment = listPayment.find(\r\n          (item) => item.value === this.props.infoDoctor.Doctor_Info.paymentId\r\n        );\r\n        this.setState({ selectedPayment: findPayment });\r\n        let findPrice = listPrice.find(\r\n          (item) => item.value === this.props.infoDoctor.Doctor_Info.priceId\r\n        );\r\n        this.setState({ selectedPrice: findPrice });\r\n        let findProvince = listProvice.find(\r\n          (item) => item.value === this.props.infoDoctor.Doctor_Info.proviceId\r\n        );\r\n        this.setState({ selectedProvice: findProvince });\r\n        let findSpecialty = listSpecialty.find(\r\n          (item) => item.value === this.props.infoDoctor.Doctor_Info.specialtyId\r\n        );\r\n        this.setState({ selectedSpecialty: findSpecialty });\r\n        let findClinic = listClinic.find(\r\n          (item) => item.value === this.props.infoDoctor.Doctor_Info.clinicId\r\n        );\r\n        this.setState({ selectedClinic: findClinic });\r\n      } else {\r\n        this.setState({\r\n          selectedPayment: \"\",\r\n          selectedPrice: \"\",\r\n          selectedProvice: \"\",\r\n          selectedClinic: \"\",\r\n          selectedSpecialty: \"\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  buildDataForSelectDoctor = (inputData) => {\r\n    let listOptions = [];\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.map((item, index) => {\r\n        let obj = {};\r\n        let label =\r\n          this.props.language === LENGUAGES.VI\r\n            ? `${item.lastName} ${item.firstName}`\r\n            : `${item.firstName} ${item.lastName}`;\r\n        let value = item.id;\r\n        obj.value = value;\r\n        obj.label = label;\r\n        return listOptions.push(obj);\r\n      });\r\n    }\r\n    return listOptions;\r\n  };\r\n\r\n  buildDataForSelectSpecialty = (inputData) => {\r\n    let listOptions = [];\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.map((item, index) => {\r\n        let obj = {};\r\n        let label =\r\n          this.props.language === LENGUAGES.VI\r\n            ? `${item.nameVi}`\r\n            : `${item.nameEn}`;\r\n        let value = item.id;\r\n        obj.value = value;\r\n        obj.label = label;\r\n        return listOptions.push(obj);\r\n      });\r\n    }\r\n    return listOptions;\r\n  };\r\n\r\n  buildDataForSelectClinic = (inputData) => {\r\n    let listOptions = [];\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.map((item, index) => {\r\n        let obj = {};\r\n        let label = `${item.name}`;\r\n        let value = item.id;\r\n        obj.value = value;\r\n        obj.label = label;\r\n        return listOptions.push(obj);\r\n      });\r\n    }\r\n    return listOptions;\r\n  };\r\n\r\n  buildDataForSelectInfoDoctor = (inputData) => {\r\n    let listOptions = [];\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.map((item, index) => {\r\n        let obj = {};\r\n        let label =\r\n          this.props.language === LENGUAGES.VI\r\n            ? `${item.valueVi}`\r\n            : `${item.valueEn}`;\r\n        let value = item.keyMap;\r\n        obj.value = value;\r\n        obj.label = label;\r\n        return listOptions.push(obj);\r\n      });\r\n    }\r\n    return listOptions;\r\n  };\r\n\r\n  handleEditorChange = ({ html, text }) => {\r\n    this.setState({\r\n      contentHTML: html,\r\n      contentMarkdown: text,\r\n    });\r\n  };\r\n\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedDoctor: selectedOption });\r\n    await this.props.getInfoDoctor(selectedOption.value);\r\n    this.setState({ editInfo: true });\r\n  };\r\n\r\n  handleChangeSelectInfoDoctor = (selectedOption, name) => {\r\n    let statename = name.name;\r\n    let copyState = { ...this.state };\r\n    copyState[statename] = selectedOption;\r\n    this.setState({\r\n      ...copyState,\r\n    });\r\n  };\r\n\r\n  handleChangeInput = (e, id) => {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = e.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n    });\r\n  };\r\n\r\n  handleShowLoading = (boolean) => {\r\n    this.setState({\r\n      isLoading: boolean,\r\n    });\r\n  };\r\n\r\n  handleSaveDoctor = async () => {\r\n    this.handleShowLoading(true);\r\n    let res = await saveInfoDoctorService({\r\n      contentHTML: this.state.contentHTML,\r\n      contentMarkdown: this.state.contentMarkdown,\r\n      description: this.state.doctorDesc,\r\n      doctorId: this.state.selectedDoctor.value,\r\n      priceId: this.state.selectedPrice.value,\r\n      paymentId: this.state.selectedPayment.value,\r\n      proviceId: this.state.selectedProvice.value,\r\n      note: this.state.note,\r\n      clinicId: this.state.selectedClinic.value,\r\n      specialtyId: this.state.selectedSpecialty.value,\r\n    });\r\n    this.handleShowLoading(false);\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Lưu thông tin thành công !!\");\r\n      this.setState({\r\n        contentHTML: \"\",\r\n        contentMarkdown: \"\",\r\n        doctorDesc: \"\",\r\n        selectedPrice: \"\",\r\n        selectedPayment: \"\",\r\n        selectedProvice: \"\",\r\n        note: \"\",\r\n        selectedDoctor: \"\",\r\n        selectedClinic: \"\",\r\n        selectedSpecialty: \"\",\r\n      });\r\n    } else {\r\n      toast.error(\"Lưu thông tin thất bại, vui lòng thử lại !!\");\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      contentHTML: \"\",\r\n      contentMarkdown: \"\",\r\n      doctorDesc: \"\",\r\n      selectedPrice: \"\",\r\n      selectedPayment: \"\",\r\n      selectedProvice: \"\",\r\n      note: \"\",\r\n      selectedDoctor: \"\",\r\n      selectedClinic: \"\",\r\n      selectedSpecialty: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedDoctor,\r\n      selectedPayment,\r\n      selectedPrice,\r\n      selectedProvice,\r\n      selectedClinic,\r\n      selectedSpecialty,\r\n      contentHTML,\r\n      contentMarkdown,\r\n      doctorDesc,\r\n      note,\r\n    } = this.state;\r\n    return (\r\n      <LoadingOverlay active={this.state.isLoading} spinner text=\"Loading...\">\r\n        <div className=\"container\">\r\n          <div className=\"title mb-5\">\r\n            <FormattedMessage id=\"admin.manage-doctor.title\" />\r\n          </div>\r\n          <div className=\"desc-doctor\">\r\n            <div className=\"content-left\">\r\n              <label>\r\n                <FormattedMessage id=\"admin.manage-doctor.select-doctor\" />\r\n              </label>\r\n              <Select\r\n                value={selectedDoctor}\r\n                onChange={this.handleChangeSelect}\r\n                options={this.state.listDoctors}\r\n                name={\"selectedDoctor\"}\r\n                placeholder={\r\n                  <FormattedMessage id=\"admin.manage-doctor.select-doctor\" />\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"content-right\">\r\n              <label>\r\n                <FormattedMessage id=\"admin.manage-doctor.intro-doctor\" />\r\n              </label>\r\n              <textarea\r\n                className=\"doctor-desc\"\r\n                onChange={(e) => this.handleChangeInput(e, \"doctorDesc\")}\r\n                value={this.state.doctorDesc}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <div className=\"required-info row\">\r\n            <div className=\"col-4 form-group\">\r\n              <label>\r\n                <FormattedMessage id=\"admin.manage-doctor.price\" />\r\n              </label>\r\n              <Select\r\n                value={selectedPrice}\r\n                onChange={this.handleChangeSelectInfoDoctor}\r\n                options={this.state.listPrice}\r\n                name={\"selectedPrice\"}\r\n                placeholder={\r\n                  <FormattedMessage id=\"admin.manage-doctor.price\" />\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-4 form-group\">\r\n              <label>\r\n                <FormattedMessage id=\"admin.manage-doctor.payment\" />\r\n              </label>\r\n              <Select\r\n                value={selectedPayment}\r\n                onChange={this.handleChangeSelectInfoDoctor}\r\n                options={this.state.listPayment}\r\n                name={\"selectedPayment\"}\r\n                placeholder={\r\n                  <FormattedMessage id=\"admin.manage-doctor.payment\" />\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-4 form-group\">\r\n              <label>\r\n                <FormattedMessage id=\"admin.manage-doctor.province\" />\r\n              </label>\r\n              <Select\r\n                value={selectedProvice}\r\n                onChange={this.handleChangeSelectInfoDoctor}\r\n                options={this.state.listProvice}\r\n                name={\"selectedProvice\"}\r\n                placeholder={\r\n                  <FormattedMessage id=\"admin.manage-doctor.province\" />\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-4 form-group\">\r\n              <label>\r\n                <FormattedMessage id=\"admin.manage-doctor.specialty\" />\r\n              </label>\r\n              <Select\r\n                value={this.state.selectedSpecialty}\r\n                onChange={this.handleChangeSelectInfoDoctor}\r\n                options={this.state.listSpecialty}\r\n                name={\"selectedSpecialty\"}\r\n                placeholder={\r\n                  <FormattedMessage id=\"admin.manage-doctor.specialty\" />\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-4 form-group clinic-block\">\r\n              <label>\r\n                <FormattedMessage id=\"admin.manage-doctor.clinic\" />\r\n              </label>\r\n              <Select\r\n                style={{ lineHight: \"100%\" }}\r\n                value={this.state.selectedClinic}\r\n                onChange={this.handleChangeSelectInfoDoctor}\r\n                options={this.state.listClinic}\r\n                name={\"selectedClinic\"}\r\n                placeholder={\r\n                  <FormattedMessage id=\"admin.manage-doctor.clinic\" />\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-4 form-group my-4\">\r\n              <label>\r\n                <FormattedMessage id=\"admin.manage-doctor.note\" />\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                onChange={(e) => this.handleChangeInput(e, \"note\")}\r\n                value={this.state.note}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"markdown-doctor\">\r\n            <div className=\"mb-2\">\r\n              <FormattedMessage id=\"admin.manage-doctor.desc\" />\r\n            </div>\r\n            <MdEditor\r\n              style={{ height: \"500px\" }}\r\n              renderHTML={(text) => mdParser.render(text)}\r\n              onChange={this.handleEditorChange}\r\n              value={\r\n                this.state.contentMarkdown ? this.state.contentMarkdown : \"\"\r\n              }\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"save-doctor-desc btn-primary\"\r\n            onClick={() => this.handleSaveDoctor()}\r\n          >\r\n            {\" \"}\r\n            {this.state.editInfo === true ? (\r\n              <FormattedMessage id=\"admin.manage-doctor.add\" />\r\n            ) : (\r\n              <FormattedMessage id=\"admin.manage-doctor.save\" />\r\n            )}\r\n          </button>\r\n          {(contentHTML ||\r\n            contentMarkdown ||\r\n            doctorDesc ||\r\n            note ||\r\n            selectedPrice ||\r\n            selectedPayment ||\r\n            selectedProvice ||\r\n            selectedDoctor ||\r\n            selectedClinic ||\r\n            selectedSpecialty) && (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-cancel\"\r\n              onClick={(e) => this.handleCancel(e)}\r\n            >\r\n              Huỷ\r\n            </button>\r\n          )}\r\n        </div>\r\n      </LoadingOverlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    allDoctor: state.admin.allDoctors,\r\n    infoDoctor: state.admin.infoDoctor,\r\n    requiredInfoDoctor: state.admin.requiredInfoDoctor,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchAllDoctors: (token) => dispatch(actions.fetchAllDoctors(token)),\r\n    getInfoDoctor: (id) => dispatch(actions.getInfoDoctor(id)),\r\n    saveInfoDoctor: (data) => dispatch(actions.saveInfoDoctor(data)),\r\n    fetchRequiredDoctorStart: (token) =>\r\n      dispatch(actions.fetchRequiredDoctorStart(token)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal } from \"reactstrap\";\r\nimport \"./ManageSpecialty.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\nimport { CommonUtils } from \"../../../utils\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  saveSpecialtyService,\r\n  getAllSpecialties,\r\n  editSpecialtyService,\r\n  deleteSpecialtyService,\r\n} from \"../../../services/userService\";\r\nimport _ from \"lodash\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nconst mdParser = new MarkdownIt();\r\n\r\nclass ManageSpecialty extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nameVi: \"\",\r\n      nameEn: \"\",\r\n      image: \"\",\r\n      previewImg: \"\",\r\n      contentHTML: \"\",\r\n      contentMarkdown: \"\",\r\n      listSpecialty: [],\r\n      idSpecialty: \"\",\r\n      statusSubmit: \"ADD\",\r\n      token: \"\",\r\n      isLoading: false,\r\n      isShowModalBooking: false,\r\n      itemSelected: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.userInfo && this.props.userInfo.accessToken) {\r\n      let res = await getAllSpecialties(this.props.userInfo.accessToken);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          listSpecialty: res.data,\r\n          token: this.props.userInfo.accessToken,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  showModalBooking = (item) => {\r\n    this.setState({\r\n      isShowModalBooking: true,\r\n      itemSelected: item,\r\n    });\r\n  };\r\n\r\n  closeModalBooking = () => {\r\n    this.setState({\r\n      isShowModalBooking: false,\r\n    });\r\n  };\r\n\r\n  handleShowLoading = (boolean) => {\r\n    this.setState({\r\n      isLoading: boolean,\r\n    });\r\n  };\r\n\r\n  handleAddImg = async (e) => {\r\n    let data = e.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      let objectUrl = URL.createObjectURL(file);\r\n      this.setState({\r\n        previewImg: objectUrl,\r\n        image: base64,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEditorChange = ({ html, text }) => {\r\n    this.setState({\r\n      contentHTML: html,\r\n      contentMarkdown: text,\r\n    });\r\n  };\r\n\r\n  handleChangeInput = (e, id) => {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = e.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    let token = \"\";\r\n    if (this.props.userInfo && this.props.userInfo.accessToken) {\r\n      token = this.props.userInfo.accessToken;\r\n    }\r\n    e.preventDefault();\r\n    if (this.state.statusSubmit === \"ADD\") {\r\n      let isValid = this.validInput();\r\n      if (isValid) {\r\n        this.handleShowLoading(true);\r\n        let res = await saveSpecialtyService(\r\n          {\r\n            image: this.state.image,\r\n            nameVi: this.state.nameVi,\r\n            nameEn: this.state.nameEn,\r\n            contentHTML: this.state.contentHTML,\r\n            contentMarkdown: this.state.contentMarkdown,\r\n          },\r\n          token\r\n        );\r\n        this.handleShowLoading(false);\r\n        if (res && res.errCode === 0) {\r\n          toast.success(\"Tạo chuyên khoa thành công !!\");\r\n          this.setState({\r\n            nameVi: \"\",\r\n            nameEn: \"\",\r\n            image: \"\",\r\n            previewImg: \"\",\r\n            contentHTML: \"\",\r\n            contentMarkdown: \"\",\r\n          });\r\n        } else {\r\n          toast.error(\"Tạo chuyên khoa thất bại, vui lòng thử lại !!\");\r\n        }\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    if (this.state.statusSubmit === \"EDIT\") {\r\n      let isValid = this.validInput();\r\n      if (isValid) {\r\n        this.handleShowLoading(true);\r\n        let res = await editSpecialtyService({\r\n          image: this.state.image,\r\n          nameVi: this.state.nameVi,\r\n          nameEn: this.state.nameEn,\r\n          contentHTML: this.state.contentHTML,\r\n          contentMarkdown: this.state.contentMarkdown,\r\n          id: this.state.idSpecialty,\r\n        });\r\n        this.handleShowLoading(false);\r\n        if (res && res.errCode === 0) {\r\n          toast.success(\r\n            <FormattedMessage id=\"manage-specialty.save-succeed\" />\r\n          );\r\n          this.setState({\r\n            nameVi: \"\",\r\n            nameEn: \"\",\r\n            image: \"\",\r\n            previewImg: \"\",\r\n            contentHTML: \"\",\r\n            contentMarkdown: \"\",\r\n            statusSubmit: \"ADD\",\r\n          });\r\n        } else {\r\n          toast.error(<FormattedMessage id=\"manage-specialty.save-failed\" />);\r\n        }\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    let res = await getAllSpecialties(token);\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        listSpecialty: res.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  validInput = () => {\r\n    let isValid = true;\r\n    let arr = [\"nameVi\", \"nameEn\", \"image\", \"contentHTML\", \"contentMarkdown\"];\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (!this.state[arr[i]]) {\r\n        isValid = false;\r\n        toast.error(<FormattedMessage id=\"manage-specialty.fill-all\" />);\r\n        break;\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  handleEditSpecialty = (item) => {\r\n    this.setState({\r\n      nameVi: item.nameVi,\r\n      nameEn: item.nameEn,\r\n      image: item.image,\r\n      previewImg: item.image,\r\n      contentHTML: item.contentHTML,\r\n      contentMarkdown: item.contentMarkdown,\r\n      idSpecialty: item.id,\r\n      statusSubmit: \"EDIT\",\r\n    });\r\n  };\r\n\r\n  handleDeleteSpecialty = async () => {\r\n    let item = this.state.itemSelected;\r\n    if (item && !_.isEmpty(item)) {\r\n      this.handleShowLoading(true);\r\n      let res = await deleteSpecialtyService(item.id);\r\n      this.handleShowLoading(false);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\r\n          <FormattedMessage id=\"manage-specialty.delete-succeed\" />\r\n        );\r\n        this.setState({\r\n          isShowModalBooking: false,\r\n        });\r\n      } else {\r\n        toast.error(<FormattedMessage id=\"manage-specialty.delete-failed\" />);\r\n      }\r\n    }\r\n    let res = await getAllSpecialties(this.state.token);\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        listSpecialty: res.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      nameVi: \"\",\r\n      nameEn: \"\",\r\n      image: \"\",\r\n      previewImg: \"\",\r\n      contentHTML: \"\",\r\n      contentMarkdown: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      listSpecialty,\r\n      nameVi,\r\n      nameEn,\r\n      image,\r\n      previewImg,\r\n      contentHTML,\r\n      contentMarkdown,\r\n      isShowModalBooking,\r\n    } = this.state;\r\n    let file = this.state.previewImg;\r\n    return (\r\n      <>\r\n        <LoadingOverlay active={this.state.isLoading} spinner text=\"Loading...\">\r\n          <div className=\"manage-specialty-container\">\r\n            <div className=\"title\">\r\n              <FormattedMessage id=\"manage-specialty.title\" />\r\n            </div>\r\n            <div className=\"manage-body container\">\r\n              <form className=\"row g-3 mt-5\">\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-specialty.nameVi-specialty\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"nameSpecialty\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.handleChangeInput(e, \"nameVi\")}\r\n                    value={this.state.nameVi}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-specialty.nameEn-specialty\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"nameSpecialty\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.handleChangeInput(e, \"nameEn\")}\r\n                    value={this.state.nameEn}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 manage-specialty-img\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-specialty.image-specialty\" />\r\n                  </label>\r\n                  <div className=\"input-img-container\">\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"input-img\"\r\n                      hidden\r\n                      onChange={(e) => this.handleAddImg(e)}\r\n                    />\r\n                    <label htmlFor=\"input-img\" className=\"img-label\">\r\n                      <FormattedMessage id=\"manage-user.upload\" />{\" \"}\r\n                      <i className=\"fas fa-upload\"></i>\r\n                    </label>\r\n                    {this.state.previewImg && (\r\n                      <div\r\n                        className=\"img-preview\"\r\n                        style={{ backgroundImage: `url(${file})` }}\r\n                      ></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"mb-2\">\r\n                    <FormattedMessage id=\"manage-user.desc\" />\r\n                  </div>\r\n                  <MdEditor\r\n                    style={{ height: \"400px\" }}\r\n                    renderHTML={(text) => mdParser.render(text)}\r\n                    onChange={this.handleEditorChange}\r\n                    value={\r\n                      this.state.contentMarkdown\r\n                        ? this.state.contentMarkdown\r\n                        : \"\"\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    className=\"btn-primary px-3 btn-submit\"\r\n                    onClick={(e) => this.handleSubmit(e)}\r\n                  >\r\n                    <FormattedMessage id=\"manage-specialty.save\" />\r\n                  </button>\r\n                  {(nameVi ||\r\n                    nameEn ||\r\n                    image ||\r\n                    previewImg ||\r\n                    contentHTML ||\r\n                    contentMarkdown) && (\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary btn-cancel\"\r\n                      onClick={(e) => this.handleCancel(e)}\r\n                    >\r\n                      Huỷ\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div className=\"users-container container my-5\">\r\n            <table id=\"customers\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <FormattedMessage id=\"manage-specialty.order\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"manage-specialty.nameVi-specialty\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"manage-specialty.nameEn-specialty\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"manage-specialty.options\" />\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {listSpecialty &&\r\n                  listSpecialty.length > 0 &&\r\n                  listSpecialty.map((item, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{item.nameVi}</td>\r\n                        <td>{item.nameEn}</td>\r\n                        <td>\r\n                          <div>\r\n                            <button\r\n                              className=\"btn btn-edit\"\r\n                              onClick={() => this.handleEditSpecialty(item)}\r\n                            >\r\n                              <i className=\"fas fa-pencil-alt\"></i>\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-delete\"\r\n                              onClick={() => this.showModalBooking(item)}\r\n                            >\r\n                              <i className=\"fas fa-trash\"></i>\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <Modal\r\n            isOpen={isShowModalBooking}\r\n            className={\"schedule-modal\"}\r\n            size=\"md\"\r\n          >\r\n            <div className=\"modal-schedule-container\">\r\n              <div className=\"modal-header\">\r\n                <span>\r\n                  <i\r\n                    className=\"fas fa-times\"\r\n                    onClick={() => this.closeModalBooking()}\r\n                  ></i>\r\n                </span>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <p className=\"text-center mt-4\" style={{ fontSize: \"20px\" }}>\r\n                  Bạn muốn xoá chuyên khoa ?\r\n                </p>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  className=\"btn-confirm\"\r\n                  onClick={() => this.handleDeleteSpecialty()}\r\n                >\r\n                  <FormattedMessage id=\"user-view.booking-modal.confirm\" />\r\n                </button>\r\n                <button\r\n                  className=\"btn-cancel\"\r\n                  onClick={() => this.closeModalBooking()}\r\n                >\r\n                  <FormattedMessage id=\"user-view.booking-modal.cancel\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(ManageSpecialty)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport { changePWService } from \"../../../services/userService\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShowPassword: false,\r\n      errMessage: \"\",\r\n      oldPW: \"\",\r\n      newPW: \"\",\r\n      reNewPW: \"\",\r\n      email: \"\",\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.userInfo && this.props.userInfo.email) {\r\n      this.setState({\r\n        email: this.props.userInfo.email,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevStates) {\r\n    if (prevProps.userInfo !== this.props.userInfo) {\r\n      this.setState({\r\n        email: this.props.userInfo.email,\r\n      });\r\n    }\r\n  }\r\n\r\n  goToHome = () => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/login`);\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/`);\r\n    }\r\n  };\r\n\r\n  handleShowHidePassword = () => {\r\n    this.setState({\r\n      isShowPassword: !this.state.isShowPassword,\r\n    });\r\n  };\r\n\r\n  validatePassword = (password) => {\r\n    return String(password).match(\r\n      /^(?=.*\\p{Ll})(?=.*\\p{Lu})(?=.*[\\d|@#$!%*?&])[\\p{L}\\d@#$!%*?&]{6,36}$/gu\r\n    );\r\n  };\r\n\r\n  validInput = () => {\r\n    let isValid = true;\r\n    let arr = [\"oldPW\", \"newPW\", \"reNewPW\"];\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (!this.state[arr[i]]) {\r\n        isValid = false;\r\n        toast.error(`Vui lòng điền đủ thông tin !!`);\r\n        break;\r\n      }\r\n    }\r\n    if (!this.validatePassword(this.state.newPW)) {\r\n      isValid = false;\r\n      toast.error(\r\n        \"Mật khẩu mới cần dài ít nhất 6 ký tự và có chứa ít nhất 1 chữ hoa, 1 chữ thường và 1 số !!\"\r\n      );\r\n      return;\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  handleChangePassword = async () => {\r\n    let { email, oldPW, newPW, reNewPW } = this.state;\r\n    let isValid = this.validInput();\r\n    if (isValid) {\r\n      if (newPW !== reNewPW) {\r\n        this.setState({\r\n          errMessage: \"Vui lòng nhập lại đúng mật khẩu mới\",\r\n        });\r\n        return;\r\n      } else {\r\n        this.setState({\r\n          errMessage: \"\",\r\n        });\r\n        this.setState({ isLoading: true });\r\n        let res = await changePWService({\r\n          email: email,\r\n          newPassword: newPW,\r\n          oldPassword: oldPW,\r\n        });\r\n        this.setState({ isLoading: false });\r\n        if (res && res.errCode === 0) {\r\n          toast.success(\r\n            \"Thay đổi mật khẩu thành công, vui lòng đăng nhập lại !!\"\r\n          );\r\n          this.props.processLogout();\r\n        } else {\r\n          toast.error(res.errMessage);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleEnterPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.handleChangePassword();\r\n    }\r\n  };\r\n\r\n  handleChangeInput = (e, id) => {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = e.target.value;\r\n    this.setState({ ...copyState });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <LoadingOverlay active={this.state.isLoading} spinner text=\"Loading...\">\r\n          <div className=\"login-background\">\r\n            <div className=\"login-container\">\r\n              <div className=\"login-content row\">\r\n                <div className=\"col-12 login-title\">ĐỔI MẬT KHẨU</div>\r\n                <div className=\"col-12 form-group login-input\">\r\n                  <label className=\"login-label\">Mật khẩu cũ:</label>\r\n                  <div className=\"login-password\">\r\n                    <input\r\n                      type={this.state.isShowPassword ? \"text\" : \"password\"}\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nhập mật khẩu cũ\"\r\n                      onChange={(e) => this.handleChangeInput(e, \"oldPW\")}\r\n                      onKeyDown={(e) => this.handleEnterPress(e)}\r\n                    />\r\n                    <div\r\n                      className=\"login-password-icon\"\r\n                      onClick={() => this.handleShowHidePassword()}\r\n                    >\r\n                      <i\r\n                        className={\r\n                          this.state.isShowPassword\r\n                            ? \"far fa-eye\"\r\n                            : \"far fa-eye-slash\"\r\n                        }\r\n                      ></i>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 form-group login-input\">\r\n                  <label className=\"login-label\">Mật khẩu mới:</label>\r\n                  <div className=\"login-password\">\r\n                    <input\r\n                      type={this.state.isShowPassword ? \"text\" : \"password\"}\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nhập mật khẩu mới\"\r\n                      onChange={(e) => this.handleChangeInput(e, \"newPW\")}\r\n                      onKeyDown={(e) => this.handleEnterPress(e)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 form-group login-input\">\r\n                  <label className=\"login-label\">Nhập lại khẩu mới:</label>\r\n                  <div className=\"login-password\">\r\n                    <input\r\n                      type={this.state.isShowPassword ? \"text\" : \"password\"}\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nhập lại mật khẩu mới\"\r\n                      onChange={(e) => this.handleChangeInput(e, \"reNewPW\")}\r\n                      onKeyDown={(e) => this.handleEnterPress(e)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12\" style={{ color: \"red\" }}>\r\n                  {this.state.errMessage}\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    className=\"btn-login\"\r\n                    onClick={() => this.handleChangePassword()}\r\n                  >\r\n                    Đổi mật khẩu\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    className=\"btn-login btn-cancel-change\"\r\n                    onClick={() => this.handleCancel()}\r\n                  >\r\n                    Huỷ\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    processLogout: () => dispatch(actions.processLogout()),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(ChangePassword)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal } from \"reactstrap\";\r\nimport \"./ManageClinic.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\nimport { CommonUtils } from \"../../../utils\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  saveClinicService,\r\n  getAllClinic,\r\n  editClinicService,\r\n  deleteClinicService,\r\n} from \"../../../services/userService\";\r\nimport _ from \"lodash\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nconst mdParser = new MarkdownIt();\r\n\r\nclass ManageClinic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      image: \"\",\r\n      address: \"\",\r\n      previewImg: \"\",\r\n      contentHTML: \"\",\r\n      contentMarkdown: \"\",\r\n      listClinic: [],\r\n      idClinic: \"\",\r\n      statusSubmit: \"ADD\",\r\n      token: \"\",\r\n      isLoading: false,\r\n      isShowModalBooking: false,\r\n      itemSelected: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.userInfo && this.props.userInfo.accessToken) {\r\n      let res = await getAllClinic(this.props.userInfo.accessToken);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          listClinic: res.data,\r\n          token: this.props.userInfo.accessToken,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  showModalBooking = (item) => {\r\n    this.setState({\r\n      isShowModalBooking: true,\r\n      itemSelected: item,\r\n    });\r\n  };\r\n\r\n  closeModalBooking = () => {\r\n    this.setState({\r\n      isShowModalBooking: false,\r\n    });\r\n  };\r\n\r\n  handleAddImg = async (e) => {\r\n    let data = e.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      let objectUrl = URL.createObjectURL(file);\r\n      this.setState({\r\n        previewImg: objectUrl,\r\n        image: base64,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEditorChange = ({ html, text }) => {\r\n    this.setState({\r\n      contentHTML: html,\r\n      contentMarkdown: text,\r\n    });\r\n  };\r\n\r\n  handleChangeInput = (e, id) => {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = e.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    let token = \"\";\r\n    if (this.props.userInfo && this.props.userInfo.accessToken) {\r\n      token = this.props.userInfo.accessToken;\r\n    }\r\n    e.preventDefault();\r\n    if (this.state.statusSubmit === \"ADD\") {\r\n      let isValid = this.validInput();\r\n      if (isValid) {\r\n        this.handleShowLoading(true);\r\n        let res = await saveClinicService(\r\n          {\r\n            image: this.state.image,\r\n            name: this.state.name,\r\n            address: this.state.address,\r\n            contentHTML: this.state.contentHTML,\r\n            contentMarkdown: this.state.contentMarkdown,\r\n          },\r\n          token\r\n        );\r\n        this.handleShowLoading(false);\r\n        if (res && res.errCode === 0) {\r\n          toast.success(\"Tạo phòng khám thành công !!\");\r\n          this.setState({\r\n            name: \"\",\r\n            address: \"\",\r\n            image: \"\",\r\n            previewImg: \"\",\r\n            contentHTML: \"\",\r\n            contentMarkdown: \"\",\r\n          });\r\n        } else {\r\n          toast.error(\"Tạo phòng khám thất bại, vui lòng thử lại !!\");\r\n        }\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    if (this.state.statusSubmit === \"EDIT\") {\r\n      let isValid = this.validInput();\r\n      if (isValid) {\r\n        this.handleShowLoading(true);\r\n        let res = await editClinicService({\r\n          image: this.state.image,\r\n          name: this.state.name,\r\n          address: this.state.address,\r\n          contentHTML: this.state.contentHTML,\r\n          contentMarkdown: this.state.contentMarkdown,\r\n          id: this.state.idClinic,\r\n        });\r\n        this.handleShowLoading(false);\r\n        if (res && res.errCode === 0) {\r\n          toast.success(\r\n            <FormattedMessage id=\"manage-specialty.save-succeed\" />\r\n          );\r\n          this.setState({\r\n            name: \"\",\r\n            address: \"\",\r\n            image: \"\",\r\n            previewImg: \"\",\r\n            contentHTML: \"\",\r\n            contentMarkdown: \"\",\r\n            statusSubmit: \"ADD\",\r\n          });\r\n        } else {\r\n          toast.error(<FormattedMessage id=\"manage-specialty.save-failed\" />);\r\n        }\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    let res = await getAllClinic(this.state.token);\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        listClinic: res.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  validInput = () => {\r\n    let isValid = true;\r\n    let arr = [\"name\", \"address\", \"image\", \"contentHTML\", \"contentMarkdown\"];\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (!this.state[arr[i]]) {\r\n        isValid = false;\r\n        toast.error(<FormattedMessage id=\"manage-specialty.fill-all\" />);\r\n        break;\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  handleEditClinic = (item) => {\r\n    this.setState({\r\n      name: item.name,\r\n      address: item.address,\r\n      image: item.image,\r\n      previewImg: item.image,\r\n      contentHTML: item.contentHTML,\r\n      contentMarkdown: item.contentMarkdown,\r\n      idClinic: item.id,\r\n      statusSubmit: \"EDIT\",\r\n    });\r\n  };\r\n\r\n  handleDeleteClinic = async () => {\r\n    let item = this.state.itemSelected;\r\n    if (item && !_.isEmpty(item)) {\r\n      this.handleShowLoading(true);\r\n      let res = await deleteClinicService(item.id);\r\n      this.handleShowLoading(false);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(<FormattedMessage id=\"manage-clinic.delete-succeed\" />);\r\n        this.setState({ isShowModalBooking: false });\r\n      } else {\r\n        toast.error(<FormattedMessage id=\"manage-clinic.delete-failed\" />);\r\n      }\r\n    }\r\n    let res = await getAllClinic(this.state.token);\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        listClinic: res.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleShowLoading = (boolean) => {\r\n    this.setState({\r\n      isLoading: boolean,\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      address: \"\",\r\n      image: \"\",\r\n      previewImg: \"\",\r\n      contentHTML: \"\",\r\n      contentMarkdown: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      listClinic,\r\n      name,\r\n      image,\r\n      address,\r\n      previewImg,\r\n      contentHTML,\r\n      contentMarkdown,\r\n      isShowModalBooking,\r\n    } = this.state;\r\n    let file = this.state.previewImg;\r\n    return (\r\n      <>\r\n        <LoadingOverlay active={this.state.isLoading} spinner text=\"Loading...\">\r\n          <div className=\"manage-specialty-container\">\r\n            <div className=\"title\">\r\n              <FormattedMessage id=\"manage-clinic.title\" />\r\n            </div>\r\n            <div className=\"manage-body container\">\r\n              <form className=\"row g-3 mt-5\">\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-clinic.name\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.handleChangeInput(e, \"name\")}\r\n                    value={this.state.name}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-clinic.address\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.handleChangeInput(e, \"address\")}\r\n                    value={this.state.address}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 manage-specialty-img\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-clinic.image-clinic\" />\r\n                  </label>\r\n                  <div className=\"input-img-container\">\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"input-img\"\r\n                      hidden\r\n                      onChange={(e) => this.handleAddImg(e)}\r\n                    />\r\n                    <label htmlFor=\"input-img\" className=\"img-label\">\r\n                      <FormattedMessage id=\"manage-user.upload\" />{\" \"}\r\n                      <i className=\"fas fa-upload\"></i>\r\n                    </label>\r\n                    {this.state.previewImg && (\r\n                      <div\r\n                        className=\"img-preview\"\r\n                        style={{ backgroundImage: `url(${file})` }}\r\n                      ></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"mb-2\">\r\n                    <FormattedMessage id=\"manage-clinic.desc\" />\r\n                  </div>\r\n                  <MdEditor\r\n                    style={{ height: \"400px\" }}\r\n                    renderHTML={(text) => mdParser.render(text)}\r\n                    onChange={this.handleEditorChange}\r\n                    value={\r\n                      this.state.contentMarkdown\r\n                        ? this.state.contentMarkdown\r\n                        : \"\"\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    className=\"btn-primary px-3 btn-submit\"\r\n                    onClick={(e) => this.handleSubmit(e)}\r\n                  >\r\n                    <FormattedMessage id=\"manage-specialty.save\" />\r\n                  </button>\r\n                  {(name ||\r\n                    image ||\r\n                    address ||\r\n                    previewImg ||\r\n                    contentHTML ||\r\n                    contentMarkdown) && (\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary btn-cancel\"\r\n                      onClick={(e) => this.handleCancel(e)}\r\n                    >\r\n                      Huỷ\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div className=\"users-container container my-5\">\r\n            <table id=\"customers\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <FormattedMessage id=\"manage-specialty.order\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"manage-clinic.name\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"manage-clinic.address\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"manage-specialty.options\" />\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {listClinic &&\r\n                  listClinic.length > 0 &&\r\n                  listClinic.map((item, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.address}</td>\r\n                        <td>\r\n                          <div>\r\n                            <button\r\n                              className=\"btn btn-edit\"\r\n                              onClick={() => this.handleEditClinic(item)}\r\n                            >\r\n                              <i className=\"fas fa-pencil-alt\"></i>\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-delete\"\r\n                              onClick={() => this.showModalBooking(item)}\r\n                            >\r\n                              <i className=\"fas fa-trash\"></i>\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <Modal\r\n            isOpen={isShowModalBooking}\r\n            className={\"schedule-modal\"}\r\n            size=\"md\"\r\n          >\r\n            <div className=\"modal-schedule-container\">\r\n              <div className=\"modal-header\">\r\n                <span>\r\n                  <i\r\n                    className=\"fas fa-times\"\r\n                    onClick={() => this.closeModalBooking()}\r\n                  ></i>\r\n                </span>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <p className=\"text-center mt-4\" style={{ fontSize: \"20px\" }}>\r\n                  Bạn muốn xoá phòng khám ?\r\n                </p>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  className=\"btn-confirm\"\r\n                  onClick={() => this.handleDeleteClinic()}\r\n                >\r\n                  <FormattedMessage id=\"user-view.booking-modal.confirm\" />\r\n                </button>\r\n                <button\r\n                  className=\"btn-cancel\"\r\n                  onClick={() => this.closeModalBooking()}\r\n                >\r\n                  <FormattedMessage id=\"user-view.booking-modal.cancel\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(ManageClinic)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\nimport { CommonUtils } from \"../../../utils\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Modal } from \"reactstrap\";\r\nimport {\r\n  saveHandBookService,\r\n  getAllHandBook,\r\n  editHandBookService,\r\n  deleteHandBookService,\r\n} from \"../../../services/userService\";\r\nimport _ from \"lodash\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nconst mdParser = new MarkdownIt();\r\n\r\nclass ManageHandBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      image: \"\",\r\n      author: \"\",\r\n      previewImg: \"\",\r\n      contentHTML: \"\",\r\n      contentMarkdown: \"\",\r\n      listHandBook: [],\r\n      idHandBook: \"\",\r\n      statusSubmit: \"ADD\",\r\n      isLoading: false,\r\n      isShowModalBooking: false,\r\n      itemSelected: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllHandBook();\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        listHandBook: res.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  showModalBooking = (item) => {\r\n    this.setState({\r\n      isShowModalBooking: true,\r\n      itemSelected: item,\r\n    });\r\n  };\r\n\r\n  closeModalBooking = () => {\r\n    this.setState({\r\n      isShowModalBooking: false,\r\n    });\r\n  };\r\n\r\n  handleAddImg = async (e) => {\r\n    let data = e.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      let objectUrl = URL.createObjectURL(file);\r\n      this.setState({\r\n        previewImg: objectUrl,\r\n        image: base64,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEditorChange = ({ html, text }) => {\r\n    this.setState({\r\n      contentHTML: html,\r\n      contentMarkdown: text,\r\n    });\r\n  };\r\n\r\n  handleChangeInput = (e, id) => {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = e.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n    });\r\n  };\r\n\r\n  handleShowLoading = (boolean) => {\r\n    this.setState({\r\n      isLoading: boolean,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    let userId = \"\";\r\n    if (this.props.userInfo && this.props.userInfo.id) {\r\n      userId = this.props.userInfo.id;\r\n    }\r\n    e.preventDefault();\r\n    if (this.state.statusSubmit === \"ADD\") {\r\n      let isValid = this.validInput();\r\n      if (isValid) {\r\n        this.handleShowLoading(true);\r\n        let res = await saveHandBookService({\r\n          userId: userId,\r\n          image: this.state.image,\r\n          name: this.state.name,\r\n          author: this.state.author,\r\n          contentHTML: this.state.contentHTML,\r\n          contentMarkdown: this.state.contentMarkdown,\r\n        });\r\n        this.handleShowLoading(false);\r\n        if (res && res.errCode === 0) {\r\n          toast.success(\"Tạo bài đăng thành công\");\r\n          this.setState({\r\n            name: \"\",\r\n            author: \"\",\r\n            image: \"\",\r\n            previewImg: \"\",\r\n            contentHTML: \"\",\r\n            contentMarkdown: \"\",\r\n          });\r\n        } else {\r\n          toast.error(\"Tạo bài đăng thất bại !!\");\r\n        }\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    if (this.state.statusSubmit === \"EDIT\") {\r\n      let isValid = this.validInput();\r\n      if (isValid) {\r\n        this.handleShowLoading(true);\r\n        let res = await editHandBookService({\r\n          image: this.state.image,\r\n          name: this.state.name,\r\n          author: this.state.author,\r\n          contentHTML: this.state.contentHTML,\r\n          contentMarkdown: this.state.contentMarkdown,\r\n          id: this.state.idHandBook,\r\n        });\r\n        this.handleShowLoading(false);\r\n        if (res && res.errCode === 0) {\r\n          toast.success(\r\n            <FormattedMessage id=\"manage-specialty.save-succeed\" />\r\n          );\r\n          this.setState({\r\n            name: \"\",\r\n            author: \"\",\r\n            image: \"\",\r\n            previewImg: \"\",\r\n            contentHTML: \"\",\r\n            contentMarkdown: \"\",\r\n            statusSubmit: \"ADD\",\r\n          });\r\n        } else {\r\n          toast.error(<FormattedMessage id=\"manage-specialty.save-failed\" />);\r\n        }\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    let res = await getAllHandBook();\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        listHandBook: res.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  validInput = () => {\r\n    let isValid = true;\r\n    let arr = [\"name\", \"author\", \"image\", \"contentHTML\", \"contentMarkdown\"];\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (!this.state[arr[i]]) {\r\n        isValid = false;\r\n        toast.error(<FormattedMessage id=\"manage-specialty.fill-all\" />);\r\n        break;\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  handleEditClinic = (item) => {\r\n    this.setState({\r\n      name: item.name,\r\n      author: item.author,\r\n      image: item.image,\r\n      previewImg: item.image,\r\n      contentHTML: item.contentHTML,\r\n      contentMarkdown: item.contentMarkdown,\r\n      idHandBook: item.id,\r\n      statusSubmit: \"EDIT\",\r\n    });\r\n  };\r\n\r\n  handleDeleteClinic = async () => {\r\n    let item = this.state.itemSelected;\r\n    if (item && !_.isEmpty(item)) {\r\n      this.handleShowLoading(true);\r\n      let res = await deleteHandBookService(item.id);\r\n      this.handleShowLoading(false);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"Xoá bài đăng thành công !!\");\r\n      } else {\r\n        toast.error(\"Xoá bài đăng thất bại, vui lòng thử lại !!\");\r\n      }\r\n    }\r\n    let res = await getAllHandBook();\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        listHandBook: res.data,\r\n        name: \"\",\r\n        author: \"\",\r\n        image: \"\",\r\n        previewImg: \"\",\r\n        contentHTML: \"\",\r\n        contentMarkdown: \"\",\r\n        statusSubmit: \"ADD\",\r\n        isShowModalBooking: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      image: \"\",\r\n      author: \"\",\r\n      previewImg: \"\",\r\n      contentHTML: \"\",\r\n      contentMarkdown: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      isShowModalBooking,\r\n      listHandBook,\r\n      name,\r\n      image,\r\n      author,\r\n      previewImg,\r\n      contentHTML,\r\n      contentMarkdown,\r\n    } = this.state;\r\n    let file = this.state.previewImg;\r\n    return (\r\n      <>\r\n        <LoadingOverlay active={this.state.isLoading} spinner text=\"Loading...\">\r\n          <div className=\"manage-specialty-container\">\r\n            <div className=\"title\">\r\n              <FormattedMessage id=\"manage-handbook.title\" />\r\n            </div>\r\n            <div className=\"manage-body container\">\r\n              <form className=\"row g-3 mt-5\">\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-handbook.name\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.handleChangeInput(e, \"name\")}\r\n                    value={this.state.name}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-handbook.author\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.handleChangeInput(e, \"author\")}\r\n                    value={this.state.author}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 manage-specialty-img\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-handbook.image\" />\r\n                  </label>\r\n                  <div className=\"input-img-container\">\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"input-img\"\r\n                      hidden\r\n                      onChange={(e) => this.handleAddImg(e)}\r\n                    />\r\n                    <label htmlFor=\"input-img\" className=\"img-label\">\r\n                      <FormattedMessage id=\"manage-user.upload\" />{\" \"}\r\n                      <i className=\"fas fa-upload\"></i>\r\n                    </label>\r\n                    {this.state.previewImg && (\r\n                      <div\r\n                        className=\"img-preview\"\r\n                        style={{ backgroundImage: `url(${file})` }}\r\n                      ></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"mb-2\">\r\n                    <FormattedMessage id=\"manage-handbook.content\" />\r\n                  </div>\r\n                  <MdEditor\r\n                    style={{ height: \"400px\" }}\r\n                    renderHTML={(text) => mdParser.render(text)}\r\n                    onChange={this.handleEditorChange}\r\n                    value={\r\n                      this.state.contentMarkdown\r\n                        ? this.state.contentMarkdown\r\n                        : \"\"\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    className=\"btn-primary px-3 btn-submit\"\r\n                    onClick={(e) => this.handleSubmit(e)}\r\n                  >\r\n                    <FormattedMessage id=\"manage-specialty.save\" />\r\n                  </button>\r\n                  {(name ||\r\n                    image ||\r\n                    author ||\r\n                    previewImg ||\r\n                    contentHTML ||\r\n                    contentMarkdown) && (\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary btn-cancel\"\r\n                      onClick={(e) => this.handleCancel(e)}\r\n                    >\r\n                      Huỷ\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div className=\"users-container container my-5\">\r\n            <table id=\"customers\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <FormattedMessage id=\"manage-specialty.order\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"manage-handbook.name\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"manage-handbook.author\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"manage-specialty.options\" />\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {listHandBook &&\r\n                  listHandBook.length > 0 &&\r\n                  listHandBook.map((item, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.author}</td>\r\n                        <td>\r\n                          <div>\r\n                            <button\r\n                              className=\"btn btn-edit\"\r\n                              onClick={() => this.handleEditClinic(item)}\r\n                            >\r\n                              <i className=\"fas fa-pencil-alt\"></i>\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-delete\"\r\n                              onClick={() => this.showModalBooking(item)}\r\n                            >\r\n                              <i className=\"fas fa-trash\"></i>\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <Modal\r\n            isOpen={isShowModalBooking}\r\n            className={\"schedule-modal\"}\r\n            size=\"md\"\r\n          >\r\n            <div className=\"modal-schedule-container\">\r\n              <div className=\"modal-header\">\r\n                <span>\r\n                  <i\r\n                    className=\"fas fa-times\"\r\n                    onClick={() => this.closeModalBooking()}\r\n                  ></i>\r\n                </span>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <p className=\"text-center mt-4\" style={{ fontSize: \"20px\" }}>\r\n                  Bạn muốn xoá bài đăng ?\r\n                </p>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  className=\"btn-confirm\"\r\n                  onClick={() => this.handleDeleteClinic()}\r\n                >\r\n                  <FormattedMessage id=\"user-view.booking-modal.confirm\" />\r\n                </button>\r\n                <button\r\n                  className=\"btn-cancel\"\r\n                  onClick={() => this.closeModalBooking()}\r\n                >\r\n                  <FormattedMessage id=\"user-view.booking-modal.cancel\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(ManageHandBook)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport UserManage from \"../containers/System/UserManage\";\r\nimport UserRedux from \"../containers/System/Admin/UserRedux\";\r\nimport Header from \"../containers/Header/Header\";\r\nimport ManageDoctor from \"../containers/System/Admin/ManageDoctor\";\r\nimport ManageSpecialty from \"../containers/System/Specialty/ManageSpecialty\";\r\nimport ChangePassword from \"../containers/System/Admin/ChangePassword\";\r\nimport ManageClinic from \"../containers/System/Clinic/ManageClinic\";\r\nimport ManageHandBook from \"../containers/System/ManageHandBook/ManageHandBook\";\r\n\r\nclass System extends Component {\r\n  render() {\r\n    const { systemMenuPath, isLoggedIn } = this.props;\r\n    return (\r\n      <>\r\n        {isLoggedIn && <Header />}\r\n        <div className=\"system-container\">\r\n          <div className=\"system-list\">\r\n            <Switch>\r\n              <Route path=\"/system/user-manage\" component={UserManage} />\r\n              <Route path=\"/system/user-redux\" component={UserRedux} />\r\n              <Route path=\"/system/manager-doctor\" component={ManageDoctor} />\r\n              <Route\r\n                path=\"/system/manage-specialty\"\r\n                component={ManageSpecialty}\r\n              />\r\n              <Route path=\"/system/manage-clinic\" component={ManageClinic} />\r\n              <Route\r\n                path=\"/system/manage-handbook\"\r\n                component={ManageHandBook}\r\n              />\r\n              <Route\r\n                path=\"/system/manage-password\"\r\n                component={ChangePassword}\r\n              />\r\n              <Route\r\n                component={() => {\r\n                  return <Redirect to={systemMenuPath} />;\r\n                }}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    systemMenuPath: state.app.systemMenuPath,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllSpecialtiesForHome } from \"../../../services/userService\";\r\nimport { LENGUAGES } from \"../../../utils/constant\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nclass Specialty extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listSpecialty: [],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {}\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllSpecialtiesForHome();\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        listSpecialty: res.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleViewMore = () => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/view-more-specialty`);\r\n    }\r\n  };\r\n\r\n  handleViewDetail = (specialty) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-specialty/${specialty.id}`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { language } = this.props;\r\n    let { listSpecialty } = this.state;\r\n    return (\r\n      <div className=\"section-common section-specialty\">\r\n        <div className=\"section-container container\">\r\n          <div className=\"section-header\">\r\n            <h3 className=\"section-title\">\r\n              <FormattedMessage id=\"home-page.specialist\" />\r\n            </h3>\r\n            <button\r\n              className=\"section-btn\"\r\n              onClick={() => this.handleViewMore()}\r\n            >\r\n              <FormattedMessage id=\"home-page.view-all\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"section-body\">\r\n            <Slider {...this.props.settings}>\r\n              {listSpecialty &&\r\n                listSpecialty.length > 0 &&\r\n                listSpecialty.map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      className=\"section-custom\"\r\n                      key={index}\r\n                      onClick={() => this.handleViewDetail(item)}\r\n                    >\r\n                      <div\r\n                        className=\"section-img specialty-img\"\r\n                        style={{ backgroundImage: `url(${item.image})` }}\r\n                      ></div>\r\n                      <p>\r\n                        {language === LENGUAGES.VI ? item.nameVi : item.nameEn}\r\n                      </p>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(Specialty)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllClinicForHome } from \"../../../services/userService\";\r\nimport { withRouter } from \"react-router\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nclass MedicalFacility extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listClinic: [],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {}\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllClinicForHome();\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        listClinic: res.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleViewMore = () => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/view-more-clinic`);\r\n    }\r\n  };\r\n\r\n  handleViewDetail = (clinic) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-clinic/${clinic.id}`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { listClinic } = this.state;\r\n    return (\r\n      <div className=\"section-common section-medical-facility\">\r\n        <div className=\"section-container container\">\r\n          <div className=\"section-header\">\r\n            <h3 className=\"section-title\">\r\n              <FormattedMessage id=\"home-page.clinics\" />\r\n            </h3>\r\n            <button\r\n              className=\"section-btn\"\r\n              onClick={() => this.handleViewMore()}\r\n            >\r\n              <FormattedMessage id=\"home-page.search\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"section-body\">\r\n            <Slider {...this.props.settings}>\r\n              {listClinic &&\r\n                listClinic.length > 0 &&\r\n                listClinic.map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      className=\"section-custom\"\r\n                      key={index}\r\n                      onClick={() => this.handleViewDetail(item)}\r\n                    >\r\n                      <div\r\n                        className=\"section-img medical-facility-img\"\r\n                        style={{ backgroundImage: `url(${item.image})` }}\r\n                      ></div>\r\n                      <p>{item.name}</p>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(MedicalFacility)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Slider from \"react-slick\";\r\nimport { withRouter } from \"react-router\";\r\nimport { getAllHandBook } from \"../../../services/userService\";\r\n\r\nclass HandBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listHandBook: [],\r\n      viewWidth: window.innerWidth,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllHandBook();\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        listHandBook: res.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {}\r\n\r\n  handleViewDetail = (handbook) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-handbook/${handbook.id}`);\r\n    }\r\n  };\r\n\r\n  handleViewMore = () => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/view-more-handbook`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let settings = {\r\n      dots: false,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 3,\r\n      slidesToScroll: 2,\r\n    };\r\n\r\n    let settingsSmall = {\r\n      dots: false,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 2,\r\n      slidesToScroll: 2,\r\n    };\r\n    let { listHandBook, viewWidth } = this.state;\r\n    return (\r\n      <div className=\"section-common section-medical-facility\">\r\n        <div className=\"section-container container\">\r\n          <div className=\"section-header\">\r\n            <h3 className=\"section-title\">\r\n              <FormattedMessage id=\"home-page.handbook\" />\r\n            </h3>\r\n            <button\r\n              className=\"section-btn\"\r\n              onClick={() => this.handleViewMore()}\r\n            >\r\n              <FormattedMessage id=\"home-page.view-all\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"section-body\">\r\n            {viewWidth >= 700 ? (\r\n              <Slider {...settings}>\r\n                {listHandBook &&\r\n                  listHandBook.length > 0 &&\r\n                  listHandBook.map((item, index) => {\r\n                    return (\r\n                      <div\r\n                        className=\"section-custom\"\r\n                        key={index}\r\n                        onClick={() => this.handleViewDetail(item)}\r\n                      >\r\n                        <div className=\"custom-handbook-section\">\r\n                          <div\r\n                            className=\"section-img handbook-img\"\r\n                            style={{ backgroundImage: `url(${item.image})` }}\r\n                          ></div>\r\n                          <p className=\"title-handbook\">{item.name}</p>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </Slider>\r\n            ) : (\r\n              <Slider {...settingsSmall}>\r\n                {listHandBook &&\r\n                  listHandBook.length > 0 &&\r\n                  listHandBook.map((item, index) => {\r\n                    return (\r\n                      <div\r\n                        className=\"section-custom\"\r\n                        key={index}\r\n                        onClick={() => this.handleViewDetail(item)}\r\n                      >\r\n                        <div className=\"custom-handbook-section\">\r\n                          <div\r\n                            className=\"section-img handbook-img\"\r\n                            style={{ backgroundImage: `url(${item.image})` }}\r\n                          ></div>\r\n                          <p className=\"title-handbook\">{item.name}</p>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </Slider>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(HandBook)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass About extends Component {\r\n  handleViewDetail = (handbook) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-handbook/7`);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"section-common\">\r\n        <div className=\"section-container container\">\r\n          <div className=\"section-header\">\r\n            <h3 className=\"section-title\">\r\n              <FormattedMessage id=\"home-page.about\" />\r\n            </h3>\r\n          </div>\r\n          <div className=\"section-body section-about\">\r\n            <div\r\n              className=\"about-image\"\r\n              onClick={() => this.handleViewDetail()}\r\n            ></div>\r\n            <div className=\"about-content\">\r\n              <p>\r\n                <strong>Health Care</strong> là nền tảng tập trung vào việc đặt\r\n                khám chuyên khoa, kết nối bệnh nhân với bác sĩ, cơ sở y tế và\r\n                giúp trải nghiệm đi khám của người bệnh được tốt hơn, hiệu quả\r\n                hơn. Đồng thời, góp phần giải quyết vấn đề quá tải của các bệnh\r\n                viện hiện nay.\r\n              </p>\r\n              <p>\r\n                Nền tảng này được xây dựng đơn giản, dễ sử dụng, phản ánh hành\r\n                trình đi khám thực tế của người bệnh. Tập trung vào nhóm bệnh\r\n                chuyên khoa, không có tính chất cấp cứu, bệnh mãn tính, những\r\n                người biết rõ tình trạng bệnh của mình và chủ động sắp xếp kế\r\n                hoạch đi khám.\r\n              </p>\r\n              <p>\r\n                Đặt lịch khám qua BookingCare, người bệnh chỉ cần đến nơi khám\r\n                trước 15 - 30 phút, được hướng dẫn cụ thể quy trình khám, biết\r\n                bác sĩ nào khám cho mình và chuẩn bị sao cho quá trình đi khám\r\n                thuận lợi nhất.{\" \"}\r\n              </p>\r\n              <p>\r\n                Nền tảng này còn chia sẻ các bài viết kinh nghiệm khám chữa bệnh\r\n                tại các bệnh viện uy tín (cả bệnh viện công và bệnh viện tư),\r\n                đây là tài liệu tham khảo thực tế, hữu ích cho người bệnh và\r\n                người nhà khi đi khám. Từ đó, quá trình đi khám của người bệnh\r\n                được hỗ trợ, hiệu quả hơn so với cách truyền thống, tiết kiệm\r\n                thời gian, chi phí, giúp cho người bệnh gặp được bác sĩ và\r\n                phương pháp phù hợp với tình hình bệnh tật của mình.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(About));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Banner extends Component {\r\n  componentDidMount() {}\r\n  handleViewMore = (id) => {\r\n    if (this.props.history) {\r\n      if (id === \"specialist\") this.props.history.push(`/view-more-specialty`);\r\n    }\r\n    if (this.props.history) {\r\n      if (id === \"doctor\") this.props.history.push(`/view-more-doctor`);\r\n    }\r\n    if (this.props.history) {\r\n      if (id === \"handbook\") this.props.history.push(`/view-more-handbook`);\r\n    }\r\n    if (this.props.history) {\r\n      if (id === \"facilities\") this.props.history.push(`/view-more-clinic`);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"home-header-banner\">\r\n          <div className=\"banner-up\">\r\n            <h1 className=\"banner-title\">\r\n              <FormattedMessage id=\"banner.base\" />\r\n            </h1>\r\n            <h1 className=\"banner-title banner-main-title\">\r\n              <FormattedMessage id=\"banner.health-care\" />\r\n            </h1>\r\n            {/* <div className=\"banner-search\">\r\n              <i className=\"fas fa-search\"></i>\r\n              <input\r\n                className=\"banner-input\"\r\n                type=\"text\"\r\n                placeholder=\"Tìm chuyên khoa\"\r\n              />\r\n            </div> */}\r\n          </div>\r\n          <div className=\"banner-down\">\r\n            <ul className=\"banner-down-options\">\r\n              <li\r\n                className=\"banner-options\"\r\n                onClick={() => this.handleViewMore(\"specialist\")}\r\n              >\r\n                <i className=\"fas fa-hospital-alt\"></i>\r\n                <div className=\"options-title\">\r\n                  <FormattedMessage id=\"banner.specialist\" />\r\n                </div>\r\n              </li>\r\n              <li\r\n                className=\"banner-options\"\r\n                onClick={() => this.handleViewMore(\"handbook\")}\r\n              >\r\n                <i className=\"fas fa-notes-medical\"></i>\r\n                <div className=\"options-title\">\r\n                  <FormattedMessage id=\"banner.check-health\" />\r\n                </div>\r\n              </li>\r\n              <li\r\n                className=\"banner-options\"\r\n                onClick={() => this.handleViewMore(\"facilities\")}\r\n              >\r\n                <i className=\"fas fa-map-marker-alt\"></i>\r\n                <div className=\"options-title\">\r\n                  <FormattedMessage id=\"banner.clinic\" />\r\n                </div>\r\n              </li>\r\n              <li\r\n                className=\"banner-options\"\r\n                onClick={() => this.handleViewMore(\"doctor\")}\r\n              >\r\n                <i className=\"fas fa-user-md\"></i>\r\n                <div className=\"options-title\">\r\n                  <FormattedMessage id=\"banner.doctor\" />\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Banner));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HomeHeader from \"./HomeHeader\";\r\nimport Specialty from \"./Section/Specialty\";\r\nimport MedicalFacility from \"./Section/MedicalFacility\";\r\nimport OutstandingDoctor from \"./Section/OutstandingDoctor\";\r\nimport HandBook from \"./Section/HandBook\";\r\nimport About from \"./Section/About\";\r\nimport Footer from \"./Section/Footer\";\r\nimport Banner from \"./Section/Banner\";\r\n\r\nimport \"./HomePage.scss\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewWidth: window.innerWidth,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      viewWidth: window.innerWidth,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let settings = {\r\n      dots: false,\r\n      infinite: false,\r\n      speed: 500,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 2,\r\n    };\r\n\r\n    let settingsSmall = {\r\n      dots: false,\r\n      infinite: false,\r\n      speed: 500,\r\n      slidesToShow: 2,\r\n      slidesToScroll: 2,\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <HomeHeader\r\n          handleShowNav={this.handleShowNav}\r\n          isShowNavBar={this.state.isShowNavBar}\r\n        />\r\n        <Banner />\r\n        <Specialty\r\n          settings={this.state.viewWidth >= 800 ? settings : settingsSmall}\r\n        />\r\n        <MedicalFacility\r\n          settings={this.state.viewWidth >= 800 ? settings : settingsSmall}\r\n        />\r\n        <OutstandingDoctor\r\n          settings={this.state.viewWidth >= 800 ? settings : settingsSmall}\r\n        />\r\n        <HandBook />\r\n        <About />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport './CustomScrollbars.scss';\r\n\r\nclass CustomScrollbars extends Component {\r\n\r\n    ref = React.createRef();\r\n\r\n    getScrollLeft =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollLeft();\r\n    }\r\n    getScrollTop =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollTop();\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const targetScrollTop = scrollbars.getScrollHeight();\r\n        this.scrollTo(targetScrollTop);\r\n    };\r\n\r\n    scrollTo = (targetTop) => {\r\n        const { quickScroll } = this.props;\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const originalTop = scrollbars.getScrollTop();\r\n        let iteration = 0;\r\n\r\n        const scroll = () => {\r\n            iteration++;\r\n            if (iteration > 30) {\r\n                return;\r\n            }\r\n            scrollbars.scrollTop(originalTop + (targetTop - originalTop) / 30 * iteration);\r\n\r\n            if (quickScroll && quickScroll === true) {\r\n                scroll();\r\n            } else {\r\n                setTimeout(() => {\r\n                    scroll();\r\n                }, 20);\r\n            }\r\n        };\r\n\r\n        scroll();\r\n    };\r\n\r\n    renderTrackHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderTrackVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderThumbHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderThumbVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderNone = (props) => {\r\n        return (\r\n            <div />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, disableVerticalScroll, disableHorizontalScroll, children,...otherProps } = this.props;\r\n        return (\r\n            <Scrollbars\r\n                ref={this.ref}\r\n                autoHide={true}\r\n                autoHideTimeout={200}\r\n                hideTracksWhenNotNeeded={true}\r\n                className={className ? className + ' custom-scrollbar' : 'custom-scrollbar'}\r\n                {...otherProps}\r\n                renderTrackHorizontal={disableHorizontalScroll ? this.renderNone : this.renderTrackHorizontal}\r\n                renderTrackVertical={disableVerticalScroll ? this.renderNone : this.renderTrackVertical}\r\n                renderThumbHorizontal={disableHorizontalScroll ? this.renderNone : this.renderThumbHorizontal}\r\n                renderThumbVertical={disableVerticalScroll ? this.renderNone : this.renderThumbVertical}\r\n            >\r\n                {children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomScrollbars;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport \"./DoctorInfo.scss\";\r\nimport { getInfoDoctorService } from \"../../../../services/userService\";\r\nimport { LENGUAGES } from \"../../../../utils/constant\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport localization from \"moment/locale/vi\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass DoctorInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      infoDoctor: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getInfoDoctorService(this.props.idDoctor);\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        infoDoctor: res.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.idDoctor !== this.props.idDoctor) {\r\n      let res = await getInfoDoctorService(this.props.idDoctor);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          infoDoctor: res.data,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  showTime = (dataTime) => {\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let date =\r\n        this.props.language === LENGUAGES.VI\r\n          ? this.capitalizeFirstLetter(\r\n              moment.unix(+dataTime.date / 1000).format(\"dddd - DD/MM/YYYY\")\r\n            )\r\n          : moment\r\n              .unix(+dataTime.date / 1000)\r\n              .locale(\"en\")\r\n              .format(\"ddd - MM/DD/YYYY\");\r\n      let time =\r\n        this.props.language === LENGUAGES.VI\r\n          ? dataTime.timeTypeData.valueVi\r\n          : dataTime.timeTypeData.valueEn;\r\n      return (\r\n        <>\r\n          <div className=\"doctor-schedule\">{`${time} - ${date}`}</div>\r\n          <div>\r\n            <FormattedMessage id=\"user-view.booking-modal.free-booking\" />\r\n          </div>\r\n        </>\r\n      );\r\n    } else return <></>;\r\n  };\r\n\r\n  render() {\r\n    let { infoDoctor } = this.state;\r\n    let { language, timeData, isShowPrice, isShowMore, idDoctor } = this.props;\r\n    let valueVi = \"\",\r\n      valueEn = \"\";\r\n    if (infoDoctor && infoDoctor.positionData) {\r\n      valueVi = `${infoDoctor.positionData.valueVi}, ${infoDoctor.lastName} ${infoDoctor.firstName}`;\r\n      valueEn = `${infoDoctor.positionData.valueEn}, ${infoDoctor.firstName} ${infoDoctor.lastName}`;\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"doctor-info-container container\">\r\n          <div className=\"detail-doctor-top-left\">\r\n            <div\r\n              className=\"avatar-doctor\"\r\n              style={{\r\n                backgroundImage:\r\n                  infoDoctor && infoDoctor.image\r\n                    ? `url(${infoDoctor.image})`\r\n                    : \"\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"detail-doctor-top-right\">\r\n            <p className=\"detail-doctor-title\">\r\n              {language === LENGUAGES.VI ? valueVi : valueEn}\r\n            </p>\r\n            {this.props.isShowDesc === true ? (\r\n              <>\r\n                <p className=\"detail-doctor-des\">\r\n                  {infoDoctor && infoDoctor.Doctor_Intro\r\n                    ? infoDoctor.Doctor_Intro.description\r\n                    : \"\"}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <>{this.showTime(timeData)}</>\r\n            )}\r\n            {isShowPrice === true && (\r\n              <div className=\"doctor-price\">\r\n                <FormattedMessage id=\"user-view.booking-modal.price\" />{\" \"}\r\n                {language === LENGUAGES.VI\r\n                  ? infoDoctor &&\r\n                    infoDoctor.Doctor_Info &&\r\n                    infoDoctor.Doctor_Info.priceTypeData &&\r\n                    infoDoctor.Doctor_Info.priceTypeData.valueVi\r\n                  : infoDoctor &&\r\n                    infoDoctor.Doctor_Info &&\r\n                    infoDoctor.Doctor_Info.priceTypeData &&\r\n                    infoDoctor.Doctor_Info.priceTypeData.valueEn}\r\n              </div>\r\n            )}\r\n            {isShowMore === true && (\r\n              <div className=\"redirect-doctorInfo\">\r\n                <Link to={`/detail-doctor/${idDoctor}`}>\r\n                  <FormattedMessage id=\"home-page.view-more\" />\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorInfo);\r\n","import React, { Component } from 'react';\r\nimport Flatpickr from 'react-flatpickr';\r\nimport moment from 'moment';\r\n\r\nimport { KeyCodeUtils } from \"../../utils\";\r\nimport './DatePicker.scss';\r\n\r\n// const CustomInput = ({ value, defaultValue, inputRef, onInputChange, onInputBlur, ...props }) => {\r\n//     return <input {...props} className='custom-form-control custom-date-input' defaultValue={defaultValue} ref={inputRef}\r\n//         onChange={onInputChange}\r\n//         onBlur={onInputBlur}\r\n//     />;\r\n// };\r\n\r\nclass DatePicker extends Component {\r\n\r\n    flatpickrNode = null;\r\n\r\n    nodeRef = element => {\r\n        this.flatpickr = element && element.flatpickr;\r\n        this.flatpickrNode = element && element.node;\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.addEventListener('blur', this.handleBlur);\r\n            this.flatpickrNode.addEventListener('keydown', this.handlerKeyDown);\r\n        }\r\n    };\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            event.preventDefault();\r\n            const { onChange } = this.props;\r\n            const value = event.target.value;\r\n\r\n            // Take the blur event and process the string value\r\n            const valueMoment = moment(value, 'DD/MM/YYYY');\r\n            onChange([valueMoment.toDate(), valueMoment.toDate()]);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.removeEventListener('blur', this.handleBlur);\r\n            this.flatpickrNode.removeEventListener('keydown', this.handlerKeyDown);\r\n        }\r\n    }\r\n\r\n    handleBlur = (event) => {\r\n        const { onChange } = this.props;\r\n        const value = event.target.value;\r\n\r\n        // Take the blur event and process the string value\r\n        event.preventDefault();\r\n        const valueMoment = moment(value, 'DD/MM/YYYY');\r\n        onChange([valueMoment.toDate(), valueMoment.toDate()]);\r\n    };\r\n\r\n    onOpen = () => {\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.blur();\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.flatpickr.close();\r\n    }\r\n\r\n    checkDateValue = (str, max) => {\r\n        if (str.charAt(0) !== '0' || str === '00') {\r\n            var num = parseInt(str);\r\n            if (isNaN(num) || num <= 0 || num > max) num = 1;\r\n            str = num > parseInt(max.toString().charAt(0)) && num.toString().length === 1 ? '0' + num : num.toString();\r\n        };\r\n        return str;\r\n    }\r\n\r\n    // autoFormatonBlur = (value) => {\r\n    //     var input = value;\r\n    //     var values = input.split('/').map(function (v, i) {\r\n    //         return v.replace(/\\D/g, '')\r\n    //     });\r\n    //     var output = '';\r\n\r\n    //     if (values.length == 3) {\r\n    //         var year = values[2].length !== 4 ? parseInt(values[2]) + 2000 : parseInt(values[2]);\r\n    //         var month = parseInt(values[0]) - 1;\r\n    //         var day = parseInt(values[1]);\r\n    //         var d = new Date(year, month, day);\r\n    //         if (!isNaN(d)) {\r\n    //             //document.getElementById('result').innerText = d.toString();\r\n    //             var dates = [d.getMonth() + 1, d.getDate(), d.getFullYear()];\r\n    //             output = dates.map(function (v) {\r\n    //                 v = v.toString();\r\n    //                 return v.length == 1 ? '0' + v : v;\r\n    //             }).join(' / ');\r\n    //         };\r\n    //     };\r\n    //     // this.value = output;\r\n    //     return output;\r\n    // }\r\n\r\n    autoFormatOnChange = (value, seperator) => {\r\n        var input = value;\r\n\r\n        let regexForDeleting = new RegExp(`\\\\D\\\\${seperator}$`);\r\n\r\n        //if (/\\D\\/$/.test(input)) input = input.substr(0, input.length - 3); // dat.nt: Xóa thêm 1 ký tự nếu xóa dấu cách sau / (VD: 12 / 12 /=> 12 / 1)\r\n\r\n        if (regexForDeleting.test(input)) input = input.substr(0, input.length - 3);\r\n\r\n        var values = input.split(seperator).map(function (v) {\r\n            return v.replace(/\\D/g, '')\r\n        });\r\n\r\n        if (values[0]) values[0] = this.checkDateValue(values[0], 31);\r\n        if (values[1]) values[1] = this.checkDateValue(values[1], 12);\r\n        var output = values.map(function (v, i) {\r\n            return v.length === 2 && i < 2 ? v + ' ' + seperator + ' ' : v;\r\n        });\r\n        return output.join('').substr(0, 14);\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        if (this.DISPLAY_FORMAT === this.DATE_FORMAT_AUTO_FILL) {\r\n            let converted = this.autoFormatOnChange(e.target.value, this.SEPERATOR);\r\n            e.target.value = converted;\r\n        }\r\n    }\r\n\r\n    onInputBlur = (e) => {\r\n    }\r\n\r\n    //dat.nt : Auto Fill cho dạng ngăn cách và format cụ thể (seperator có thể dc thay thế)\r\n    SEPERATOR = \"/\";\r\n    DATE_FORMAT_AUTO_FILL = \"d/m/Y\"; // Format không thay đổi\r\n\r\n    // dat.nt : Format ngày hiển thị\r\n    DISPLAY_FORMAT = \"d/m/Y\";\r\n\r\n    render() {\r\n        const { value, onChange, minDate, onClose, ...otherProps } = this.props;\r\n        const options = {\r\n            dateFormat: this.DISPLAY_FORMAT,\r\n            allowInput: true,\r\n            disableMobile: true,\r\n            onClose: onClose,\r\n            onOpen: this.onOpen\r\n        };\r\n        if (minDate) {\r\n            options.minDate = minDate;\r\n        }\r\n        return (\r\n            <Flatpickr\r\n                ref={this.nodeRef}\r\n                value={value}\r\n                onChange={onChange}\r\n                options={options}\r\n                // render={\r\n                //     ({ defaultValue, value, ...props }, ref) => {\r\n                //         return <CustomInput defaultValue={defaultValue} inputRef={ref} onInputChange={this.onInputChange} onInputBlur={this.onInputBlur} />\r\n                //     }\r\n                // }\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DatePicker;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Modal } from \"reactstrap\";\r\nimport { push } from \"connected-react-router\";\r\nimport \"./BookingModal.scss\";\r\nimport DoctorInfo from \"./DoctorInfo\";\r\nimport { LENGUAGES } from \"../../../../utils/constant\";\r\nimport DatePicker from \"../../../../components/Input/DatePicker\";\r\nimport * as actions from \"../../../../store/actions\";\r\nimport Select from \"react-select\";\r\nimport _ from \"lodash\";\r\nimport { savePatientBooking } from \"../../../../../src/services/userService\";\r\nimport { toast } from \"react-toastify\";\r\nimport moment from \"moment\";\r\n\r\nclass BookingModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      scheduleId: \"\",\r\n      doctorId: \"\",\r\n      fullName: \"\",\r\n      phonenumber: \"\",\r\n      address: \"\",\r\n      email: \"\",\r\n      dateOfBirth: \"\",\r\n      selectedGender: \"\",\r\n      reason: \"\",\r\n      listGender: [],\r\n      date: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.props.getGender();\r\n    if (this.props.userInfo) {\r\n      this.setState({\r\n        fullName: `${this.props.userInfo.lastName} ${this.props.userInfo.firstName}`,\r\n        email: this.props.userInfo.email,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevProps.gender !== this.props.gender ||\r\n      this.props.language !== prevProps.language\r\n    ) {\r\n      let lisGender = this.buildDataForSelect(this.props.gender);\r\n      this.setState({\r\n        listGender: lisGender,\r\n      });\r\n    }\r\n    if (prevProps.dataTime !== this.props.dataTime) {\r\n      if (this.props.dataTime && !_.isEmpty(this.props.dataTime)) {\r\n        let scheduleId = this.props.dataTime.id;\r\n        let doctorId = this.props.dataTime.doctorId;\r\n        let timeType = this.props.dataTime.timeType;\r\n        let date = this.props.dataTime.date;\r\n        this.setState({\r\n          scheduleId: scheduleId,\r\n          doctorId: doctorId,\r\n          timeType: timeType,\r\n          date: date,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  buildDataForSelect = (inputData) => {\r\n    let listOptions = [];\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.map((item, index) => {\r\n        let obj = {};\r\n        let label =\r\n          this.props.language === LENGUAGES.VI\r\n            ? `${item.valueVi}`\r\n            : `${item.valueEn}`;\r\n        let value = item.keyMap;\r\n        obj.value = value;\r\n        obj.label = label;\r\n        return listOptions.push(obj);\r\n      });\r\n    }\r\n    return listOptions;\r\n  };\r\n\r\n  handleOnchangeInput = (e, id) => {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = e.target.value;\r\n    this.setState({ ...copyState });\r\n  };\r\n\r\n  handleOnchangeDatePicker = (date) => {\r\n    this.setState({\r\n      dateOfBirth: date[0],\r\n    });\r\n  };\r\n\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedGender: selectedOption });\r\n  };\r\n\r\n  //start\r\n  validateEmail = (email) => {\r\n    return String(email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  };\r\n\r\n  validatePhone = (number) => {\r\n    return /(03|05|07|08|09|01[2|6|8|9])+([0-9]{8})\\b/.test(number);\r\n  };\r\n\r\n  validInput = () => {\r\n    let isValid = true;\r\n    if (!this.validateEmail(this.state.email)) {\r\n      isValid = false;\r\n      toast.error(\"Địa chỉ email không hợp lệ!!\");\r\n      return;\r\n    } else if (!this.validatePhone(this.state.phonenumber)) {\r\n      isValid = false;\r\n      toast.error(\"Số điện thoại không hợp lệ !!\");\r\n      return;\r\n    } else {\r\n      let arr = [\r\n        \"fullName\",\r\n        \"phonenumber\",\r\n        \"address\",\r\n        \"email\",\r\n        \"reason\",\r\n        \"dateOfBirth\",\r\n        \"selectedGender\",\r\n      ];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (!this.state[arr[i]]) {\r\n          isValid = false;\r\n          toast.error(`Vui lòng điền đầy đủ thông tin !!`);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n  //end\r\n\r\n  handleSubmit = async () => {\r\n    let isValid = this.validInput();\r\n    if (isValid) {\r\n      this.props.handleLoadingToChild(true);\r\n      let timeString = this.buildTimeBooking(this.props.dataTime);\r\n      let doctorName = this.buildDoctorName(this.props.dataTime);\r\n      let res = await savePatientBooking({\r\n        scheduleId: this.state.scheduleId,\r\n        doctorId: this.state.doctorId,\r\n        fullName: this.state.fullName,\r\n        phonenumber: this.state.phonenumber,\r\n        address: this.state.address,\r\n        email: this.state.email,\r\n        dateOfBirth: new Date(this.state.dateOfBirth).getTime(),\r\n        gender: this.state.selectedGender.value,\r\n        reason: this.state.reason,\r\n        timeType: this.state.timeType,\r\n        date: this.state.date,\r\n        doctorName: doctorName,\r\n        timeString: timeString,\r\n        language: this.props.language,\r\n      });\r\n\r\n      if (res && res.errCode === 0) {\r\n        this.props.handleLoadingToChild(false);\r\n        toast.success(\"Đặt lịch thành công !!\");\r\n        this.props.closeModalBooking();\r\n      } else {\r\n        this.props.handleLoadingToChild(false);\r\n        toast.error(\"Đặt lịch thất bại !!\");\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  buildTimeBooking = (dataTime) => {\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let date =\r\n        this.props.language === LENGUAGES.VI\r\n          ? this.capitalizeFirstLetter(\r\n              moment.unix(+dataTime.date / 1000).format(\"dddd - DD/MM/YYYY\")\r\n            )\r\n          : moment\r\n              .unix(+dataTime.date / 1000)\r\n              .locale(\"en\")\r\n              .format(\"ddd - MM/DD/YYYY\");\r\n      let time =\r\n        this.props.language === LENGUAGES.VI\r\n          ? dataTime.timeTypeData.valueVi\r\n          : dataTime.timeTypeData.valueEn;\r\n      return `${time} - ${date}`;\r\n    } else return \"\";\r\n  };\r\n\r\n  buildDoctorName = (dataTime) => {\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let name =\r\n        this.props.language === LENGUAGES.VI\r\n          ? `${dataTime.doctorData.lastName} ${dataTime.doctorData.firstName}`\r\n          : `${dataTime.doctorData.firstName} ${dataTime.doctorData.lastName}`;\r\n      return name;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  // goToLogin = () => {\r\n  //   if (this.props.history) {\r\n  //     this.props.history.push(`/login`);\r\n  //   }\r\n  // };\r\n\r\n  goToLogin = () => {\r\n    const { navigate } = this.props;\r\n    const redirectPath = \"/login\";\r\n    navigate(`${redirectPath}`);\r\n  };\r\n\r\n  render() {\r\n    let { isShowModalBooking, closeModalBooking, dataTime, isLoggedIn } =\r\n      this.props;\r\n    return (\r\n      <Modal isOpen={isShowModalBooking} className={\"schedule-modal\"} size=\"lg\">\r\n        <div className=\"modal-schedule-container\">\r\n          <div className=\"modal-header\">\r\n            <span>\r\n              <FormattedMessage id=\"user-view.booking-modal.info-booking\" />\r\n            </span>\r\n            <span>\r\n              <i className=\"fas fa-times\" onClick={closeModalBooking}></i>\r\n            </span>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"info-schedule\">\r\n              <DoctorInfo\r\n                idDoctor={\r\n                  dataTime && dataTime.doctorId ? dataTime.doctorId : \"\"\r\n                }\r\n                timeData={dataTime}\r\n                isShowDesc={false}\r\n                isShowPrice={true}\r\n                isShowMore={false}\r\n              />\r\n            </div>\r\n\r\n            {isLoggedIn && isLoggedIn === true ? (\r\n              <>\r\n                <div className=\"row container\">\r\n                  <div className=\"col-6 form-group my-2\">\r\n                    <label>\r\n                      <FormattedMessage id=\"user-view.booking-modal.full-name\" />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      onChange={(e) => this.handleOnchangeInput(e, \"fullName\")}\r\n                      value={this.state.fullName}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group my-2\">\r\n                    <label>\r\n                      <FormattedMessage id=\"user-view.booking-modal.phonenumber\" />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      onChange={(e) =>\r\n                        this.handleOnchangeInput(e, \"phonenumber\")\r\n                      }\r\n                      value={this.state.phonenumber}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group my-2\">\r\n                    <label>\r\n                      <FormattedMessage id=\"user-view.booking-modal.email\" />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      onChange={(e) => this.handleOnchangeInput(e, \"email\")}\r\n                      value={this.state.email}\r\n                      disabled\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group my-2\">\r\n                    <label>\r\n                      <FormattedMessage id=\"user-view.booking-modal.address\" />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      onChange={(e) => this.handleOnchangeInput(e, \"address\")}\r\n                      value={this.state.address}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group my-2\">\r\n                    <label>\r\n                      <FormattedMessage id=\"user-view.booking-modal.date-of-birth\" />\r\n                    </label>\r\n                    <DatePicker\r\n                      className=\"form-control\"\r\n                      onChange={this.handleOnchangeDatePicker}\r\n                      value={this.state.currentDate}\r\n                      minDate={new Date(\"01/01/1920\")}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6 form-group my-2\">\r\n                    <label>\r\n                      <FormattedMessage id=\"user-view.booking-modal.sex\" />\r\n                    </label>\r\n                    <Select\r\n                      value={this.state.selectedGender}\r\n                      onChange={this.handleChangeSelect}\r\n                      options={this.state.listGender}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-12 form-group my-2\">\r\n                    <label>\r\n                      <FormattedMessage id=\"user-view.booking-modal.reason\" />\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      onChange={(e) => this.handleOnchangeInput(e, \"reason\")}\r\n                      value={this.state.reason}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"text-center\">\r\n                Vui lòng{\" \"}\r\n                <span\r\n                  onClick={() => this.goToLogin()}\r\n                  style={{\r\n                    textDecoration: \"underline\",\r\n                    color: \"blue\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  đăng nhập\r\n                </span>{\" \"}\r\n                để tiếp tục !!\r\n              </div>\r\n            )}\r\n          </div>\r\n          {isLoggedIn && isLoggedIn === true && (\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"btn-confirm\"\r\n                onClick={() => this.handleSubmit()}\r\n              >\r\n                <FormattedMessage id=\"user-view.booking-modal.confirm\" />\r\n              </button>\r\n              <button className=\"btn-cancel\" onClick={closeModalBooking}>\r\n                <FormattedMessage id=\"user-view.booking-modal.cancel\" />\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    gender: state.admin.genders,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getGender: () => dispatch(actions.fetchGenderStart()),\r\n    navigate: (path) => dispatch(push(path)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { LENGUAGES } from \"../../../../utils/constant\";\r\nimport \"./DoctorSchedule.scss\";\r\nimport { getScheduleDoctorService } from \"../../../../services/userService\";\r\nimport moment from \"moment\";\r\nimport localization from \"moment/locale/vi\";\r\nimport BookingModal from \"./BookingModal\";\r\n\r\nclass DoctorSchedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      idDoctor: \"\",\r\n      listDays: [],\r\n      availabelTime: [],\r\n      isShowModalBooking: false,\r\n      dataScheduleModal: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let { language } = this.props;\r\n\r\n    let listDays = this.getArrDays(language);\r\n    this.setState({\r\n      listDays,\r\n    });\r\n    if (listDays && listDays.length > 0) {\r\n      let res = await getScheduleDoctorService(\r\n        this.props.idDoctor,\r\n        listDays[0].value\r\n      );\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          availabelTime: res.data ? res.data : [],\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.language !== this.props.language) {\r\n      let listDays = this.getArrDays(this.props.language);\r\n      this.setState({\r\n        listDays,\r\n      });\r\n    }\r\n    if (prevProps.idDoctor !== this.props.idDoctor) {\r\n      let res = await getScheduleDoctorService(\r\n        this.props.idDoctor,\r\n        this.state.listDays[0].value\r\n      );\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          availabelTime: res.data ? res.data : [],\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  getArrDays = (language) => {\r\n    let listDays = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      let obj = {};\r\n      if (language === LENGUAGES.VI) {\r\n        if (i === 0) {\r\n          let formatDay = moment(new Date()).format(\"DD/MM\");\r\n          obj.label = `Hôm nay - ${formatDay}`;\r\n        } else {\r\n          let valueVi = moment(new Date())\r\n            .add(i, \"days\")\r\n            .format(\"dddd - DD/MM\");\r\n          obj.label = this.capitalizeFirstLetter(valueVi);\r\n        }\r\n      } else {\r\n        if (i === 0) {\r\n          let formatDay = moment(new Date()).format(\"DD/MM\");\r\n          obj.label = `Today - ${formatDay}`;\r\n        } else {\r\n          obj.label = moment(new Date())\r\n            .add(i, \"days\")\r\n            .locale(\"en\")\r\n            .format(\"ddd - DD/MM\");\r\n        }\r\n      }\r\n      obj.value = moment(new Date()).add(i, \"days\").startOf(\"day\").valueOf();\r\n      listDays.push(obj);\r\n    }\r\n    return listDays;\r\n  };\r\n\r\n  handleSelectDay = async (e) => {\r\n    if (this.props.idDoctor && this.props.idDoctor !== -1) {\r\n      let date = e.target.value;\r\n      let res = await getScheduleDoctorService(this.props.idDoctor, date);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          availabelTime: res.data ? res.data : [],\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleShowHideBooking = (time) => {\r\n    this.setState({\r\n      isShowModalBooking: true,\r\n      dataScheduleModal: time,\r\n    });\r\n  };\r\n\r\n  closeModalBooking = () => {\r\n    this.setState({\r\n      isShowModalBooking: false,\r\n    });\r\n  };\r\n\r\n  handleLoading = (boolean) => {\r\n    this.props.handleShowLoadingFromParent(boolean);\r\n  };\r\n\r\n  render() {\r\n    let { listDays, availabelTime } = this.state;\r\n    let { language } = this.props;\r\n    let currentDate = new Date().getTime();\r\n\r\n    if (availabelTime && availabelTime.length > 0) {\r\n      availabelTime.map((item, index) => {\r\n        if (item && item.timeType === \"T1\") {\r\n          item.dateTimestamp = +item.date + 3600000 * 8;\r\n        } else if (item && item.timeType === \"T2\") {\r\n          item.dateTimestamp = +item.date + 3600000 * 9;\r\n        } else if (item && item.timeType === \"T3\") {\r\n          item.dateTimestamp = +item.date + 3600000 * 10;\r\n        } else if (item && item.timeType === \"T4\") {\r\n          item.dateTimestamp = +item.date + 3600000 * 11;\r\n        } else if (item && item.timeType === \"T5\") {\r\n          item.dateTimestamp = +item.date + 3600000 * 13;\r\n        } else if (item && item.timeType === \"T6\") {\r\n          item.dateTimestamp = +item.date + 3600000 * 14;\r\n        } else if (item && item.timeType === \"T7\") {\r\n          item.dateTimestamp = +item.date + 3600000 * 15;\r\n        } else if (item && item.timeType === \"T8\") {\r\n          item.dateTimestamp = +item.date + 3600000 * 16;\r\n        }\r\n        return availabelTime;\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"schedule-container container\">\r\n          <div className=\"all-days\">\r\n            <select onChange={(e) => this.handleSelectDay(e)}>\r\n              {listDays &&\r\n                listDays.length > 0 &&\r\n                listDays.map((item, index) => {\r\n                  return (\r\n                    <option key={index} value={item.value}>\r\n                      {item.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"select-time\">\r\n            <i className=\"fas fa-calendar\"></i>\r\n            <span>\r\n              <FormattedMessage id=\"user-view.detail-doctor.schedule\" />\r\n            </span>\r\n          </div>\r\n          <div className=\"availabel-time\">\r\n            {availabelTime && availabelTime.length > 0 ? (\r\n              availabelTime.map((item, index) => {\r\n                if (\r\n                  item &&\r\n                  item.dateTimestamp > currentDate &&\r\n                  +item.countBooking < 2\r\n                ) {\r\n                  return (\r\n                    <button\r\n                      key={index}\r\n                      className=\"button-time\"\r\n                      onClick={() => this.handleShowHideBooking(item)}\r\n                    >\r\n                      {language === LENGUAGES.VI\r\n                        ? item.timeTypeData.valueVi\r\n                        : item.timeTypeData.valueEn}\r\n                    </button>\r\n                  );\r\n                } else if (\r\n                  (item && item.dateTimestamp < currentDate) ||\r\n                  +item.countBooking >= 2\r\n                ) {\r\n                  return (\r\n                    <button\r\n                      key={index}\r\n                      className=\"button-time\"\r\n                      onClick={() => this.handleShowHideBooking(item)}\r\n                      style={{\r\n                        pointerEvents: \"none\",\r\n                        backgroundColor: \"gray\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Không có sẵn\r\n                    </button>\r\n                  );\r\n                }\r\n              })\r\n            ) : (\r\n              <div className=\"no-schedule\">\r\n                <FormattedMessage id=\"user-view.detail-doctor.no-schedule\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n          {availabelTime && availabelTime.length > 0 && (\r\n            <div className=\"select-book\">\r\n              <FormattedMessage id=\"user-view.detail-doctor.choose\" />{\" \"}\r\n              <i className=\"far fa-hand-point-up\"></i>{\" \"}\r\n              <FormattedMessage id=\"user-view.detail-doctor.booking\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <BookingModal\r\n          isShowModalBooking={this.state.isShowModalBooking}\r\n          closeModalBooking={this.closeModalBooking}\r\n          dataTime={this.state.dataScheduleModal}\r\n          handleLoadingToChild={this.handleLoading}\r\n          isLoggedIn={this.props.isLoggedIn}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { LENGUAGES } from \"../../../../utils/constant\";\r\nimport \"./DoctorMore.scss\";\r\nimport { getExtraDoctorInfoService } from \"../../../../services/userService\";\r\n\r\nclass DoctorMore extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShowDetailPrice: false,\r\n      doctorExtraInfo: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getExtraDoctorInfoService(this.props.idDoctor);\r\n    this.setState({\r\n      doctorExtraInfo: res.data,\r\n    });\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevProps.language !== this.props.language ||\r\n      this.props.idDoctor !== prevProps.idDoctor\r\n    ) {\r\n      let res = await getExtraDoctorInfoService(this.props.idDoctor);\r\n      this.setState({\r\n        doctorExtraInfo: res.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDisplayDetail = (stateView) => {\r\n    this.setState({\r\n      isShowDetailPrice: stateView,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { language } = this.props;\r\n    let { isShowDetailPrice, doctorExtraInfo } = this.state;\r\n    return (\r\n      <div className=\"doctor-more-detail\">\r\n        <div className=\"content-up\">\r\n          <div className=\"content-up-title\">\r\n            <FormattedMessage id=\"user-view.detail-doctor.address-clinic\" />\r\n          </div>\r\n          <div className=\"content-up-specialty\">\r\n            {doctorExtraInfo &&\r\n            doctorExtraInfo.doctorClinicData &&\r\n            doctorExtraInfo.doctorClinicData.name\r\n              ? doctorExtraInfo.doctorClinicData.name\r\n              : \"\"}\r\n          </div>\r\n          <div className=\"content-up-address\">\r\n            {doctorExtraInfo &&\r\n            doctorExtraInfo.doctorClinicData &&\r\n            doctorExtraInfo.doctorClinicData.address\r\n              ? doctorExtraInfo.doctorClinicData.address\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"content-down\">\r\n          {isShowDetailPrice === false ? (\r\n            <div className=\"content-down-shot\">\r\n              <span className=\"content-down-shot-title\">\r\n                <FormattedMessage id=\"user-view.detail-doctor.price\" />\r\n              </span>\r\n              <span className=\"content-down-shot-price\">\r\n                {language === LENGUAGES.VI\r\n                  ? doctorExtraInfo &&\r\n                    doctorExtraInfo.priceTypeData &&\r\n                    doctorExtraInfo.priceTypeData.valueVi\r\n                  : doctorExtraInfo &&\r\n                    doctorExtraInfo.priceTypeData &&\r\n                    doctorExtraInfo.priceTypeData.valueEn}\r\n              </span>\r\n              <span\r\n                className=\"content-down-shot-more\"\r\n                onClick={() => this.handleDisplayDetail(true)}\r\n              >\r\n                <FormattedMessage id=\"user-view.detail-doctor.view-detail\" />\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"content-down-detail\">\r\n              <div className=\"content-down-detail-title\">\r\n                <FormattedMessage id=\"user-view.detail-doctor.price\" />\r\n              </div>\r\n              <div className=\"content-down-detail-up\">\r\n                <div className=\"content-detail-up-price\">\r\n                  <span className=\"content-down-shot-up-title\">\r\n                    <FormattedMessage id=\"user-view.detail-doctor.price\" />\r\n                  </span>\r\n                  <span className=\"content-down-shot-up-price\">\r\n                    {language === LENGUAGES.VI\r\n                      ? doctorExtraInfo &&\r\n                        doctorExtraInfo.priceTypeData &&\r\n                        doctorExtraInfo.priceTypeData.valueVi\r\n                      : doctorExtraInfo &&\r\n                        doctorExtraInfo.priceTypeData &&\r\n                        doctorExtraInfo.priceTypeData.valueEn}\r\n                  </span>\r\n                </div>\r\n                <div className=\"content-detail-up-text\">\r\n                  {doctorExtraInfo && doctorExtraInfo.note}\r\n                </div>\r\n              </div>\r\n              <div className=\"content-down-detail-down\">\r\n                <FormattedMessage id=\"user-view.detail-doctor.payment\" />\r\n                {language === LENGUAGES.VI\r\n                  ? doctorExtraInfo &&\r\n                    doctorExtraInfo.paymentTypeData &&\r\n                    doctorExtraInfo.paymentTypeData.valueVi\r\n                  : doctorExtraInfo &&\r\n                    doctorExtraInfo.paymentTypeData &&\r\n                    doctorExtraInfo.paymentTypeData.valueEn}\r\n              </div>\r\n              <span\r\n                className=\"content-down-shot-more\"\r\n                onClick={() => this.handleDisplayDetail(false)}\r\n              >\r\n                <FormattedMessage id=\"user-view.detail-doctor.hide-detail\" />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorMore);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../store/actions\";\r\nimport { LENGUAGES } from \"../../../../utils/constant\";\r\nimport HomeHeader from \"../../HomeHeader\";\r\nimport \"./DetailDoctor.scss\";\r\nimport DoctorSchedule from \"./DoctorSchedule\";\r\nimport DoctorMore from \"./DoctorMore\";\r\nimport Footer from \"../../Section/Footer\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport { getRating } from \"../../../../services/userService\";\r\n\r\nclass DetailDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      infoDoctor: [],\r\n      isLoading: false,\r\n      dataRating: [],\r\n    };\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.infoDoctor !== this.props.infoDoctor) {\r\n      this.setState({\r\n        infoDoctor: this.props.infoDoctor,\r\n      });\r\n    }\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      if (\r\n        this.props.match &&\r\n        this.props.match.params &&\r\n        this.props.match.params.id\r\n      ) {\r\n        let doctorId = this.props.match.params.id;\r\n        let res = await getRating(doctorId);\r\n        if (res && res.errCode === 0) {\r\n          this.setState({\r\n            dataRating: res.data,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.props.getInfoDoctor(this.props.match.params.id);\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      let doctorId = this.props.match.params.id;\r\n      let res = await getRating(doctorId);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          dataRating: res.data,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleShowLoading = (boolean) => {\r\n    this.setState({\r\n      isLoading: boolean,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { infoDoctor, dataRating } = this.state;\r\n    let language = this.props.language;\r\n    let valueVi = \"\",\r\n      valueEn = \"\";\r\n    if (infoDoctor && infoDoctor.positionData) {\r\n      valueVi = `${infoDoctor.positionData.valueVi}, ${infoDoctor.lastName} ${infoDoctor.firstName}`;\r\n      valueEn = `${infoDoctor.positionData.valueEn}, ${infoDoctor.firstName} ${infoDoctor.lastName}`;\r\n    }\r\n    let dataContent =\r\n      infoDoctor && infoDoctor.Doctor_Intro\r\n        ? infoDoctor.Doctor_Intro.contentHTML\r\n        : \"\";\r\n    let rating = 0;\r\n    if (dataRating && dataRating.length > 0) {\r\n      rating =\r\n        dataRating[0].ratingDoctor.Doctor_Info.total /\r\n        dataRating[0].ratingDoctor.Doctor_Info.count;\r\n    }\r\n    return (\r\n      <>\r\n        <LoadingOverlay active={this.state.isLoading} spinner text=\"Loading...\">\r\n          <HomeHeader />\r\n\r\n          <div className=\"container detail-doctor-top\">\r\n            <div className=\"content-detail-top\">\r\n              <div className=\"detail-doctor-top-left\">\r\n                <div\r\n                  className=\"avatar-doctor\"\r\n                  style={{\r\n                    backgroundImage:\r\n                      infoDoctor && infoDoctor.image\r\n                        ? `url(${infoDoctor.image})`\r\n                        : \"\",\r\n                  }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"detail-doctor-top-right\">\r\n                <p className=\"detail-doctor-title\">\r\n                  {language === LENGUAGES.VI ? valueVi : valueEn}\r\n                </p>\r\n                <p className=\"detail-doctor-des\">\r\n                  {infoDoctor && infoDoctor.Doctor_Intro\r\n                    ? infoDoctor.Doctor_Intro.description\r\n                    : \"\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"schedule-doctor-container\">\r\n              <div className=\"schedule-left\">\r\n                <DoctorSchedule\r\n                  idDoctor={\r\n                    this.state.infoDoctor && this.state.infoDoctor.id\r\n                      ? this.state.infoDoctor.id\r\n                      : -1\r\n                  }\r\n                  handleShowLoadingFromParent={this.handleShowLoading}\r\n                />\r\n              </div>\r\n              <div className=\"schedule-right\">\r\n                <DoctorMore\r\n                  idDoctor={\r\n                    this.state.infoDoctor && this.state.infoDoctor.id\r\n                      ? this.state.infoDoctor.id\r\n                      : -1\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"detail-doctor-content\">\r\n            <div className=\"container detail-content\">\r\n              <div dangerouslySetInnerHTML={{ __html: dataContent }} />\r\n            </div>\r\n          </div>\r\n          {dataRating && dataRating.length > 0 ? (\r\n            <div className=\"detail-doctor-comments container\">\r\n              <div className=\"total-rating\">\r\n                <span className=\"rating\">Rating:</span>\r\n                <StarRatings\r\n                  rating={rating}\r\n                  starRatedColor=\"rgb(230, 67, 47)\"\r\n                  numberOfStars={5}\r\n                  name=\"rating\"\r\n                  starDimension=\"15px\"\r\n                  isSelectable={false}\r\n                />\r\n                <span>{`(${dataRating[0].ratingDoctor.Doctor_Info.count})`}</span>\r\n              </div>\r\n              <div className=\"title-comment\">Nhận xét của khách hàng:</div>\r\n              {dataRating.map((item, index) => {\r\n                return (\r\n                  <div className=\"comment-content-block\" key={index}>\r\n                    <div className=\"user-name\">\r\n                      {language === LENGUAGES.VI\r\n                        ? `${item.ratingPatient.lastName} ${item.ratingPatient.firstName}`\r\n                        : `${item.ratingPatient.firstName} ${item.ratingPatient.lastName}`}\r\n                    </div>\r\n                    <div className=\"user-rating\">\r\n                      <StarRatings\r\n                        rating={item.rating}\r\n                        starRatedColor=\"rgb(230, 67, 47)\"\r\n                        numberOfStars={5}\r\n                        name=\"rating\"\r\n                        starDimension=\"13px\"\r\n                        isSelectable={false}\r\n                      />\r\n                    </div>\r\n                    <div className=\"user-comment\">{item.comment}</div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <div className=\"detail-doctor-comments container\">\r\n              <p>Bác sĩ hiện chưa có đánh giá !!</p>\r\n            </div>\r\n          )}\r\n\r\n          <Footer />\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    infoDoctor: state.admin.infoDoctor,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getInfoDoctor: (id) => dispatch(actions.getInfoDoctor(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailDoctor);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal } from \"reactstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { LENGUAGES } from \"../../../utils\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport Select from \"react-select\";\r\nimport DatePicker from \"../../../components/Input/DatePicker\";\r\nimport \"./ManageSchedule.scss\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  saveScheduleService,\r\n  getScheduleDoctorService,\r\n  deleteScheduleDoctorService,\r\n} from \"../../../services/userService\";\r\nimport moment from \"moment\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nclass ManageSchedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedDoctor: {},\r\n      currentDate: \"\",\r\n      listDoctors: [],\r\n      rangeTime: [],\r\n      dataTime: [],\r\n      isLoading: false,\r\n      isShowModalBooking: false,\r\n      itemSelected: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.userInfo && this.props.userInfo.accessToken) {\r\n      let accessToken = this.props.userInfo.accessToken;\r\n      if (this.props.userInfo.roleId === \"R1\") {\r\n        await this.props.fetchAllDoctors(accessToken);\r\n      }\r\n    }\r\n    this.props.fetchAllTime();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevProps.allDoctor !== this.props.allDoctor ||\r\n      prevProps.language !== this.props.language\r\n    ) {\r\n      let options = this.buildDataForSelect(this.props.allDoctor);\r\n      this.setState({\r\n        listDoctors: options,\r\n      });\r\n    }\r\n    if (prevProps.timeArr !== this.props.timeArr) {\r\n      let data = this.props.timeArr;\r\n      if (data && data.length > 0) {\r\n        data = data.map((item) => ({ ...item, isSelected: false }));\r\n      }\r\n      this.setState({\r\n        rangeTime: data,\r\n      });\r\n    }\r\n  }\r\n\r\n  showModalBooking = (item) => {\r\n    this.setState({\r\n      isShowModalBooking: true,\r\n      itemSelected: item,\r\n    });\r\n  };\r\n\r\n  closeModalBooking = () => {\r\n    this.setState({\r\n      isShowModalBooking: false,\r\n    });\r\n  };\r\n\r\n  buildDataForSelect = (inputData) => {\r\n    let listOptions = [];\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.map((item, index) => {\r\n        let obj = {};\r\n        let label =\r\n          this.props.language === LENGUAGES.VI\r\n            ? `${item.lastName} ${item.firstName}`\r\n            : `${item.firstName} ${item.lastName}`;\r\n        let value = item.id;\r\n        obj.value = value;\r\n        obj.label = label;\r\n        return listOptions.push(obj);\r\n      });\r\n    }\r\n    return listOptions;\r\n  };\r\n\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedDoctor: selectedOption });\r\n  };\r\n\r\n  handleOnchangeDatePicker = async (date) => {\r\n    this.setState({\r\n      currentDate: date[0],\r\n    });\r\n    let role = \"\",\r\n      id = \"\";\r\n    if (\r\n      this.props.userInfo &&\r\n      this.props.userInfo.roleId &&\r\n      this.props.userInfo.id\r\n    ) {\r\n      role = this.props.userInfo.roleId;\r\n      id = this.props.userInfo.id;\r\n    }\r\n    let { selectedDoctor, currentDate } = this.state;\r\n    if (selectedDoctor && currentDate) {\r\n      let res = await getScheduleDoctorService(\r\n        role && role === \"R1\" ? selectedDoctor.value : id,\r\n        currentDate.getTime()\r\n      );\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          timeData: res.data,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleSelectSchedule = (time) => {\r\n    let rangeTime = this.state.rangeTime;\r\n    if (rangeTime && rangeTime.length > 0) {\r\n      rangeTime = rangeTime.map((item) => {\r\n        if (item.id === time.id) {\r\n          item.isSelected = !item.isSelected;\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n    this.setState({\r\n      rangeTime,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    let role = \"\",\r\n      id = \"\";\r\n    if (\r\n      this.props.userInfo &&\r\n      this.props.userInfo.roleId &&\r\n      this.props.userInfo.id\r\n    ) {\r\n      role = this.props.userInfo.roleId;\r\n      id = this.props.userInfo.id;\r\n    }\r\n    let { rangeTime, selectedDoctor, currentDate } = this.state;\r\n    let result = [];\r\n\r\n    if (role === \"R1\") {\r\n      if (selectedDoctor && _.isEmpty(selectedDoctor)) {\r\n        toast.error(\"Vui lòng chọn bác sĩ !!\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (!currentDate) {\r\n      toast.error(\"Vui lòng chọn ngày !!\");\r\n      return;\r\n    }\r\n\r\n    let formatDate = new Date(currentDate).getTime();\r\n\r\n    if (rangeTime && rangeTime.length > 0) {\r\n      let selectedTime = rangeTime.filter((item) => item.isSelected === true);\r\n      if (selectedTime && selectedTime.length > 0) {\r\n        selectedTime.map((item) => {\r\n          let obj = {};\r\n          obj.doctorId = role && role === \"R1\" ? selectedDoctor.value : id;\r\n          obj.date = formatDate;\r\n          obj.timeType = item.keyMap;\r\n          return result.push(obj);\r\n        });\r\n      } else {\r\n        toast.error(\"Vui lòng chọn thời gian !!\");\r\n        return;\r\n      }\r\n    }\r\n    this.handleShowLoading(true);\r\n    let res = await saveScheduleService({\r\n      arrSchedule: result,\r\n      doctorId: role && role === \"R1\" ? selectedDoctor.value : id,\r\n      formatDate: formatDate,\r\n    });\r\n    this.handleShowLoading(false);\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Lưu lịch khám thành công !!\");\r\n      let { selectedDoctor, currentDate } = this.state;\r\n      if (selectedDoctor && currentDate) {\r\n        let res = await getScheduleDoctorService(\r\n          role && role === \"R1\" ? selectedDoctor.value : id,\r\n          currentDate.getTime()\r\n        );\r\n        if (res && res.errCode === 0) {\r\n          this.setState({\r\n            timeData: res.data,\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      toast.error(\"Lưu lịch khám thất bại, vui lòng thử lại!!\");\r\n    }\r\n  };\r\n\r\n  capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  handleDeleteSchedule = async () => {\r\n    let item = this.state.itemSelected;\r\n    let role = \"\",\r\n      id = \"\";\r\n    if (\r\n      this.props.userInfo &&\r\n      this.props.userInfo.roleId &&\r\n      this.props.userInfo.id\r\n    ) {\r\n      role = this.props.userInfo.roleId;\r\n      id = this.props.userInfo.id;\r\n    }\r\n    this.handleShowLoading(true);\r\n    let res = await deleteScheduleDoctorService(item.id);\r\n    this.handleShowLoading(false);\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Delete Schedule Succeed !!\");\r\n      this.setState({\r\n        isShowModalBooking: false,\r\n      });\r\n    } else {\r\n      toast.error(\"Delete Schedule failed\");\r\n    }\r\n    let { selectedDoctor, currentDate } = this.state;\r\n    if (selectedDoctor && currentDate) {\r\n      let res = await getScheduleDoctorService(\r\n        role && role === \"R1\" ? selectedDoctor.value : id,\r\n        currentDate.getTime()\r\n      );\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          timeData: res.data,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleShowLoading = (boolean) => {\r\n    this.setState({\r\n      isLoading: boolean,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let role = \"\";\r\n    if (this.props.userInfo && this.props.userInfo.roleId) {\r\n      role = this.props.userInfo.roleId;\r\n    }\r\n    let { rangeTime, timeData, isShowModalBooking } = this.state;\r\n    let { language } = this.props;\r\n    return (\r\n      <LoadingOverlay active={this.state.isLoading} spinner text=\"Loading...\">\r\n        <div className=\"manage-schedule-container\">\r\n          <div className=\"title mb-4\">\r\n            <FormattedMessage id=\"menu.doctor.manage-schedule\" />\r\n          </div>\r\n          <div className=\"container\">\r\n            <div className=\"row content-top center\">\r\n              {role && role === \"R1\" && (\r\n                <div className=\"col-6 form-group content-top-left\">\r\n                  <label>\r\n                    <FormattedMessage id=\"menu.doctor.choose-doctor\" />\r\n                  </label>\r\n                  <Select\r\n                    value={this.state.selectedDoctor}\r\n                    onChange={this.handleChangeSelect}\r\n                    options={this.state.listDoctors}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"col-6 form-group content-top-right\">\r\n                <label>\r\n                  <FormattedMessage id=\"menu.doctor.choose-date\" />\r\n                </label>\r\n                <DatePicker\r\n                  className=\"form-control\"\r\n                  onChange={this.handleOnchangeDatePicker}\r\n                  value={this.state.currentDate}\r\n                  minDate={new Date().setHours(0, 0, 0, 0)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"content-bottom\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                {rangeTime &&\r\n                  rangeTime.length > 0 &&\r\n                  rangeTime.map((item, index) => {\r\n                    return (\r\n                      <div key={index} className=\"col-3 time-schedule\">\r\n                        <button\r\n                          onClick={() => this.handleSelectSchedule(item)}\r\n                          className={\r\n                            item.isSelected === true\r\n                              ? \"btn-time selected\"\r\n                              : \"btn-time\"\r\n                          }\r\n                        >\r\n                          {language === LENGUAGES.VI\r\n                            ? item.valueVi\r\n                            : item.valueEn}\r\n                        </button>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n              <button\r\n                className=\"btn-primary btn-save\"\r\n                onClick={() => this.handleSubmit()}\r\n              >\r\n                <FormattedMessage id=\"menu.doctor.save-schedule\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"users-container container my-5\">\r\n            <table id=\"customers\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <FormattedMessage id=\"menu.doctor.date\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"menu.doctor.time\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"manage-specialty.options\" />\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {timeData &&\r\n                  timeData.length > 0 &&\r\n                  timeData.map((item, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>\r\n                          {this.props.language === LENGUAGES.VI\r\n                            ? this.capitalizeFirstLetter(\r\n                                moment\r\n                                  .unix(+item.date / 1000)\r\n                                  .format(\"dddd - DD/MM/YYYY\")\r\n                              )\r\n                            : moment\r\n                                .unix(+item.date / 1000)\r\n                                .locale(\"en\")\r\n                                .format(\"ddd - MM/DD/YYYY\")}\r\n                        </td>\r\n                        <td>\r\n                          {this.props.language === LENGUAGES.VI\r\n                            ? item.timeTypeData.valueVi\r\n                            : item.timeTypeData.valueEn}\r\n                        </td>\r\n                        <td>\r\n                          <div>\r\n                            <button\r\n                              className=\"btn btn-delete\"\r\n                              onClick={() => this.showModalBooking(item)}\r\n                            >\r\n                              <i className=\"fas fa-trash\"></i>\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          isOpen={isShowModalBooking}\r\n          className={\"schedule-modal\"}\r\n          size=\"md\"\r\n        >\r\n          <div className=\"modal-schedule-container\">\r\n            <div className=\"modal-header\">\r\n              <span>\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  onClick={() => this.closeModalBooking()}\r\n                ></i>\r\n              </span>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p className=\"text-center mt-4\" style={{ fontSize: \"20px\" }}>\r\n                Bạn muốn huỷ lịch khám ?\r\n              </p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"btn-confirm\"\r\n                onClick={() => this.handleDeleteSchedule()}\r\n              >\r\n                <FormattedMessage id=\"user-view.booking-modal.confirm\" />\r\n              </button>\r\n              <button\r\n                className=\"btn-cancel\"\r\n                onClick={() => this.closeModalBooking()}\r\n              >\r\n                <FormattedMessage id=\"user-view.booking-modal.cancel\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </LoadingOverlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n    allDoctor: state.admin.allDoctors,\r\n    timeArr: state.admin.timeArr,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchAllTime: () => dispatch(actions.fetchAllTime()),\r\n    fetchAllDoctors: (token) => dispatch(actions.fetchAllDoctors(token)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSchedule);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { CommonUtils } from \"../../../utils\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport { sendEmailToCustomer } from \"../../../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass ModalSendEmail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      bill: \"\",\r\n      message: \"\",\r\n      doctorId: \"\",\r\n      patientId: \"\",\r\n      fullNamePatient: \"\",\r\n      timeAppointment: \"\",\r\n      dateAppointment: \"\",\r\n      date: \"\",\r\n      timeType: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { dataFromParent } = this.props;\r\n    if (dataFromParent && !_.isEmpty(dataFromParent)) {\r\n      this.setState({\r\n        email: dataFromParent.bookingData.email,\r\n        doctorId: dataFromParent.doctorId,\r\n        patientId: dataFromParent.patientId,\r\n        fullNamePatient: dataFromParent.bookingData.firstName,\r\n        dateAppointment: this.buildTimeBooking(dataFromParent.date),\r\n        timeAppointment: dataFromParent.timeBookingData.valueEn,\r\n        date: dataFromParent.date,\r\n        timeType: dataFromParent.timeType,\r\n      });\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.dataFromParent !== this.props.dataFromParent) {\r\n      let { dataFromParent } = this.props;\r\n      if (dataFromParent && !_.isEmpty(dataFromParent)) {\r\n        this.setState({\r\n          email: dataFromParent.bookingData.email,\r\n          doctorId: dataFromParent.doctorId,\r\n          patientId: dataFromParent.patientId,\r\n          fullNamePatient: dataFromParent.bookingData.firstName,\r\n          dateAppointment: this.buildTimeBooking(dataFromParent.date),\r\n          timeAppointment: dataFromParent.timeBookingData.valueEn,\r\n          date: dataFromParent.date,\r\n          timeType: dataFromParent.timeType,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  buildTimeBooking = (dataTime) => {\r\n    let date = this.capitalizeFirstLetter(\r\n      moment.unix(+dataTime / 1000).format(\"dddd - DD/MM/YYYY\")\r\n    );\r\n    return date;\r\n  };\r\n\r\n  handleInput = (e, id) => {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = e.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n    });\r\n  };\r\n\r\n  validateEmail = (email) => {\r\n    return String(email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  };\r\n\r\n  validInput = () => {\r\n    let isValid = true;\r\n    if (!this.validateEmail(this.state.email)) {\r\n      alert(\"Vui lòng điền địa chỉ email hợp lệ!!\");\r\n      return;\r\n    } else {\r\n      if (!this.state.email) {\r\n        isValid = false;\r\n        alert(`Vui lòng nhập địa chỉ email`);\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  handleAddImg = async (e) => {\r\n    let data = e.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      this.setState({\r\n        bill: base64,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggle = () => {\r\n    this.props.changeShowModal();\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    let isValid = this.validInput();\r\n    if (isValid) {\r\n      this.props.changeShowLoading(true);\r\n      let res = await sendEmailToCustomer({\r\n        email: this.state.email,\r\n        bill: this.state.bill,\r\n        message: this.state.message,\r\n        doctorId: this.state.doctorId,\r\n        patientId: this.state.patientId,\r\n        fullNamePatient: this.state.fullNamePatient,\r\n        timeAppointment: this.state.timeAppointment,\r\n        dateAppointment: this.state.dateAppointment,\r\n        date: this.state.date,\r\n        timeType: this.state.timeType,\r\n      });\r\n      if (res && res.errCode === 0) {\r\n        this.props.changeShowLoading(false);\r\n        toast.success(\"Gửi email thành công!!\");\r\n        this.setState({\r\n          bill: \"\",\r\n          message: \"\",\r\n        });\r\n        this.toggle();\r\n      } else {\r\n        this.props.changeShowLoading(false);\r\n        toast.error(\"Có lỗi xảy ra, vui lòng thử lại !!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.props.isShowModal}\r\n          className={\"userModal\"}\r\n          size=\"lg\"\r\n          // backdrop={this.state.backdrop}\r\n        >\r\n          <ModalHeader>\r\n            <span>Send bill to customers</span>\r\n            <i className=\"fas fa-times\" onClick={() => this.toggle()}></i>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <label className=\"form-label\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(e) => {\r\n                    this.handleInput(e, \"email\");\r\n                  }}\r\n                  value={this.state.email}\r\n                ></input>\r\n              </div>\r\n\r\n              <div className=\"col-6\">\r\n                <label className=\"form-label\">\r\n                  <FormattedMessage id=\"manage-user.add-image\" />\r\n                </label>\r\n                <div className=\"input-img-container\">\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"input-img\"\r\n                    onChange={(e) => this.handleAddImg(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-12 mt-3\">\r\n                <label>Message</label>\r\n                <textarea\r\n                  rows={4}\r\n                  className=\"form-control\"\r\n                  onChange={(e) => {\r\n                    this.handleInput(e, \"message\");\r\n                  }}\r\n                  value={this.state.message}\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              className=\"px-3\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.handleSubmit();\r\n              }}\r\n            >\r\n              Send\r\n            </Button>\r\n            <Button\r\n              className=\"px-3\"\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                this.toggle();\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalSendEmail);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal } from \"reactstrap\";\r\nimport \"./ManageAppointment.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\nimport DatePicker from \"../../../components/Input/DatePicker\";\r\nimport {\r\n  getAppointmenDoctorService,\r\n  confirmAppointmentSucceed,\r\n  cancelAppointment,\r\n} from \"../../../services/userService\";\r\nimport ModalSendEmail from \"./ModalSendEmail\";\r\nimport { LENGUAGES } from \"../../../utils\";\r\nimport { toast } from \"react-toastify\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nclass ManageAppointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentDate: new Date(),\r\n      idDoctor: \"\",\r\n      data: [],\r\n      isShowModal: false,\r\n      dataForModal: [],\r\n      isLoading: false,\r\n      id: \"\",\r\n      isShowModalBooking: false,\r\n      itemSelected: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let date = new Date().setHours(0, 0, 0, 0);\r\n    let res = await getAppointmenDoctorService(this.props.userInfo.id, date);\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n      });\r\n    }\r\n    if (this.props.userInfo && this.props.userInfo.id) {\r\n      this.setState({\r\n        id: this.props.userInfo.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.userInfo.id !== prevProps.userInfo.id) {\r\n      if (this.props.userInfo.id) {\r\n        this.setState({\r\n          id: this.props.userInfo.id,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  showModalBooking = (item) => {\r\n    this.setState({\r\n      isShowModalBooking: true,\r\n      itemSelected: item,\r\n    });\r\n  };\r\n\r\n  closeModalBooking = () => {\r\n    this.setState({\r\n      isShowModalBooking: false,\r\n    });\r\n  };\r\n\r\n  handleOnchangeDatePicker = async (date) => {\r\n    this.setState({\r\n      currentDate: date[0],\r\n    });\r\n    let res = await getAppointmenDoctorService(\r\n      this.props.userInfo.id,\r\n      date[0].getTime()\r\n    );\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSucceed = async (item) => {\r\n    let date = new Date().setHours(0, 0, 0, 0);\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let res = await confirmAppointmentSucceed({\r\n      bookingId: item.id,\r\n      doctorId: item.doctorId,\r\n      patientId: item.patientId,\r\n      date: item.date,\r\n      timeType: item.timeType,\r\n    });\r\n    this.setState({\r\n      isLoading: false,\r\n    });\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Xác nhận thành công !!\");\r\n      let response = await getAppointmenDoctorService(this.state.id, date);\r\n      if (response && response.errCode === 0) {\r\n        this.setState({\r\n          data: response.data,\r\n        });\r\n      }\r\n    } else {\r\n      toast.error(\"Có lỗi xảy ra, vui lòng thử lại !!\");\r\n    }\r\n  };\r\n\r\n  handleSendBill = (item) => {\r\n    this.setState({\r\n      isShowModal: true,\r\n      dataForModal: item,\r\n    });\r\n  };\r\n\r\n  handleCancel = async () => {\r\n    let item = this.state.itemSelected;\r\n    let date = new Date().setHours(0, 0, 0, 0);\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let res = await cancelAppointment({\r\n      bookingId: item.id,\r\n      doctorId: item.doctorId,\r\n      patientId: item.patientId,\r\n      date: item.date,\r\n      timeType: item.timeType,\r\n    });\r\n    this.setState({\r\n      isLoading: false,\r\n    });\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Huỷ lịch hẹn thành công !!\");\r\n      this.setState({ isShowModalBooking: false });\r\n      let response = await getAppointmenDoctorService(this.state.id, date);\r\n      if (response && response.errCode === 0) {\r\n        this.setState({\r\n          data: response.data,\r\n        });\r\n      }\r\n    } else {\r\n      toast.error(\"Có lỗi xảy ra, vui lòng thử lại !!\");\r\n    }\r\n  };\r\n\r\n  changeShowModal = () => {\r\n    this.setState({\r\n      isShowModal: false,\r\n    });\r\n  };\r\n\r\n  changeShowLoading = (boolean) => {\r\n    this.setState({\r\n      isLoading: boolean,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { data, isShowModalBooking } = this.state;\r\n    let { language } = this.props;\r\n    return (\r\n      <>\r\n        <LoadingOverlay active={this.state.isLoading} spinner text=\"Loading...\">\r\n          <div className=\"title mt-5\">\r\n            <FormattedMessage id=\"menu.doctor.manage-appointment\" />\r\n          </div>\r\n          <div className=\"col-6 form-group content-top-right container\">\r\n            <label>\r\n              <FormattedMessage id=\"menu.doctor.choose-date\" />\r\n            </label>\r\n            <DatePicker\r\n              className=\"form-control\"\r\n              onChange={this.handleOnchangeDatePicker}\r\n              value={this.state.currentDate}\r\n            />\r\n          </div>\r\n          <div className=\"users-container container my-5\">\r\n            <table id=\"customers\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Tên</th>\r\n                  <th>Giới tính</th>\r\n                  <th>Số điện thoại</th>\r\n                  <th>Email</th>\r\n                  <th>Thời gian đặt lịch</th>\r\n                  <th>Lý do khám bệnh</th>\r\n                  <th>Tuỳ chọn</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {data &&\r\n                  data.length > 0 &&\r\n                  data.map((item, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>{item.bookingData.firstName}</td>\r\n                        <td>\r\n                          {language === LENGUAGES.VI\r\n                            ? item.bookingData.genderData.valueVi\r\n                            : item.bookingData.genderData.valueEn}\r\n                        </td>\r\n                        <td>{item.bookingData.phonenumber}</td>\r\n                        <td>{item.bookingData.email}</td>\r\n                        <td>\r\n                          {language === LENGUAGES.VI\r\n                            ? item.timeBookingData.valueVi\r\n                            : item.timeBookingData.valueEn}\r\n                        </td>\r\n                        <td>{item.reason}</td>\r\n                        <td>\r\n                          <div>\r\n                            <button\r\n                              className=\"btn btn-edit\"\r\n                              onClick={() => this.handleSucceed(item)}\r\n                            >\r\n                              Đã hoàn thành\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-send\"\r\n                              onClick={() => this.handleSendBill(item)}\r\n                            >\r\n                              Gửi hoá đơn\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-cancel\"\r\n                              onClick={() => this.showModalBooking(item)}\r\n                            >\r\n                              Huỷ lịch hẹn\r\n                            </button>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <ModalSendEmail\r\n            isShowModal={this.state.isShowModal}\r\n            changeShowModal={this.changeShowModal}\r\n            dataFromParent={this.state.dataForModal}\r\n            changeShowLoading={this.changeShowLoading}\r\n          />\r\n          <Modal\r\n            isOpen={isShowModalBooking}\r\n            className={\"schedule-modal\"}\r\n            size=\"md\"\r\n          >\r\n            <div className=\"modal-schedule-container\">\r\n              <div className=\"modal-header\">\r\n                <span>\r\n                  <i\r\n                    className=\"fas fa-times\"\r\n                    onClick={() => this.closeModalBooking()}\r\n                  ></i>\r\n                </span>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <p className=\"text-center mt-4\" style={{ fontSize: \"20px\" }}>\r\n                  Bạn muốn huỷ lịch hẹn ?\r\n                </p>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  className=\"btn-confirm\"\r\n                  onClick={() => this.handleCancel()}\r\n                >\r\n                  <FormattedMessage id=\"user-view.booking-modal.confirm\" />\r\n                </button>\r\n                <button\r\n                  className=\"btn-cancel\"\r\n                  onClick={() => this.closeModalBooking()}\r\n                >\r\n                  <FormattedMessage id=\"user-view.booking-modal.cancel\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(ManageAppointment)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\nimport DatePicker from \"../../../components/Input/DatePicker\";\r\nimport {\r\n  getHistoryDoctorService,\r\n  confirmAppointmentSucceed,\r\n} from \"../../../services/userService\";\r\nimport { LENGUAGES } from \"../../../utils\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass ManageHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentDate: new Date(),\r\n      idDoctor: \"\",\r\n      data: [],\r\n      isShowModal: false,\r\n      dataForModal: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let date = new Date().setHours(0, 0, 0, 0);\r\n    let res = await getHistoryDoctorService(this.props.userInfo.id, date);\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n\r\n  handleOnchangeDatePicker = async (date) => {\r\n    this.setState({\r\n      currentDate: date[0],\r\n    });\r\n    let res = await getHistoryDoctorService(\r\n      this.props.userInfo.id,\r\n      date[0].getTime()\r\n    );\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSucceed = async (item) => {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let res = await confirmAppointmentSucceed({\r\n      doctorId: item.doctorId,\r\n      patientId: item.patientId,\r\n      date: item.date,\r\n      timeType: item.timeType,\r\n    });\r\n    this.setState({\r\n      isLoading: false,\r\n    });\r\n    if (res && res.errCode === 0) {\r\n      toast.success(\"Xác nhận thành công !!\");\r\n      let response = await getHistoryDoctorService(\r\n        this.props.userInfo.id,\r\n        this.state.currentDate.getTime()\r\n      );\r\n      if (response && response.errCode === 0) {\r\n        this.setState({\r\n          data: response.data,\r\n        });\r\n      }\r\n    } else {\r\n      toast.error(\"Có lỗi xảy ra, vui lòng thử lại !!\");\r\n    }\r\n  };\r\n\r\n  changeShowLoading = (boolean) => {\r\n    this.setState({\r\n      isLoading: boolean,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n    let { language } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"title mt-5\">\r\n          <FormattedMessage id=\"menu.doctor.history-appointment\" />\r\n        </div>\r\n        <div className=\"col-6 form-group content-top-right container\">\r\n          <label>\r\n            <FormattedMessage id=\"menu.doctor.choose-date\" />\r\n          </label>\r\n          <DatePicker\r\n            className=\"form-control\"\r\n            onChange={this.handleOnchangeDatePicker}\r\n            value={this.state.currentDate}\r\n          />\r\n        </div>\r\n        <div className=\"users-container container my-5\">\r\n          <table id=\"customers\">\r\n            <thead>\r\n              <tr>\r\n                <th>Tên</th>\r\n                <th>Giới tính</th>\r\n                <th>Số điện thoại</th>\r\n                <th>Email</th>\r\n                <th>Thời gian đặt lịch</th>\r\n                <th>Lý do khám bệnh</th>\r\n                <th>Trạng thái</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {data &&\r\n                data.length > 0 &&\r\n                data.map((item, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{item.bookingData.firstName}</td>\r\n                      <td>\r\n                        {language === LENGUAGES.VI\r\n                          ? item.bookingData.genderData.valueVi\r\n                          : item.bookingData.genderData.valueEn}\r\n                      </td>\r\n                      <td>{item.bookingData.phonenumber}</td>\r\n                      <td>{item.bookingData.email}</td>\r\n                      <td>\r\n                        {language === LENGUAGES.VI\r\n                          ? item.timeBookingData.valueVi\r\n                          : item.timeBookingData.valueEn}\r\n                      </td>\r\n                      <td>{item.reason}</td>\r\n                      <td>\r\n                        {item.statusId === \"S4\" ? (\r\n                          <span style={{ color: \"red\" }}>\r\n                            {language === LENGUAGES.VI\r\n                              ? item.statusData.valueVi\r\n                              : item.statusData.valueEn}\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ color: \"green\" }}>\r\n                            {language === LENGUAGES.VI\r\n                              ? item.statusData.valueVi\r\n                              : item.statusData.valueEn}\r\n                          </span>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(ManageHistory)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"../containers/Header/Header\";\r\nimport ManageSchedule from \"../containers/System/Doctor/ManageSchedule\";\r\nimport ManageAppointment from \"../containers/System/Doctor/ManageAppointment\";\r\nimport ManageHistory from \"../containers/System/Doctor/ManageHistory\";\r\n\r\nclass Doctor extends Component {\r\n  render() {\r\n    const { isLoggedIn } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {isLoggedIn && <Header />}\r\n        <div className=\"system-container\">\r\n          <div className=\"system-list\">\r\n            <Switch>\r\n              <Route\r\n                path=\"/doctor/manage-schedule\"\r\n                component={ManageSchedule}\r\n              />\r\n              <Route\r\n                path=\"/doctor/manage-appointment\"\r\n                component={ManageAppointment}\r\n              />\r\n              <Route\r\n                path=\"/doctor/history-appointment\"\r\n                component={ManageHistory}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    systemMenuPath: state.app.systemMenuPath,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Doctor);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./VerifyEmail.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\nimport { postVerifyPatientBooking } from \"../../../services/userService\";\r\nimport HomeHeader from \"../HomeHeader\";\r\n\r\nclass VerifyEmail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      statusVerify: false,\r\n      errCode: 0,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.location && this.props.location.search) {\r\n      let urlParams = new URLSearchParams(this.props.location.search);\r\n      let doctorId = urlParams.get(\"doctorId\");\r\n      let token = urlParams.get(\"token\");\r\n      let scheduleId = urlParams.get(\"scheduleId\");\r\n      let res = await postVerifyPatientBooking({\r\n        token,\r\n        doctorId,\r\n        scheduleId,\r\n      });\r\n\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          statusVerify: true,\r\n          errCode: res.errCode,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          statusVerify: true,\r\n          errCode: res && res.errCode ? res.errCode : -1,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  goToHome = () => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/home`);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <HomeHeader />\r\n        <div className=\"verify-email-container text-center\">\r\n          {this.state.statusVerify === false ? (\r\n            <div className=\"title-loading\">\r\n              <FormattedMessage id=\"user-view.booking-modal.loading\" />\r\n            </div>\r\n          ) : (\r\n            <div className=\"title-verify\">\r\n              {this.state.errCode === 0 ? (\r\n                <div className=\"title-verify-succeed\">\r\n                  <FormattedMessage id=\"user-view.booking-modal.verify-succeed\" />\r\n                </div>\r\n              ) : (\r\n                <div className=\"title-verify-failed\">\r\n                  <FormattedMessage id=\"user-view.booking-modal.verify-failed\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          <div className=\"more-verify\">\r\n            <span onClick={() => this.goToHome()} className=\"link-verify\">\r\n              <FormattedMessage id=\"user-view.booking-modal.click\" />\r\n            </span>\r\n            <FormattedMessage id=\"user-view.booking-modal.go-to-home\" />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(VerifyEmail)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ForgotPW.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\nimport { ConfirmForgotPWService } from \"../../../services/userService\";\r\nimport HomeHeader from \"../../HomePage/HomeHeader\";\r\n\r\nclass ForgotPW extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      statusVerify: false,\r\n      errCode: 0,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.location && this.props.location.search) {\r\n      let urlParams = new URLSearchParams(this.props.location.search);\r\n      let email = urlParams.get(\"email\");\r\n      let token = urlParams.get(\"token\");\r\n      let res = await ConfirmForgotPWService({\r\n        token,\r\n        email,\r\n      });\r\n\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          statusVerify: true,\r\n          errCode: res.errCode,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          statusVerify: true,\r\n          errCode: res && res.errCode ? res.errCode : -1,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  goToHome = () => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/login`);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <HomeHeader />\r\n        <div className=\"verify-email-container text-center\">\r\n          {this.state.statusVerify === false ? (\r\n            <div className=\"title-loading\">\r\n              <FormattedMessage id=\"user-view.booking-modal.loading\" />\r\n            </div>\r\n          ) : (\r\n            <div className=\"title-verify\">\r\n              {this.state.errCode === 0 ? (\r\n                <div className=\"title-verify-succeed\">\r\n                  <FormattedMessage id=\"user-view.booking-modal.forgot-succeed\" />\r\n                </div>\r\n              ) : (\r\n                <div className=\"title-verify-failed\">\r\n                  <FormattedMessage id=\"user-view.booking-modal.forgot-failed\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          <div className=\"more-verify\">\r\n            <span onClick={() => this.goToHome()} className=\"link-verify\">\r\n              <FormattedMessage id=\"user-view.booking-modal.click\" />\r\n            </span>\r\n            <FormattedMessage id=\"user-view.booking-modal.go-to-home\" />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(ForgotPW)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./DetailSpecialty.scss\";\r\nimport { withRouter } from \"react-router\";\r\nimport HomeHeader from \"../../HomeHeader\";\r\nimport DoctorSchedule from \"../Doctor/DoctorSchedule\";\r\nimport DoctorMore from \"../Doctor/DoctorMore\";\r\nimport DoctorInfo from \"../Doctor/DoctorInfo\";\r\nimport Footer from \"../../Section/Footer\";\r\nimport {\r\n  getSpecialyById,\r\n  getAllCodeService,\r\n} from \"../../../../services/userService\";\r\nimport _ from \"lodash\";\r\nimport { LENGUAGES } from \"../../../../utils/constant\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nclass DetailSpecialty extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listDoctorId: [],\r\n      dataDetailSpecialty: [],\r\n      listProvince: [],\r\n      isShowMore: false,\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      let id = this.props.match.params.id;\r\n      let res = await getSpecialyById({\r\n        id: id,\r\n        location: \"ALL\",\r\n      });\r\n      let resProvince = await getAllCodeService(\"PROVINCE\");\r\n      if (\r\n        res &&\r\n        res.errCode === 0 &&\r\n        resProvince &&\r\n        resProvince.errCode === 0\r\n      ) {\r\n        let data = res.data[0];\r\n        let listDoctorId = [];\r\n        if (data && !_.isEmpty(data)) {\r\n          let arrDoctor = data.doctorInfoData;\r\n          if (arrDoctor && arrDoctor.length > 0) {\r\n            arrDoctor.map((item) => {\r\n              return listDoctorId.push(item.doctorId);\r\n            });\r\n          }\r\n          let listProvince = resProvince.data;\r\n          if (listProvince && listProvince.length > 0) {\r\n            listProvince.unshift({\r\n              keyMap: \"ALL\",\r\n              type: \"PROVINCE\",\r\n              valueVi: \"Toàn quốc\",\r\n              valueEn: \"All\",\r\n            });\r\n          }\r\n          this.setState({\r\n            listDoctorId: listDoctorId ? listDoctorId : [],\r\n            dataDetailSpecialty: data,\r\n            listProvince: listProvince ? listProvince : [],\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n\r\n  handleOnchangeProv = async (e) => {\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      let id = this.props.match.params.id;\r\n      let location = e.target.value;\r\n      let res = await getSpecialyById({\r\n        id: id,\r\n        location: location,\r\n      });\r\n\r\n      if (res && res.errCode === 0) {\r\n        let data = res.data[0];\r\n        let listDoctorId = [];\r\n        if (data && !_.isEmpty(data)) {\r\n          let arrDoctor = data.doctorInfoData;\r\n          if (arrDoctor && arrDoctor.length > 0) {\r\n            arrDoctor.map((item) => {\r\n              return listDoctorId.push(item.doctorId);\r\n            });\r\n          }\r\n          this.setState({\r\n            listDoctorId: listDoctorId ? listDoctorId : [],\r\n            dataDetailSpecialty: data,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            listDoctorId: [],\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleShowContent = () => {\r\n    this.setState({\r\n      isShowMore: !this.state.isShowMore,\r\n    });\r\n  };\r\n\r\n  handleShowLoading = (boolean) => {\r\n    this.setState({\r\n      isLoading: boolean,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { listDoctorId, dataDetailSpecialty, listProvince, isShowMore } =\r\n      this.state;\r\n    const language = this.props.language;\r\n    let dataContent = dataDetailSpecialty.contentHTML;\r\n    return (\r\n      <>\r\n        <LoadingOverlay active={this.state.isLoading} spinner text=\"Loading...\">\r\n          <div className=\"detail-specialty-container\">\r\n            <HomeHeader />\r\n            {isShowMore === false ? (\r\n              <div\r\n                className=\"detail-specialty-content container\"\r\n                style={{ height: \"500px\", overflow: \"hidden\" }}\r\n              >\r\n                <div dangerouslySetInnerHTML={{ __html: dataContent }} />\r\n                <div\r\n                  className=\"view-more\"\r\n                  onClick={() => this.handleShowContent()}\r\n                >\r\n                  Xem thêm\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"detail-specialty-content container\">\r\n                <div dangerouslySetInnerHTML={{ __html: dataContent }} />\r\n                <div\r\n                  className=\"view-more\"\r\n                  onClick={() => this.handleShowContent()}\r\n                >\r\n                  Ẩn bớt\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"detail-specialty-body\">\r\n              <div className=\"select-province container\">\r\n                <select onChange={(e) => this.handleOnchangeProv(e)}>\r\n                  {listProvince &&\r\n                    listProvince.length > 0 &&\r\n                    listProvince.map((item, index) => {\r\n                      return (\r\n                        <option key={index} value={item.keyMap}>\r\n                          {language === LENGUAGES.VI\r\n                            ? item.valueVi\r\n                            : item.valueEn}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n              {listDoctorId && listDoctorId.length > 0 ? (\r\n                listDoctorId.map((item, index) => {\r\n                  return (\r\n                    <div className=\"about-doctor container\" key={index}>\r\n                      <div className=\"about-detail-doctor\">\r\n                        <DoctorInfo\r\n                          idDoctor={item}\r\n                          isShowDesc={true}\r\n                          isShowPrice={false}\r\n                          isShowMore={true}\r\n                        />\r\n                      </div>\r\n                      <div className=\"about-schedule-doctor\">\r\n                        <div className=\"schedule-doctor\">\r\n                          <DoctorSchedule\r\n                            idDoctor={item}\r\n                            handleShowLoadingFromParent={this.handleShowLoading}\r\n                          />\r\n                        </div>\r\n                        <div className=\"more-info-doctor\">\r\n                          <DoctorMore idDoctor={item} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"about-doctor container\">\r\n                  {language === LENGUAGES.VI\r\n                    ? \"Không có thông tin bác sĩ, vui lòng thử lại !!\"\r\n                    : \"No doctor information, please try again !!\"}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(DetailSpecialty)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./DetailClinic.scss\";\r\nimport { withRouter } from \"react-router\";\r\nimport HomeHeader from \"../../HomeHeader\";\r\nimport DoctorSchedule from \"../Doctor/DoctorSchedule\";\r\nimport DoctorMore from \"../Doctor/DoctorMore\";\r\nimport DoctorInfo from \"../Doctor/DoctorInfo\";\r\nimport Footer from \"../../Section/Footer\";\r\nimport {\r\n  getClinicById,\r\n  getAllSpecialtiesForHome,\r\n} from \"../../../../services/userService\";\r\nimport _ from \"lodash\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { LENGUAGES } from \"../../../../utils\";\r\n\r\nclass DetailClinic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listDoctorId: [],\r\n      dataDetailClinic: [],\r\n      listSpecialty: [],\r\n      isShowMore: false,\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      let id = this.props.match.params.id;\r\n      let res = await getClinicById(id);\r\n\r\n      if (res && res.errCode === 0) {\r\n        let data = res.data[0];\r\n\r\n        let listDoctorId = [];\r\n        if (data && !_.isEmpty(data)) {\r\n          let arrDoctor = data.doctorClinicData;\r\n\r\n          if (arrDoctor && arrDoctor.length > 0) {\r\n            arrDoctor.map((item) => {\r\n              return listDoctorId.push(item.doctorId);\r\n            });\r\n          }\r\n          this.setState({\r\n            listDoctorId: listDoctorId ? listDoctorId : [],\r\n            dataDetailClinic: data,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    let res = await getAllSpecialtiesForHome();\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        listSpecialty: res.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n\r\n  handleShowContent = () => {\r\n    this.setState({\r\n      isShowMore: !this.state.isShowMore,\r\n    });\r\n  };\r\n\r\n  handleShowLoading = (boolean) => {\r\n    this.setState({\r\n      isLoading: boolean,\r\n    });\r\n  };\r\n\r\n  handleChangeSelect = async (e) => {\r\n    let specialtyId = e.target.value;\r\n    if (specialtyId === 0) {\r\n      if (\r\n        this.props.match &&\r\n        this.props.match.params &&\r\n        this.props.match.params.id\r\n      ) {\r\n        let id = this.props.match.params.id;\r\n        let res = await getClinicById(id);\r\n\r\n        if (res && res.errCode === 0) {\r\n          let data = res.data[0];\r\n\r\n          let listDoctorId = [];\r\n          if (data && !_.isEmpty(data)) {\r\n            let arrDoctor = data.doctorClinicData;\r\n\r\n            if (arrDoctor && arrDoctor.length > 0) {\r\n              arrDoctor.map((item) => {\r\n                return listDoctorId.push(item.doctorId);\r\n              });\r\n            }\r\n            this.setState({\r\n              listDoctorId: listDoctorId ? listDoctorId : [],\r\n              dataDetailClinic: data,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (\r\n        this.props.match &&\r\n        this.props.match.params &&\r\n        this.props.match.params.id\r\n      ) {\r\n        let id = this.props.match.params.id;\r\n        let res = await getClinicById(id);\r\n\r\n        if (res && res.errCode === 0) {\r\n          let data = res.data[0];\r\n          let listDoctorId = [];\r\n          if (data && !_.isEmpty(data)) {\r\n            let arrDoctor = data.doctorClinicData;\r\n            if (arrDoctor && arrDoctor.length > 0) {\r\n              arrDoctor.map((item) => {\r\n                if (item.doctorInfoData.id === +specialtyId) {\r\n                  listDoctorId.push(item.doctorId);\r\n                }\r\n                return listDoctorId;\r\n              });\r\n            }\r\n            this.setState({\r\n              listDoctorId: listDoctorId ? listDoctorId : [],\r\n              dataDetailClinic: data,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { listDoctorId, dataDetailClinic, isShowMore, listSpecialty } =\r\n      this.state;\r\n    let dataContent = dataDetailClinic.contentHTML;\r\n    let language = this.props.language;\r\n    return (\r\n      <>\r\n        <LoadingOverlay active={this.state.isLoading} spinner text=\"Loading...\">\r\n          <div className=\"detail-specialty-container\">\r\n            <HomeHeader />\r\n            {isShowMore === false ? (\r\n              <div\r\n                className=\"detail-specialty-content container\"\r\n                style={{ height: \"500px\", overflow: \"hidden\" }}\r\n              >\r\n                <h2 className=\"clinic-name\">{dataDetailClinic.name}</h2>\r\n                <div\r\n                  dangerouslySetInnerHTML={{ __html: dataContent }}\r\n                  className=\"content-html\"\r\n                />\r\n                <div\r\n                  className=\"view-more\"\r\n                  onClick={() => this.handleShowContent()}\r\n                >\r\n                  {language === LENGUAGES.VI ? \"Xem thêm\" : \"View More\"}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"detail-specialty-content container\">\r\n                <h2 className=\"clinic-name\">{dataDetailClinic.name}</h2>\r\n                <div dangerouslySetInnerHTML={{ __html: dataContent }} />\r\n                <div\r\n                  className=\"view-more\"\r\n                  onClick={() => this.handleShowContent()}\r\n                >\r\n                  {language === LENGUAGES.VI ? \"Ẩn bớt\" : \"Hide\"}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"container mt-3\">\r\n              <select\r\n                onChange={(e) => this.handleChangeSelect(e)}\r\n                className=\" form-select\"\r\n                style={{ width: \"20%\" }}\r\n              >\r\n                <option value={0}>\r\n                  {language === LENGUAGES.VI ? \"Tất cả\" : \"ALL\"}\r\n                </option>\r\n                {listSpecialty &&\r\n                  listSpecialty.length > 0 &&\r\n                  listSpecialty.map((item, index) => {\r\n                    return (\r\n                      <option key={index} value={item.id}>\r\n                        {language === LENGUAGES.VI ? item.nameVi : item.nameEn}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"detail-specialty-body\">\r\n              {listDoctorId && listDoctorId.length > 0 ? (\r\n                listDoctorId.map((item, index) => {\r\n                  return (\r\n                    <div className=\"about-doctor container\" key={index}>\r\n                      <div className=\"about-detail-doctor\">\r\n                        <DoctorInfo\r\n                          idDoctor={item}\r\n                          isShowDesc={true}\r\n                          isShowPrice={false}\r\n                          isShowMore={true}\r\n                        />\r\n                      </div>\r\n                      <div className=\"about-schedule-doctor\">\r\n                        <div className=\"schedule-doctor\">\r\n                          <DoctorSchedule\r\n                            idDoctor={item}\r\n                            handleShowLoadingFromParent={this.handleShowLoading}\r\n                          />\r\n                        </div>\r\n                        <div className=\"more-info-doctor\">\r\n                          <DoctorMore idDoctor={item} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div className=\"about-doctor container\">\r\n                  {language === LENGUAGES.VI\r\n                    ? \"Không có thông tin bác sĩ, vui lòng chọn chuyên khoa khác\"\r\n                    : \"No doctor information, please choose another specialty\"}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(DetailClinic)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ViewMoreDoctor.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\nimport Select from \"react-select\";\r\nimport HomeHeader from \"../../HomeHeader\";\r\nimport DoctorSchedule from \"../Doctor/DoctorSchedule\";\r\nimport DoctorMore from \"../Doctor/DoctorMore\";\r\nimport DoctorInfo from \"../Doctor/DoctorInfo\";\r\nimport { getAllDoctorForHome } from \"../../../../services/userService\";\r\nimport { LENGUAGES } from \"../../../../utils\";\r\nimport Footer from \"../../Section/Footer\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nclass ViewMoreDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listDoctorId: [],\r\n      listDoctors: [],\r\n      selectedDoctor: \"\",\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllDoctorForHome();\r\n    if (res && res.errCode === 0) {\r\n      let arr = [];\r\n      let userArr = res.data;\r\n      if (userArr && userArr.length > 0) {\r\n        userArr.forEach((item) => {\r\n          arr.push(item.id);\r\n        });\r\n      }\r\n      let options = this.buildDataForSelectDoctor(res.data);\r\n\r\n      this.setState({\r\n        listDoctors: options,\r\n        listDoctorId: arr,\r\n      });\r\n    }\r\n  }\r\n\r\n  buildDataForSelectDoctor = (inputData) => {\r\n    let listOptions = [];\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.map((item, index) => {\r\n        let obj = {};\r\n        let label =\r\n          this.props.language === LENGUAGES.VI\r\n            ? `${item.lastName} ${item.firstName}`\r\n            : `${item.firstName} ${item.lastName}`;\r\n        let value = item.id;\r\n        obj.value = value;\r\n        obj.label = label;\r\n        return listOptions.push(obj);\r\n      });\r\n    }\r\n    return listOptions;\r\n  };\r\n\r\n  componentDidUpdate() {}\r\n\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedDoctor: selectedOption });\r\n    let idDoctor = selectedOption.value;\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-doctor/${idDoctor}`);\r\n    }\r\n  };\r\n\r\n  handleShowLoading = (boolean) => {\r\n    this.setState({\r\n      isLoading: boolean,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { listDoctorId, selectedDoctor } = this.state;\r\n    return (\r\n      <>\r\n        <LoadingOverlay active={this.state.isLoading} spinner text=\"Loading...\">\r\n          <div className=\"detail-specialty-container\">\r\n            <HomeHeader />\r\n\r\n            <div className=\"detail-view-more-content container\">\r\n              <h1 className=\"title-content\">\r\n                <FormattedMessage id=\"home-page.search-doctor\" />\r\n              </h1>\r\n              <Select\r\n                value={selectedDoctor}\r\n                onChange={this.handleChangeSelect}\r\n                options={this.state.listDoctors}\r\n                name={\"selectedDoctor\"}\r\n                placeholder={<FormattedMessage id=\"home-page.search-doctor\" />}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"detail-specialty-body\">\r\n              {listDoctorId &&\r\n                listDoctorId.length > 0 &&\r\n                listDoctorId.map((item, index) => {\r\n                  return (\r\n                    <div className=\"about-doctor container\" key={index}>\r\n                      <div className=\"about-detail-doctor\">\r\n                        <DoctorInfo\r\n                          idDoctor={item}\r\n                          isShowDesc={true}\r\n                          isShowPrice={false}\r\n                          isShowMore={true}\r\n                        />\r\n                      </div>\r\n                      <div className=\"about-schedule-doctor\">\r\n                        <div className=\"schedule-doctor\">\r\n                          <DoctorSchedule\r\n                            idDoctor={item}\r\n                            handleShowLoadingFromParent={this.handleShowLoading}\r\n                          />\r\n                        </div>\r\n                        <div className=\"more-info-doctor\">\r\n                          <DoctorMore idDoctor={item} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(ViewMoreDoctor)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\nimport Select from \"react-select\";\r\nimport HomeHeader from \"../../HomeHeader\";\r\nimport \"./ViewMoreClinic.scss\";\r\nimport { getAllClinicForHome } from \"../../../../services/userService\";\r\nimport Footer from \"../../Section/Footer\";\r\n\r\nclass ViewMoreClinic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listClinic: [],\r\n      selectedClinic: \"\",\r\n      listClinicOptions: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllClinicForHome();\r\n    if (res && res.errCode === 0) {\r\n      let options = this.buildDataForSelectClinic(res.data);\r\n\r\n      this.setState({\r\n        listClinicOptions: options,\r\n        listClinic: res.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  buildDataForSelectClinic = (inputData) => {\r\n    let listOptions = [];\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.map((item, index) => {\r\n        let obj = {};\r\n        let label = `${item.name}`;\r\n        let value = item.id;\r\n        obj.value = value;\r\n        obj.label = label;\r\n        return listOptions.push(obj);\r\n      });\r\n    }\r\n    return listOptions;\r\n  };\r\n\r\n  componentDidUpdate() {}\r\n\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedClinic: selectedOption });\r\n    let idClinic = selectedOption.value;\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-clinic/${idClinic}`);\r\n    }\r\n  };\r\n\r\n  goToViewDetail = (clinic) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-clinic/${clinic.id}`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { listClinic, selectedClinic, listClinicOptions } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"detail-specialty-container\">\r\n          <HomeHeader />\r\n\r\n          <div className=\"detail-view-more-content container\">\r\n            <h1 className=\"title-content\">\r\n              <FormattedMessage id=\"home-page.search-clinic\" />\r\n            </h1>\r\n            <Select\r\n              value={selectedClinic}\r\n              onChange={this.handleChangeSelect}\r\n              options={listClinicOptions}\r\n              name={\"selectedClinic\"}\r\n              placeholder={<FormattedMessage id=\"home-page.search-clinic\" />}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"detail-specialty-body\">\r\n            {listClinic &&\r\n              listClinic.length > 0 &&\r\n              listClinic.map((item, index) => {\r\n                return (\r\n                  <div\r\n                    className=\"about-doctor more-content-container container\"\r\n                    key={index}\r\n                  >\r\n                    <div\r\n                      className=\"image-detail-more\"\r\n                      style={{ backgroundImage: `url(${item.image})` }}\r\n                      onClick={() => this.goToViewDetail(item)}\r\n                    ></div>\r\n                    <div className=\"content-detail-more\">\r\n                      <div\r\n                        className=\"name-clinc\"\r\n                        onClick={() => this.goToViewDetail(item)}\r\n                      >\r\n                        {item.name}\r\n                      </div>\r\n                      <div className=\"address-clinic\">\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                        {item.address}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(ViewMoreClinic)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\nimport Select from \"react-select\";\r\nimport HomeHeader from \"../../HomeHeader\";\r\nimport { getAllSpecialtiesForHome } from \"../../../../services/userService\";\r\nimport { LENGUAGES } from \"../../../../utils\";\r\nimport Footer from \"../../Section/Footer\";\r\n\r\nclass ViewMoreSpecialty extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listSpecailty: [],\r\n      selectedSpecailty: \"\",\r\n      listSpecailtyOptions: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllSpecialtiesForHome();\r\n    if (res && res.errCode === 0) {\r\n      let options = this.buildDataForSelectSpecailty(res.data);\r\n\r\n      this.setState({\r\n        listSpecailtyOptions: options,\r\n        listSpecailty: res.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  buildDataForSelectSpecailty = (inputData) => {\r\n    let listOptions = [];\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.map((item, index) => {\r\n        let obj = {};\r\n        let label =\r\n          this.props.language === LENGUAGES.VI\r\n            ? `${item.nameVi}`\r\n            : `${item.nameEn}`;\r\n        let value = item.id;\r\n        obj.value = value;\r\n        obj.label = label;\r\n        return listOptions.push(obj);\r\n      });\r\n    }\r\n    return listOptions;\r\n  };\r\n\r\n  componentDidUpdate() {}\r\n\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedSpecailty: selectedOption });\r\n    let idSpecailty = selectedOption.value;\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-specialty/${idSpecailty}`);\r\n    }\r\n  };\r\n\r\n  goToViewDetail = (specailty) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-specialty/${specailty.id}`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { listSpecailty, selectedSpecailty, listSpecailtyOptions } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"detail-specialty-container\">\r\n          <HomeHeader />\r\n\r\n          <div className=\"detail-view-more-content container\">\r\n            <h1 className=\"title-content\">\r\n              <FormattedMessage id=\"home-page.search-specialist\" />\r\n            </h1>\r\n            <Select\r\n              value={selectedSpecailty}\r\n              onChange={this.handleChangeSelect}\r\n              options={listSpecailtyOptions}\r\n              name={\"selectedSpecailty\"}\r\n              placeholder={\r\n                <FormattedMessage id=\"home-page.search-specialist\" />\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"detail-specialty-body\">\r\n            {listSpecailty &&\r\n              listSpecailty.length > 0 &&\r\n              listSpecailty.map((item, index) => {\r\n                return (\r\n                  <div\r\n                    className=\"about-doctor more-content-container container\"\r\n                    key={index}\r\n                  >\r\n                    <div\r\n                      className=\"image-detail-more\"\r\n                      style={{ backgroundImage: `url(${item.image})` }}\r\n                      onClick={() => this.goToViewDetail(item)}\r\n                    ></div>\r\n                    <div className=\"content-detail-more\">\r\n                      <div\r\n                        className=\"name-clinc\"\r\n                        onClick={() => this.goToViewDetail(item)}\r\n                      >\r\n                        {this.props.language === LENGUAGES.VI\r\n                          ? item.nameVi\r\n                          : item.nameEn}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(ViewMoreSpecialty)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./DetailHandBook.scss\";\r\nimport { withRouter } from \"react-router\";\r\nimport HomeHeader from \"../../HomeHeader\";\r\nimport Footer from \"../../Section/Footer\";\r\nimport { getHandBookById } from \"../../../../services/userService\";\r\n\r\nclass DetailHandBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataDetailHandbook: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      let id = this.props.match.params.id;\r\n      let res = await getHandBookById(id);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          dataDetailHandbook: res.data,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n\r\n  render() {\r\n    const { dataDetailHandbook } = this.state;\r\n    let dataContent = dataDetailHandbook.contentHTML;\r\n    return (\r\n      <>\r\n        <div className=\"detail-specialty-container detail-handbook\">\r\n          <HomeHeader />\r\n          <div className=\"detail-specialty-content container\">\r\n            <h2 className=\"clinic-name\">{dataDetailHandbook.name}</h2>\r\n            <div\r\n              className=\"content-handbook\"\r\n              dangerouslySetInnerHTML={{ __html: dataContent }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(DetailHandBook)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { withRouter } from \"react-router\";\r\nimport Select from \"react-select\";\r\nimport HomeHeader from \"../../HomeHeader\";\r\nimport \"./ViewMoreHandBook.scss\";\r\nimport { getAllHandBook } from \"../../../../services/userService\";\r\nimport Footer from \"../../Section/Footer\";\r\n\r\nclass ViewMoreHandBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listHandBook: [],\r\n      selectedHandBook: \"\",\r\n      listHandBookOptions: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllHandBook();\r\n    if (res && res.errCode === 0) {\r\n      let options = this.buildDataForSelectHandBook(res.data);\r\n\r\n      this.setState({\r\n        listHandBookOptions: options,\r\n        listHandBook: res.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  buildDataForSelectHandBook = (inputData) => {\r\n    let listOptions = [];\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.map((item, index) => {\r\n        let obj = {};\r\n        let label = `${item.name}`;\r\n        let value = item.id;\r\n        obj.value = value;\r\n        obj.label = label;\r\n        return listOptions.push(obj);\r\n      });\r\n    }\r\n    return listOptions;\r\n  };\r\n\r\n  componentDidUpdate() {}\r\n\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedHandBook: selectedOption });\r\n    let idHandBook = selectedOption.value;\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-handbook/${idHandBook}`);\r\n    }\r\n  };\r\n\r\n  goToViewDetail = (handbook) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-handbook/${handbook.id}`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { listHandBook, selectedHandBook, listHandBookOptions } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"detail-specialty-container\">\r\n          <HomeHeader />\r\n\r\n          <div className=\"detail-view-more-content container\">\r\n            <h1 className=\"title-content\">\r\n              <FormattedMessage id=\"manage-handbook.search\" />\r\n            </h1>\r\n            <Select\r\n              value={selectedHandBook}\r\n              onChange={this.handleChangeSelect}\r\n              options={listHandBookOptions}\r\n              name={\"selectedHandBook\"}\r\n              placeholder={<FormattedMessage id=\"manage-handbook.search\" />}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"detail-specialty-body\">\r\n            {listHandBook &&\r\n              listHandBook.length > 0 &&\r\n              listHandBook.map((item, index) => {\r\n                return (\r\n                  <div\r\n                    className=\"about-doctor more-handbook-container container\"\r\n                    key={index}\r\n                  >\r\n                    <div\r\n                      className=\"image-handBook-more\"\r\n                      style={{ backgroundImage: `url(${item.image})` }}\r\n                      onClick={() => this.goToViewDetail(item)}\r\n                    ></div>\r\n                    <div className=\"content-handBook-more\">\r\n                      <div\r\n                        className=\"name-handBook\"\r\n                        onClick={() => this.goToViewDetail(item)}\r\n                      >\r\n                        {item.name}\r\n                      </div>\r\n                      <div className=\"author-handBook\">\r\n                        <i className=\"fas fa-user\"></i>\r\n                        {item.author}\r\n                      </div>\r\n                      <div className=\"content-handBook\">\r\n                        <div\r\n                          dangerouslySetInnerHTML={{ __html: item.contentHTML }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(ViewMoreHandBook)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { LENGUAGES, CommonUtils } from \"../../../utils\";\r\nimport { withRouter } from \"react-router\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport \"./UserRedux.scss\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { userSignUp } from \"../../../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\nimport HomeHeader from \"../../HomePage/HomeHeader\";\r\nimport \"./SignUp.scss\";\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signUpSucceed: \"false\",\r\n      genderArr: [],\r\n      previewImg: \"\",\r\n      isOpen: false,\r\n      id: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      phonenumber: \"\",\r\n      gender: \"\",\r\n      position: \"P0\",\r\n      role: \"R3\",\r\n      avatar: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getGenderStart();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.gender !== this.props.gender) {\r\n      let arrGender = this.props.gender;\r\n      this.setState({\r\n        genderArr: this.props.gender,\r\n        gender: arrGender && arrGender.length > 0 ? arrGender[0].keyMap : \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleAddImg = async (e) => {\r\n    let data = e.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      let objectUrl = URL.createObjectURL(file);\r\n      this.setState({\r\n        previewImg: objectUrl,\r\n        avatar: base64,\r\n      });\r\n    }\r\n  };\r\n\r\n  showLightbox = () => {\r\n    if (!this.state.previewImg) return;\r\n    this.setState({\r\n      isOpen: true,\r\n    });\r\n  };\r\n\r\n  handleChangeInput = (e, id) => {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = e.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n    });\r\n  };\r\n\r\n  validateEmail = (email) => {\r\n    return String(email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  };\r\n\r\n  validatePassword = (password) => {\r\n    return String(password).match(\r\n      /^(?=.*\\p{Ll})(?=.*\\p{Lu})(?=.*[\\d|@#$!%*?&])[\\p{L}\\d@#$!%*?&]{6,36}$/gu\r\n    );\r\n  };\r\n\r\n  validatePhone = (number) => {\r\n    return /(03|05|07|08|09|01[2|6|8|9])+([0-9]{8})\\b/.test(number);\r\n  };\r\n\r\n  validInput = () => {\r\n    let isValid = true;\r\n    if (!this.validateEmail(this.state.email)) {\r\n      isValid = false;\r\n      alert(\"Vui lòng điền chính xác địa chỉ Email!!\");\r\n      return;\r\n    } else if (!this.validatePassword(this.state.password)) {\r\n      isValid = false;\r\n      alert(\r\n        \"Mật khẩu phải dài ít nhất 6 ký tự và phải chứa ít nhất 1 chữ in hoa, 1 chữ thường và 1 số !!\"\r\n      );\r\n      return;\r\n    } else if (this.state.password !== this.state.password2) {\r\n      alert(\"Vui lòng nhập lại chính xác mật khẩu !!\");\r\n      return;\r\n    } else if (!this.validatePhone(this.state.phonenumber)) {\r\n      isValid = false;\r\n      alert(\"Vui lòng điền chính xác số điện thoại !!\");\r\n      return;\r\n    } else {\r\n      let arr = [\"firstName\", \"lastName\", \"address\"];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (!this.state[arr[i]]) {\r\n          isValid = false;\r\n          alert(`Vui lòng điền đủ thông tin !!`);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let isValid = this.validInput();\r\n    if (isValid) {\r\n      let res = await userSignUp({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        firstName: this.state.firstName,\r\n        lastName: this.state.lastName,\r\n        address: this.state.address,\r\n        phonenumber: this.state.phonenumber,\r\n        gender: this.state.gender,\r\n        roleId: this.state.role,\r\n        positionId: this.state.position,\r\n        image: this.state.avatar,\r\n      });\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"Đăng ký thành công !!\");\r\n        this.setState({\r\n          signUpSucceed: true,\r\n        });\r\n      } else {\r\n        toast.error(\"Có lỗi xảy ra, vui lòng thử lại !!\");\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  goToLogin = () => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/login`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { genderArr } = this.state;\r\n    let language = this.props.language;\r\n    let file = this.state.previewImg;\r\n    let {\r\n      email,\r\n      password,\r\n      password2,\r\n      firstName,\r\n      lastName,\r\n      address,\r\n      phonenumber,\r\n      gender,\r\n      signUpSucceed,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <HomeHeader />\r\n        <div className=\"manage-container\">\r\n          <div className=\"manage-body container manage-container-signup\">\r\n            <div className=\"title mt-5\">Đăng ký</div>\r\n            {signUpSucceed === \"false\" ? (\r\n              <form className=\"row g-3 mt-3\">\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-user.email\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.handleChangeInput(e, \"email\")}\r\n                    value={email}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-user.password\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.handleChangeInput(e, \"password\")}\r\n                    value={password}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-user.password2\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.handleChangeInput(e, \"password2\")}\r\n                    value={password2}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-user.first-name\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.handleChangeInput(e, \"firstName\")}\r\n                    value={firstName}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-user.last-name\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.handleChangeInput(e, \"lastName\")}\r\n                    value={lastName}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-user.phonenumber\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.handleChangeInput(e, \"phonenumber\")}\r\n                    value={phonenumber}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-user.gender\" />\r\n                  </label>\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={(e) => this.handleChangeInput(e, \"gender\")}\r\n                    value={gender}\r\n                  >\r\n                    {genderArr &&\r\n                      genderArr.length > 0 &&\r\n                      genderArr.map((item, index) => {\r\n                        return (\r\n                          <option key={index} value={item.keyMap}>\r\n                            {language === LENGUAGES.VI\r\n                              ? item.valueVi\r\n                              : item.valueEn}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-user.address\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.handleChangeInput(e, \"address\")}\r\n                    value={address}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">\r\n                    <FormattedMessage id=\"manage-user.image\" />\r\n                  </label>\r\n                  <div className=\"input-img-container\">\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"input-img\"\r\n                      hidden\r\n                      onChange={(e) => this.handleAddImg(e)}\r\n                    />\r\n                    <label htmlFor=\"input-img\" className=\"img-label\">\r\n                      <FormattedMessage id=\"manage-user.upload\" />{\" \"}\r\n                      <i className=\"fas fa-upload\"></i>\r\n                    </label>\r\n                    {this.state.previewImg && (\r\n                      <div\r\n                        className=\"img-preview\"\r\n                        style={{ backgroundImage: `url(${file})` }}\r\n                        title=\"View Full\"\r\n                        onClick={() => this.showLightbox()}\r\n                      ></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary px-3 btn-submit\"\r\n                    onClick={(e) => this.handleSubmit(e)}\r\n                  >\r\n                    <FormattedMessage id=\"manage-user.sign-up\" />\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-cancel\"\r\n                    onClick={() => this.goToLogin()}\r\n                    style={{ height: \"40px\" }}\r\n                  >\r\n                    Huỷ\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            ) : (\r\n              <h3 className=\"text-center\" style={{ marginTop: \"90px\" }}>\r\n                Đăng ký thành công, bấm{\" \"}\r\n                <span\r\n                  onClick={() => this.goToLogin()}\r\n                  style={{\r\n                    textDecoration: \"underline\",\r\n                    color: \"blue\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  vào đây\r\n                </span>{\" \"}\r\n                để tới trang đăng nhập !!\r\n              </h3>\r\n            )}\r\n          </div>\r\n          {this.state.isOpen === true && (\r\n            <Lightbox\r\n              mainSrc={file}\r\n              onCloseRequest={() => this.setState({ isOpen: false })}\r\n            />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    gender: state.admin.genders,\r\n    position: state.admin.positions,\r\n    role: state.admin.roles,\r\n    listUsers: state.admin.users,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n    getPositionStart: () => dispatch(actions.fetchPositionStart()),\r\n    getRoleStart: () => dispatch(actions.fetchRoleStart()),\r\n    createUser: (data, token) => dispatch(actions.createUser(data, token)),\r\n    fetchUserRedux: () => dispatch(actions.fetchAllUserStart()),\r\n    editUser: (data, token) => dispatch(actions.editUser(data, token)),\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignUp));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ConnectedRouter as Router } from \"connected-react-router\";\r\nimport { history } from \"../redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  userIsAuthenticated,\r\n  userIsNotAuthenticated,\r\n} from \"../hoc/authentication\";\r\nimport { path } from \"../utils\";\r\nimport Home from \"../routes/Home\";\r\nimport Login from \"./Authentication/Login\";\r\nimport System from \"../routes/System\";\r\nimport HomePage from \"./HomePage/HomePage\";\r\nimport CustomScrollbars from \"../components/CustomScrollbars\";\r\nimport DetailDoctor from \"./HomePage/User_view/Doctor/DetailDoctor\";\r\nimport Doctor from \"../routes/Doctor\";\r\nimport VerifyEmail from \"./HomePage/User_view/VerifyEmail\";\r\nimport ForgotPW from \"./System/Admin/ForgotPW\";\r\nimport DetailSpecialty from \"./HomePage/User_view/Specialty/DetailSpecialty\";\r\nimport DetailClinic from \"./HomePage/User_view/Clinic/DetailClinic\";\r\nimport ViewMoreDoctor from \"./HomePage/User_view/Doctor/ViewMoreDoctor\";\r\nimport ViewMoreClinic from \"./HomePage/User_view/Clinic/ViewMoreClinic\";\r\nimport ViewMoreSpecialty from \"./HomePage/User_view/Specialty/ViewMoreSpecialty\";\r\nimport DetailHandBook from \"./HomePage/User_view/HandBook/DetailHandBook\";\r\nimport ViewMoreHandBook from \"./HomePage/User_view/HandBook/ViewMoreHandBook\";\r\nimport SignUp from \"./System/Admin/SignUp\";\r\nimport DetailUser from \"./HomePage/User_view/User/DetailUser\";\r\n\r\nclass App extends Component {\r\n  handlePersistorState = () => {\r\n    const { persistor } = this.props;\r\n    let { bootstrapped } = persistor.getState();\r\n    if (bootstrapped) {\r\n      if (this.props.onBeforeLift) {\r\n        Promise.resolve(this.props.onBeforeLift())\r\n          .then(() => this.setState({ bootstrapped: true }))\r\n          .catch(() => this.setState({ bootstrapped: true }));\r\n      } else {\r\n        this.setState({ bootstrapped: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handlePersistorState();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Router history={history}>\r\n          <div className=\"main-container\">\r\n            <div className=\"content-container\">\r\n              <CustomScrollbars style={{ height: \"100vh\", width: \"100%\" }}>\r\n                <Switch>\r\n                  <Route path={path.HOME} exact component={Home} />\r\n                  <Route path={path.HOMEPAGE} component={HomePage} />\r\n                  <Route\r\n                    path={path.LOGIN}\r\n                    component={userIsNotAuthenticated(Login)}\r\n                  />\r\n                  <Route\r\n                    path={path.SIGN_UP}\r\n                    component={userIsNotAuthenticated(SignUp)}\r\n                  />\r\n                  <Route\r\n                    path={path.SYSTEM}\r\n                    component={userIsAuthenticated(System)}\r\n                  />\r\n\r\n                  <Route\r\n                    path={\"/doctor/\"}\r\n                    component={userIsAuthenticated(Doctor)}\r\n                  />\r\n                  <Route path={path.DETAIL_DOCTOR} component={DetailDoctor} />\r\n                  <Route path={path.DETAIL_USER} component={DetailUser} />\r\n                  <Route\r\n                    path={path.VIEW_MORE_DOCTOR}\r\n                    component={ViewMoreDoctor}\r\n                  />\r\n                  <Route\r\n                    path={path.DETAIL_SPECIALTY}\r\n                    component={DetailSpecialty}\r\n                  />\r\n                  <Route\r\n                    path={path.VIEW_MORE_SPECIALTY}\r\n                    component={ViewMoreSpecialty}\r\n                  />\r\n                  <Route path={path.DETAIL_CLINIC} component={DetailClinic} />\r\n                  <Route\r\n                    path={path.VIEW_MORE_CLINIC}\r\n                    component={ViewMoreClinic}\r\n                  />\r\n                  <Route\r\n                    path={path.DETAIL_HANDBOOK}\r\n                    component={DetailHandBook}\r\n                  />\r\n                  <Route\r\n                    path={path.VIEW_MORE_HANDBOOK}\r\n                    component={ViewMoreHandBook}\r\n                  />\r\n\r\n                  <Route\r\n                    path={path.VERIFY_BOOKING_EMAIL}\r\n                    component={VerifyEmail}\r\n                  />\r\n                  <Route path={path.FORGOT_PW} component={ForgotPW} />\r\n                </Switch>\r\n              </CustomScrollbars>\r\n            </div>\r\n            <ToastContainer\r\n              position=\"top-right\"\r\n              autoClose={5000}\r\n              hideProgressBar={false}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnFocusLoss\r\n              draggable\r\n              pauseOnHover\r\n              theme=\"light\"\r\n            />\r\n            {/* Same as */}\r\n            <ToastContainer />\r\n          </div>\r\n        </Router>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    started: state.app.started,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { IntlProvider } from \"react-intl\";\r\n\r\nimport '@formatjs/intl-pluralrules/polyfill';\r\nimport '@formatjs/intl-pluralrules/locale-data/en';\r\nimport '@formatjs/intl-pluralrules/locale-data/vi';\r\n\r\nimport '@formatjs/intl-relativetimeformat/polyfill';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/vi';\r\n\r\nimport { LanguageUtils } from '../utils'\r\n\r\nconst messages = LanguageUtils.getFlattenedMessages();\r\n\r\nclass IntlProviderWrapper extends Component {\r\n\r\n    render() {\r\n        const { children, language } = this.props;\r\n        return (\r\n            <IntlProvider\r\n                locale={language}\r\n                messages={messages[language]}\r\n                defaultLocale=\"vi\">\r\n                {children}\r\n            </IntlProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(IntlProviderWrapper);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./styles/styles.scss\";\r\n\r\nimport App from \"./containers/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport IntlProviderWrapper from \"./hoc/IntlProviderWrapper\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport reduxStore, { persistor } from \"./redux\";\r\n\r\nconst renderApp = () => {\r\n  ReactDOM.render(\r\n    <Provider store={reduxStore}>\r\n      <IntlProviderWrapper>\r\n        <App persistor={persistor} />\r\n      </IntlProviderWrapper>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n};\r\n\r\nrenderApp();\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import axios from \"axios\";\r\n// import _ from \"lodash\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  // withCredentials: true\r\n});\r\n\r\ninstance.interceptors.response.use((response) => {\r\n  // Thrown error for request with OK status code\r\n  // const { data } = response;\r\n\r\n  return response.data;\r\n});\r\n\r\nexport default instance;\r\n","import axios from \"../axios\";\r\nconst handleLoginApi = (userEmail, userPassword) => {\r\n  return axios.post(\"/api/login\", { email: userEmail, password: userPassword });\r\n};\r\n\r\nconst getAllUsers = (userId, token) => {\r\n  return axios.get(`/api/get-all-users?id=${userId}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nconst handleGetUserByEmail = (email, token) => {\r\n  return axios.get(`/api/get-user-by-email?email=${email}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nconst getInfoUser = (userId) => {\r\n  return axios.get(`/api/home-get-all-users?id=${userId}`);\r\n};\r\n\r\nconst getAllDoctorForHome = () => {\r\n  return axios.get(`/api/home-get-all-doctocs`);\r\n};\r\n\r\nconst addUserService = (data, token) => {\r\n  return axios.post(\"/api/create-user\", data, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nconst userSignUp = (data) => {\r\n  return axios.post(\"/api/patient-create-user\", data);\r\n};\r\n\r\nconst deleteUserService = (userId, token) => {\r\n  return axios.delete(\"/api/delete-user\", {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n    data: { id: userId },\r\n  });\r\n};\r\n\r\nconst editUserService = (inputData, token) => {\r\n  return axios.put(\"/api/edit-user\", inputData, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nconst userEditInfo = (inputData) => {\r\n  return axios.put(\"/api/home-edit-user\", inputData);\r\n};\r\n\r\nconst getAllCodeService = (inputType) => {\r\n  return axios.get(`/api/allcode?type=${inputType}`);\r\n};\r\n\r\nconst getTopDoctorForHomeService = (limit) => {\r\n  return axios.get(`/api/top-doctor-home?limit=${limit}`);\r\n};\r\n\r\nconst getAllDoctorService = (token) => {\r\n  return axios.get(`/api/get-all-doctocs`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nconst saveInfoDoctorService = (data) => {\r\n  return axios.post(`/api/creat-info-doctor`, data);\r\n};\r\n\r\nconst getInfoDoctorService = (id) => {\r\n  return axios.get(`/api/get-info-doctor?id=${id}`);\r\n};\r\n\r\nconst getAllTimeService = (inputType) => {\r\n  return axios.get(`/api/allcode?type=${inputType}`);\r\n};\r\n\r\nconst saveScheduleService = (data) => {\r\n  return axios.post(\"/api/save-schedule\", data);\r\n};\r\n\r\nconst getScheduleDoctorService = (doctorId, date) => {\r\n  return axios.get(`/api/schedule-doctor?doctorId=${doctorId}&date=${date}`);\r\n};\r\n\r\nconst deleteScheduleDoctorService = (scheduleId) => {\r\n  return axios.delete(\"/api/delete-schedule-doctor\", {\r\n    data: { id: scheduleId },\r\n  });\r\n};\r\n\r\nconst getExtraDoctorInfoService = (doctorId) => {\r\n  return axios.get(`/api/extra-doctor-info?doctorId=${doctorId}`);\r\n};\r\n\r\nconst savePatientBooking = (data) => {\r\n  return axios.post(\"/api/patient-booking\", data);\r\n};\r\n\r\nconst postVerifyPatientBooking = (data) => {\r\n  return axios.post(\"/api/verify-patient-booking\", data);\r\n};\r\n\r\nconst saveSpecialtyService = (data, token) => {\r\n  return axios.post(\"/api/create-specialty\", data, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nconst getAllSpecialties = (token) => {\r\n  return axios.get(`/api/get-all-specialty`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nconst getAllSpecialtiesForHome = () => {\r\n  return axios.get(`/api/home-get-all-specialty`);\r\n};\r\n\r\nconst editSpecialtyService = (data) => {\r\n  return axios.put(\"/api/edit-specialty\", data);\r\n};\r\n\r\nconst deleteSpecialtyService = (specialtyId) => {\r\n  return axios.delete(\"/api/delete-specialty\", { data: { id: specialtyId } });\r\n};\r\n\r\nconst changePWService = (data) => {\r\n  return axios.post(\"/api/change-user-pw\", data);\r\n};\r\n\r\nconst forgotPWService = (data) => {\r\n  return axios.post(\"/api/forgot-pw\", data);\r\n};\r\n\r\nconst ConfirmForgotPWService = (data) => {\r\n  return axios.post(\"/api/verify-forgot-pw\", data);\r\n};\r\n\r\nconst getSpecialyById = (data) => {\r\n  return axios.get(\r\n    `/api/specialty-by-id?id=${data.id}&location=${data.location}`\r\n  );\r\n};\r\n\r\nconst saveClinicService = (data, token) => {\r\n  return axios.post(\"/api/create-clinic\", data, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nconst getAllClinic = (token) => {\r\n  return axios.get(`/api/get-all-clinic`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nconst getAllClinicForHome = () => {\r\n  return axios.get(`/api/home-get-all-clinic`);\r\n};\r\n\r\nconst editClinicService = (data) => {\r\n  return axios.put(\"/api/edit-clinic\", data);\r\n};\r\n\r\nconst deleteClinicService = (clinicId) => {\r\n  return axios.delete(\"/api/delete-clinic\", { data: { id: clinicId } });\r\n};\r\n\r\nconst getClinicById = (clinicId) => {\r\n  return axios.get(`/api/get-clinic-by-id?id=${clinicId}`);\r\n};\r\n\r\nconst getAppointmenDoctorService = (doctorId, date) => {\r\n  return axios.get(\r\n    `/api/get-appointment-doctor?doctorId=${doctorId}&date=${date}`\r\n  );\r\n};\r\n\r\nconst getHistoryDoctorService = (doctorId, date) => {\r\n  return axios.get(`/api/get-history-doctor?doctorId=${doctorId}&date=${date}`);\r\n};\r\n\r\nconst sendEmailToCustomer = (data) => {\r\n  return axios.post(\"/api/send-mail-to-customers\", data);\r\n};\r\n\r\nconst confirmAppointmentSucceed = (data) => {\r\n  return axios.post(\"/api/confirm-succeed-appointment\", data);\r\n};\r\n\r\nconst cancelAppointment = (data) => {\r\n  return axios.post(\"/api/cancel-appointment\", data);\r\n};\r\n\r\nconst patientCancelAppointment = (data) => {\r\n  return axios.post(\"/api/patient-cancel-appoinment\", data);\r\n};\r\n\r\nconst saveHandBookService = (data) => {\r\n  return axios.post(\"/api/create-handbook\", data);\r\n};\r\n\r\nconst getAllHandBook = (token) => {\r\n  return axios.get(`/api/get-all-handbook`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nconst editHandBookService = (data) => {\r\n  return axios.put(\"/api/edit-handbook\", data);\r\n};\r\n\r\nconst deleteHandBookService = (handBookId) => {\r\n  return axios.delete(\"/api/delete-handbook\", { data: { id: handBookId } });\r\n};\r\n\r\nconst getHandBookById = (handBookId) => {\r\n  return axios.get(`/api/get-handbook-by-id?id=${handBookId}`);\r\n};\r\n\r\nconst getPatientAppointmentService = (patientId) => {\r\n  return axios.get(`/api/get-patient-appoinment?patientId=${patientId}`);\r\n};\r\n\r\nconst postRating = (data) => {\r\n  return axios.post(\"/api/post-rating\", data);\r\n};\r\n\r\nconst getRating = (doctorId) => {\r\n  return axios.get(`/api/get-rating?doctorId=${doctorId}`);\r\n};\r\n\r\nexport {\r\n  handleLoginApi,\r\n  getAllUsers,\r\n  handleGetUserByEmail,\r\n  addUserService,\r\n  deleteUserService,\r\n  editUserService,\r\n  getAllCodeService,\r\n  getTopDoctorForHomeService,\r\n  getAllDoctorService,\r\n  saveInfoDoctorService,\r\n  getInfoDoctorService,\r\n  getAllTimeService,\r\n  saveScheduleService,\r\n  getScheduleDoctorService,\r\n  getExtraDoctorInfoService,\r\n  savePatientBooking,\r\n  postVerifyPatientBooking,\r\n  saveSpecialtyService,\r\n  getAllSpecialties,\r\n  editSpecialtyService,\r\n  deleteSpecialtyService,\r\n  deleteScheduleDoctorService,\r\n  changePWService,\r\n  forgotPWService,\r\n  ConfirmForgotPWService,\r\n  getSpecialyById,\r\n  saveClinicService,\r\n  getAllClinic,\r\n  editClinicService,\r\n  deleteClinicService,\r\n  getClinicById,\r\n  getAppointmenDoctorService,\r\n  sendEmailToCustomer,\r\n  confirmAppointmentSucceed,\r\n  getAllClinicForHome,\r\n  getAllSpecialtiesForHome,\r\n  getAllDoctorForHome,\r\n  saveHandBookService,\r\n  getAllHandBook,\r\n  editHandBookService,\r\n  deleteHandBookService,\r\n  getHandBookById,\r\n  cancelAppointment,\r\n  getHistoryDoctorService,\r\n  userSignUp,\r\n  userEditInfo,\r\n  getInfoUser,\r\n  getPatientAppointmentService,\r\n  postRating,\r\n  getRating,\r\n  patientCancelAppointment,\r\n};\r\n"],"sourceRoot":""}